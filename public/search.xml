<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[如何判断一个项目或者一个需求的价值]]></title>
      <url>http://zhangshengshan.github.io/2019/09/27/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%E9%9C%80%E6%B1%82%E7%9A%84%E4%BB%B7%E5%80%BC/</url>
      <content type="html"><![CDATA[<h1 id="&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;"><a href="#&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;" class="headerlink" title="&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;"></a>&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#x5728;&#x5B9E;&#x9645;&#x7684;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x9700;&#x6C42;&#xFF0C;&#x6216;&#x8005;&#x6539;&#x9020;&#x53EF;&#x80FD;&#x5728;&#x4E0D;&#x540C;&#x56E2;&#x961F;&#x4E4B;&#x95F4;&#x626F;&#x76AE;&#x3002;&#x95EE;&#x9898;&#x5982;&#x540C;&#x76AE;&#x7403;&#x4E00;&#x822C;&#x88AB;&#x8E22;&#x6765;&#x8E22;&#x53BB;&#xFF0C;&#x5C31;&#x662F;&#x5F97;&#x4E0D;&#x5230;&#x89E3;&#x51B3;&#x3002;&#x6BCF;&#x4E00;&#x65B9;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x8003;&#x91CF;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x57FA;&#x4E8E;&#x5229;&#x76CA;&#x3001;&#x6210;&#x672C;&#x3001;&#x98CE;&#x9669;&#x4EA6;&#x6216;&#x662F;&#x73B0;&#x5B9E;&#x72B6;&#x51B5;&#x6765;&#x770B;&#xFF0C;&#x90FD;&#x975E;&#x5E38;&#x6709;&#x9053;&#x7406;&#x3002;</div><div class="line"></div><div class="line">&#x5728;&#x8FD9;&#x6837;&#x7684;&#x573A;&#x666F;&#x4E0B;&#x8FDB;&#x884C;&#x6C9F;&#x901A;&#xFF0C;&#x534F;&#x5546;&#x65E0;&#x7591;&#x662F;&#x5F88;&#x56F0;&#x96BE;&#x7684;&#x3002; </div><div class="line"></div><div class="line">&#x6709;&#x4E00;&#x79CD;&#x5171;&#x8BC6;&#x53EF;&#x80FD;&#x5728;&#x5404;&#x65B9;&#x4E4B;&#x95F4;&#x5F62;&#x6210;&#x6DA6;&#x6ED1;&#x4F5C;&#x7528;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x6BD4;&#x8F83;&#x5408;&#x7406;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5411;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x8FB9;&#x9645;&#x6210;&#x672C;&#x6700;&#x4F4E;&#x201D;.</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaComments]]></title>
      <url>http://zhangshengshan.github.io/2019/09/24/JavaComments/</url>
      <content type="html"><![CDATA[<h1 id="JAVA-COMMENTS-TEMPLATES"><a href="#JAVA-COMMENTS-TEMPLATES" class="headerlink" title="JAVA COMMENTS TEMPLATES"></a>JAVA COMMENTS TEMPLATES</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @description $description$</div><div class="line">   $params$</div><div class="line"> * @author zhangshengshan</div><div class="line"> * @date $date$</div><div class="line"> * @return $return$</div><div class="line"> */</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">groovyScript(&quot;def result=&apos;&apos;; def params=\&quot;${_1}\&quot;.replaceAll(&apos;[\\\\[|\\\\]|\\\\s]&apos;, &apos;&apos;).split(&apos;,&apos;).toList(); for(i = 0; i &lt; params.size(); i++) {result+=&apos;\t* @param &apos; + params[i] + ((i &lt; params.size() - 1) ? &apos;\\n &apos; : &apos;&apos;)}; return result&quot;, methodParameters())</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[gradel2maven]]></title>
      <url>http://zhangshengshan.github.io/2019/09/04/gradel2maven/</url>
      <content type="html"><![CDATA[<h1 id="get-pom-xml-file-from-project-built-by-gradle"><a href="#get-pom-xml-file-from-project-built-by-gradle" class="headerlink" title="get pom.xml file from project built by gradle"></a>get pom.xml file from project built by gradle</h1><p><a href="https://www.cnblogs.com/chenhui7373/p/8598337.html" target="_blank" rel="external">&#x53C2;&#x8003;&#x6587;&#x6863;</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ScalaTest]]></title>
      <url>http://zhangshengshan.github.io/2019/08/06/ScalaTest/</url>
      <content type="html"><![CDATA[<h1 id="text"><a href="#text" class="headerlink" title="text"></a>text</h1><h1 id="text-1"><a href="#text-1" class="headerlink" title="text"></a>text</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[通俗语言解释Monad]]></title>
      <url>http://zhangshengshan.github.io/2019/07/25/%E9%80%9A%E4%BF%97%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8AMonad-1/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[通俗语言解释Monad]]></title>
      <url>http://zhangshengshan.github.io/2019/07/25/%E9%80%9A%E4%BF%97%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8AMonad/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[FpInScala读书笔记]]></title>
      <url>http://zhangshengshan.github.io/2019/07/10/FpInScala%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>FoldLeft&#x548C;FoldRight&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</li>
<li>&#x7EC3;&#x4E60;3.7&#x600E;&#x4E48;&#x89E3;&#xFF1F;</li>
<li>FoldRight &#x5982;&#x4F55;&#x901A;&#x8FC7;FoldLeft &#x6765;&#x5B9E;&#x73B0;&#xFF1F;</li>
<li>&#x300A;&#x804A;&#x804A;&#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x300B;</li>
<li>&#x300A;&#x804A;&#x804A;&#x5C3E;&#x9012;&#x5F52;, &#x662F;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9012;&#x5F52;&#x90FD;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#xFF0C; &#x5982;&#x679C;&#x662F;&#x600E;&#x4E48;&#x8BC1;&#x660E;&#xFF0C; &#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x600E;&#x4E48;&#x628A;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x7684;&#x9012;&#x5F52;&#x64CD;&#x4F5C;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x300B;</li>
<li>&#x300A;&#x804A;&#x804A;Scala&#x7684;Option&#x300B;</li>
<li>append two List</li>
<li>append List[List]</li>
<li>&#x5982;&#x4F55;&#x628A;ZipWith &#x6539;&#x6210;&#x5C3E;&#x9012;&#x5F52;&#x64CD;&#x4F5C;</li>
<li>List hasSubSequence &#x5982;&#x4F55;&#x8BBE;&#x8BA1;</li>
<li>&#x300A;&#x804A;&#x804A;Scala&#x7684;&#x578B;&#x53D8;&#x300B;</li>
<li>by name&#x548C;by value&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</li>
<li>Scala&#x4E3A;&#x5565;&#x8981;&#x5B9A;&#x4E49;Stream?</li>
<li>&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;fib Stream</li>
<li>monoid monad functor &#x6709;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#xFF1F;</li>
<li>foldRight By foldMap</li>
</ul>
<h2 id="&#x968F;&#x8BB0;"><a href="#&#x968F;&#x8BB0;" class="headerlink" title="&#x968F;&#x8BB0;"></a>&#x968F;&#x8BB0;</h2><p>&#x300A;Scala&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;&#x8FD9;&#x672C;&#x5C0F;&#x7EA2;&#x4E66;&#x5199;&#x7684;&#x771F;&#x7684;&#x662F;&#x6DF1;&#x5965;&#xFF0C;&#x8BFB;&#x8D77;&#x6765;&#x6BD4;&#x8F83;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#xFF0C; &#x540C;&#x5E02;&#x9762;&#x53D1;&#x884C;&#x7684;&#x5927;&#x90E8;&#x5206;&#x4E66;&#x7C4D;&#x76F8;&#x6BD4;&#xFF08;&#x5927;&#x90E8;&#x5206;&#x5173;&#x4E8E;Scala&#x7684;&#x4E66;&#x6211;&#x51E0;&#x4E4E;&#x90FD;&#x4E70;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x800C;&#x4E14;&#x9605;&#x8BFB;&#x8FC7;&#x4E00;&#x904D;&#xFF09;&#x660E;&#x663E;&#x4E0D;&#x540C;&#x3002; &#x672C;&#x4E66;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x601D;&#x60F3;&#x7684;&#x672C;&#x8EAB;&#xFF0C;&#x5BF9;&#x4E8E;&#x8BED;&#x8A00;&#x7279;&#x6027;&#x51E0;&#x4E4E;&#x7701;&#x7565;&#x4E86;&#x7B14;&#x58A8;&#xFF0C; &#x663E;&#x7136;&#x4E0D;&#x9002;&#x5408;&#x4E8E;&#x521D;&#x5B66;&#x8005;&#x9605;&#x8BFB;&#xFF0C; &#x6BD4;&#x8F83;&#x9002;&#x5408;&#x6709;&#x8FC7;Scala&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;&#x4E14;&#x597D;&#x4E8E;map filter foldLeft &#x8FD9;&#x4E9B;&#x7B97;&#x5B50;&#x80CC;&#x540E;&#x7684;&#x672C;&#x6E90;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x5DE5;&#x7A0B;&#x5E08;&#x9605;&#x8BFB;&#x3002;</p>
<p>&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x9605;&#x8BFB;&#x4E86;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#xFF08;1-6&#x7AE0;&#xFF09;&#xFF0C; &#x53EF;&#x4EE5;&#x8BF4;&#x7B2C;&#x4E00;&#x5230;&#x516D;&#x7AE0;&#x53EF;&#x4EE5;&#x7ED9;&#x8BFB;&#x8005;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x76F4;&#x89C2;&#x7684;&#x611F;&#x53D7;&#xFF0C; &#x8BA9;&#x8BFB;&#x8005;&#x5728;&#x8111;&#x6D77;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x5370;&#x8C61;&#xFF0C; &#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#xFF0C;&#x521D;&#x6B65;&#x4F53;&#x5473;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x7F16;&#x7A0B;&#x7684;&#x4F18;&#x52BF;&#xFF0C; &#x6BD4;&#x5982;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x53EF;&#x590D;&#x7528;&#xFF0C;&#x907F;&#x514D;&#x526F;&#x4F5C;&#x7528;&#x7B49;&#x3002;&#x5C55;&#x793A;&#x4E86; map flatMap&#x7B49;&#x8FD9;&#x79CD;&#x5E38;&#x89C1;&#x7684;&#x7B97;&#x5B50;&#x80CC;&#x540E;&#x7684;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x5F0F;&#x3002; </p>
<p>&#x76EE;&#x524D;&#x6B63;&#x5728;&#x9605;&#x8BFB;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#xFF0C; &#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x901A;&#x8FC7;&#x6848;&#x4F8B;&#x6765;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4F18;&#x52BF;&#xFF0C;&#x5728;&#x9605;&#x8BFB;&#x7684;&#x8FC7;&#x7A0B;&#x4E4B;&#x4E2D;&#xFF0C;&#x5DF2;&#x7ECF;&#x7A0D;&#x5FAE;&#x80FD;&#x591F;&#x611F;&#x53D7;&#x5230;&#x70B9;&#x96BE;&#x5EA6;&#xFF0C;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x3002; </p>
<p>&#x672C;&#x4E66;&#x5FAA;&#x5E8F;&#x6E10;&#x8FDB;&#xFF0C;&#x5E26;&#x9886;&#x4F60;&#x62BD;&#x4E1D;&#x5265;&#x8327;&#xFF0C;&#x771F;&#x795E;&#x4E66;&#x4E5F;&#xFF01;</p>
<p>2019&#x5E74; 7&#x6708;25&#x65E5; &#x661F;&#x671F;&#x56DB; 22&#x65F6;11&#x5206;57&#x79D2; CST<br>&#x81F3;&#x6B64;&#xFF0C; &#x672C;&#x795E;&#x4E66;&#x5DF2;&#x9605;&#x8BFB;&#x5B8C;&#x524D;3&#x90E8;&#x5206;&#x3002;&#x7B2C;&#x56DB;&#x90E8;&#x5206;&#x6682;&#x65F6;&#x4E0D;&#x518D;&#x7EE7;&#x7EED;&#x9605;&#x8BFB;&#x4E0B;&#x53BB;&#xFF0C; &#x6253;&#x7B97;&#x91CD;&#x6E29;&#x4E00;&#x4E0B;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x3002; &#x6B32;&#x901F;&#x5219;&#x4E0D;&#x8FBE;&#x3002; </p>
<h2 id="Monoid-Monad-Functor"><a href="#Monoid-Monad-Functor" class="headerlink" title="Monoid Monad Functor"></a>Monoid Monad Functor</h2><h2 id="&#x2013;-Functor-&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;"><a href="#&#x2013;-Functor-&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;" class="headerlink" title="&#x2013; Functor &#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;"></a>&#x2013; Functor &#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;</h2><p><a href="https://blog.knoldus.com/monads-are-they-really-that-complicated/" target="_blank" rel="external">&#x7B80;&#x7EC3;&#x89E3;&#x91CA;Functor Monoid Monad&#x7684;&#x542B;&#x4E49;&#x7684;&#x6587;&#x7AE0;</a><br><a href="https://thedet.wordpress.com/2012/04/28/functors-monads-applicatives-can-be-so-simple/" target="_blank" rel="external">&#x53E6;&#x4E00;&#x7BC7;&#x53C2;&#x8003;</a><br><a href="https://www.slideshare.net/knoldus/functors-applicatives-and-monads-in-scala" target="_blank" rel="external">Monad Slide</a><br><a href="https://segmentfault.com/a/1190000003882331" target="_blank" rel="external">&#x5199;&#x7ED9;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x8303;&#x7574;&#x8F6E;</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[聊聊Scala判等]]></title>
      <url>http://zhangshengshan.github.io/2019/07/03/%E8%81%8A%E8%81%8AScala%E5%88%A4%E7%AD%89/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[基础概率分布]]></title>
      <url>http://zhangshengshan.github.io/2019/06/22/%E5%9F%BA%E7%A1%80%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/</url>
      <content type="html"><![CDATA[<h2 id="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><ul>
<li>&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x662F;&#x6B63;&#x786E;&#x8BBE;&#x5B9A;&#x3002;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x7ED3;&#x679C;&#x548C;&#x68C0;&#x9A8C;&#x7ED3;&#x679C;&#x53EA;&#x6709;&#x7EDF;&#x8BA1;&#x610F;&#x4E49;&#x3002;&#x5373;&#x4FBF;&#x662F;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x7ED3;&#x679C;&#x5728;&#x7EDF;&#x8BA1;&#x610F;&#x4E49;&#x4E0A;&#x975E;&#x5E38;&#x663E;&#x8457;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5F88;&#x96BE;&#x8BF4;x&#x4E0E;y&#x4E4B;&#x95F4;&#x5C31;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#x67D0;&#x79CD;&#x663E;&#x8457;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x679C;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x8BBE;&#x5B9A;&#x9519;&#x8BEF;&#xFF0C;&#x5373;&#x4F7F;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7ED3;&#x679C;&#x663E;&#x8457;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x5F97;&#x5230;&#x6709;&#x610F;&#x4E49;&#x7684;&#x7ED3;&#x8BBA;&#x3002;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x4E0D;&#x80FD;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x8BBE;&#x5B9A;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#xFF0C;&#x53EA;&#x80FD;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x9A8C;&#x8BC1;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x3002;[<a href="https://zhuanlan.zhihu.com/p/45427806]" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/45427806]</a></li>
<li>&#x81EA;&#x53D8;&#x91CF;&#x65B9;&#x5DEE;&#x8D8B;&#x8FD1;&#x4E8E;&#x4E00;&#x4E2A;&#x975E;&#x96F6;&#x6709;&#x9650;&#x5E38;&#x6570;&#x3002; &#x5982;&#x679C;X&#x7684;&#x65B9;&#x5DEE;&#x8D8B;&#x8FD1;&#x4E8E;&#x65E0;&#x7A77;&#xFF0C;&#x5219;X&#x548C;Y&#x7684;&#x76F8;&#x5173;&#x7CFB;&#x6570;&#x8D8B;&#x5411;&#x4E8E;0&#xFF0C; &#x5219;X&#x548C;Y&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x3002;</li>
<li>&#x6B8B;&#x5DEE;&#xFF08;&#x968F;&#x673A;&#x6270;&#x52A8;&#xFF09;&#x671F;&#x671B;&#x4E3A;0 &#xFF0C;&#x65B9;&#x5DEE;&#x76F8;&#x540C;&#xFF0C; &#x4E14;&#x5728;&#x6837;&#x672C;&#x91CF;&#x8D8B;&#x4E8E;&#x65E0;&#x7A77;&#x7684;&#x60C5;&#x51B5;&#x7CFB;&#x670D;&#x4ECE;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x3002;</li>
</ul>
<h2 id="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;"><a href="#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;" class="headerlink" title="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;</h2><h2 id="&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;"><a href="#&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;" class="headerlink" title="&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;?"></a>&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;?</h2><h2 id="&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C;-&#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C;-&#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;"><a href="#&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C;-&#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C;-&#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;" class="headerlink" title="&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C; &#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C; &#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;"></a>&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C; &#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C; &#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;</h2><h2 id="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;"><a href="#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;" class="headerlink" title="&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;</h2><h2 id="&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;"><a href="#&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;" class="headerlink" title="&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;"></a>&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</h2><h2 id="&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;"><a href="#&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;" class="headerlink" title="&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;"></a>&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;</h2><h2 id="&#x53C2;&#x8003;&#x6587;&#x732E;"><a href="#&#x53C2;&#x8003;&#x6587;&#x732E;" class="headerlink" title="&#x53C2;&#x8003;&#x6587;&#x732E;"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h2><p><a href="https://blog.csdn.net/Noob_daniel/article/details/76087829" target="_blank" rel="external">&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x4E94;&#x4E2A;&#x5047;&#x8BBE;</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[reflction_on_data_develop_ahout_4_years]]></title>
      <url>http://zhangshengshan.github.io/2019/05/30/reflction-on-data-develop-ahout-4-years/</url>
      <content type="html"><![CDATA[<p># </p>
<p>#</p>
<p>#</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书清单]]></title>
      <url>http://zhangshengshan.github.io/2019/05/22/%E8%AF%BB%E4%B9%A6%E6%B8%85%E5%8D%95/</url>
      <content type="html"><![CDATA[<h1 id="&#x8BFB;&#x4E66;&#x6E05;&#x5355;"><a href="#&#x8BFB;&#x4E66;&#x6E05;&#x5355;" class="headerlink" title="&#x8BFB;&#x4E66;&#x6E05;&#x5355;"></a>&#x8BFB;&#x4E66;&#x6E05;&#x5355;</h1><table>
<thead>
<tr>
<th>&#x4E66;&#x540D;</th>
<th>&#x8BFB;&#x4E66;&#x8BA1;&#x5212;</th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x300A;&#x7CBE;&#x901A;&#x7279;&#x5F81;&#x5DE5;&#x7A0B;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Python&#x7EDF;&#x8BA1;&#x5206;&#x6790;&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;&#x6027;&#x80FD;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Hadoop&#x6743;&#x5A01;&#x6307;&#x5357;&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;MapReduce&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Spring&#x5B9E;&#x6218;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Akka&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;JVM&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;JAVA&#x6027;&#x80FD;&#x8C03;&#x4F18;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Hbase&#x6743;&#x5A01;&#x6307;&#x5357;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;&#x56FE;&#x89E3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x6570;&#x636E;&#x4E4B;&#x4E8C;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Scala&#x96C6;&#x5408;&#x6280;&#x672F;&#x624B;&#x518C;&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;&#x9AD8;&#x6027;&#x80FD;Scala&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;Scala&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Scala&#x7F16;&#x7A0B;&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;Scala&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x300B;</td>
<td>Done</td>
</tr>
<tr>
<td>&#x300A;&#x56FE;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Scala&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Gof&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;&#x56FE;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;Scala Machine Learning&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;&#x7B97;&#x6CD5;&#x300B;</td>
<td>b</td>
</tr>
<tr>
<td>&#x300A;JAVA&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;</td>
<td>b</td>
</tr>
</tbody>
</table>
<ul>
<li>&#x300A;&#x804A;&#x804A;&#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x300B;</li>
<li>&#x300A;&#x804A;&#x804A;&#x5C3E;&#x9012;&#x5F52;, &#x662F;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9012;&#x5F52;&#x90FD;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#xFF0C; &#x5982;&#x679C;&#x662F;&#x600E;&#x4E48;&#x8BC1;&#x660E;&#xFF0C; &#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x600E;&#x4E48;&#x628A;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x7684;&#x9012;&#x5F52;&#x64CD;&#x4F5C;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x300B;</li>
<li>&#x300A;Scala&#x7684;Option&#x300B;</li>
<li>FoldLeft &#x548C; FoldRight&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Scala并发编程读书笔记]]></title>
      <url>http://zhangshengshan.github.io/2019/04/23/Scala%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="text"><a href="#text" class="headerlink" title="text"></a>text</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ScalaList是线程安全的吗？]]></title>
      <url>http://zhangshengshan.github.io/2019/04/09/ScalaList%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%90%97%EF%BC%9F/</url>
      <content type="html"><![CDATA[<h1 id="Scala-List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;"><a href="#Scala-List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;" class="headerlink" title="Scala List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;"></a>Scala List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;</h1><h1 id="&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C;-&#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;"><a href="#&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C;-&#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;" class="headerlink" title="&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C; &#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;"></a>&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C; &#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[是现成安全的吗？]]></title>
      <url>http://zhangshengshan.github.io/2019/04/09/%E6%98%AF%E7%8E%B0%E6%88%90%E5%AE%89%E5%85%A8%E7%9A%84%E5%90%97%EF%BC%9F/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[JVM性能监控]]></title>
      <url>http://zhangshengshan.github.io/2018/07/27/JVM%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/</url>
      <content type="html"><![CDATA[<h1 id="JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;"><a href="#JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;" class="headerlink" title="JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;"></a>JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JVMGC]]></title>
      <url>http://zhangshengshan.github.io/2018/07/25/JVMGC/</url>
      <content type="html"><![CDATA[<h1 id="JVM-GC"><a href="#JVM-GC" class="headerlink" title="JVM GC"></a>JVM GC</h1><h2 id="OopMap-&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#OopMap-&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="OopMap &#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>OopMap &#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>HotSpot &#x91C7;&#x7528;OopMap &#x6765;&#x8BB0;&#x5F55;&#x5F15;&#x7528;&#x4F4D;&#x7F6E;&#xFF0C;&#x5728;OopMap &#x7684;&#x5E2E;&#x52A9;&#x4E0B;&#xFF0C;HotSpot &#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x5B8C;&#x6210;GC Roots&#x679A;&#x4E3E;&#x3002;</p>
<h2 id="safePoint-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#safePoint-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="safePoint &#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>safePoint &#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>safePoint &#x662F;&#x4FEE;&#x6539;OopMap &#x7684;&#x4F4D;&#x7F6E;&#x3002;GC&#x7EBF;&#x7A0B;&#x8BBE;&#x7F6E;&#x6807;&#x5FD7;&#xFF0C;&#x5404;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x65F6;&#x5019;&#x8F6E;&#x8BAD;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x81EA;&#x884C;&#x6302;&#x8D77;&#x3002; </p>
<h2 id="&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;"><a href="#&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;" class="headerlink" title="&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;"></a>&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;</h2><ul>
<li>Serial GC &#x9ED8;&#x8BA4;&#x65B9;&#x6848;&#xFF0C;&#x9002;&#x5408;&#x5355;CPU&#x573A;&#x666F;&#x3002; </li>
<li>Serial OLD &#x662F;CMS&#x65B9;&#x6848;&#x7684;Failure&#x5907;&#x7528;&#x65B9;&#x6848;&#x3002;</li>
<li>parNew GC &#x9002;&#x5408;&#x591A;CPU&#x673A;&#x5668;&#x4EE5;&#x53CA;&#x548C;CMS &#x8001;&#x5E74;&#x4EE3;&#x56DE;&#x6536;&#x914D;&#x5408;&#x4F7F;&#x7528;&#x3002;</li>
<li>CMS &#x76EE;&#x7684;&#x662F;&#x77ED;&#x56DE;&#x6536;&#x505C;&#x987F;&#x3002;</li>
<li>Parallel Scavenge &#x5173;&#x6CE8;&#x65B0;&#x751F;&#x4EE3;&#x7684;&#x541E;&#x5410;&#x91CF;</li>
<li>Parallel OLD &#x914D;&#x5408;Parallel Scavenge&#x4E00;&#x8D77;&#x4F7F;&#x7528;, &#x5173;&#x6CE8;&#x541E;&#x5410;&#x91CF;&#x3002; </li>
</ul>
<h2 id="CMS-&#x56DB;&#x4E2A;&#x9636;&#x6BB5;"><a href="#CMS-&#x56DB;&#x4E2A;&#x9636;&#x6BB5;" class="headerlink" title="CMS &#x56DB;&#x4E2A;&#x9636;&#x6BB5;"></a>CMS &#x56DB;&#x4E2A;&#x9636;&#x6BB5;</h2><ul>
<li>&#x521D;&#x59CB;&#x6807;&#x8BB0; &#x6807;&#x8BB0;&#x4E00;&#x4E0B;GC ROOTS&#x76F4;&#x63A5;&#x5173;&#x8054;&#x7684;&#x5BF9;&#x8C61; &#x5728;&#x6B64;&#x9636;&#x6BB5;&#x4F1A;&#x8FDB;&#x884C;STW&#x3002;</li>
<li>&#x5E76;&#x53D1;&#x6807;&#x8BB0; &#x5728;&#x521D;&#x59CB;&#x6807;&#x8BB0;&#x7684;&#x57FA;&#x7840;&#x4E4B;&#x4E0A; &#x8FDB;&#x884C;&#x5E76;&#x53D1;&#x5730;Tracing&#x3002;</li>
<li>&#x91CD;&#x65B0;&#x6807;&#x8BB0; &#x4FEE;&#x6B63;&#x5728;&#x5E76;&#x53D1;&#x6807;&#x8BB0;&#x9636;&#x6BB5;&#x7528;&#x6237;&#x7A0B;&#x5E8F;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x9636;&#x6BB5;&#x5BFC;&#x81F4;&#x7684;&#x53D8;&#x52A8;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x8BB0;&#x5F55; &#x5728;&#x6B64;&#x9636;&#x6BB5;&#x5C06;&#x4F1A;&#x8FDB;&#x884C;STW&#x3002;</li>
<li>&#x5E76;&#x53D1;&#x6E05;&#x9664; &#x57FA;&#x4E8E;&#x6807;&#x8BB0;-&#x6E05;&#x9664;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x56DE;&#x6536;&#x3002; </li>
</ul>
<h2 id="CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;"><a href="#CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;" class="headerlink" title="CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;"></a>CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;</h2><p>CPU&#x654F;&#x611F;<br>Concurrent Mode Failure<br>&#x6BCF;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4F1A;&#x4E00;&#x6B21;Full GC  &#x6574;&#x7406;&#x5185;&#x5B58;&#x7684;&#x788E;&#x7247;&#x3002; </p>
<h2 id="Concurrent-Mode-Failure-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;"><a href="#Concurrent-Mode-Failure-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;" class="headerlink" title="Concurrent Mode Failure &#x662F;&#x4EC0;&#x4E48;&#xFF1F;"></a>Concurrent Mode Failure &#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>CMS&#x6709;&#x53EF;&#x80FD;&#x6709;&#x5783;&#x573E;&#x5728;&#x5783;&#x573E;&#x6807;&#x8BB0;&#x9636;&#x6BB5;&#x4EA7;&#x751F;&#x6216;&#x8005;&#x5728;&#x5783;&#x573E;&#x6E05;&#x7406;&#x9636;&#x6BB5;&#x4EA7;&#x751F;&#xFF0C;&#x56E0;&#x6B64;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x8FD9;&#x90E8;&#x5206;&#x5783;&#x573E;&#x4F1A;&#x7559;&#x5F85;&#x4E0B;&#x4E00;&#x6B21;&#x7684;GC&#x8FC7;&#x7A0B;&#x6E05;&#x7406;&#x6389;&#x3002; &#x5982;&#x679C;&#x6B64;&#x65F6;&#x4E0D;&#x80FD;&#x4E3A;&#x8FD9;&#x90E8;&#x5206;&#x5783;&#x573E;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x5C06;&#x4F1A;&#x4EA7;&#x751F;&#x8BE5;Concurrent Mode Failure, &#x6B64;&#x65F6;&#x5C06;&#x4F1A;&#x5F03;&#x7528;Serial OLD&#x6536;&#x96C6;&#x5668;&#x6765;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x3002; </p>
<h2 id="G1-&#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;"><a href="#G1-&#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;" class="headerlink" title="G1 &#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;"></a>G1 &#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;</h2><ul>
<li>&#x5145;&#x5206;&#x5229;&#x7528;&#x5E76;&#x53D1;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x6709;STW</li>
<li>&#x4ECD;&#x7136;&#x5206;&#x4EE3;&#xFF0C;&#x4F46;&#x662F;&#x4EE5;Region&#x4E3A;&#x5355;&#x4F4D;&#xFF0C;&#x7269;&#x7406;&#x4E0D;&#x8FDE;&#x7EED;&#x3002; </li>
<li>&#x6574;&#x4F53;&#x4E0A;&#x662F;&#x6807;&#x8BB0;&#x6574;&#x7406;&#xFF0C;&#x5C40;&#x90E8;&#x4E0A;&#x770B;&#x662F;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#x3002; </li>
<li>&#x505C;&#x987F;&#x53EF;&#x9884;&#x6D4B;&#x3002;&#x907F;&#x514D;&#x6BCF;&#x6B21;&#x56DE;&#x6536;&#x5806;&#x7684;&#x6574;&#x4F53;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x53EF;&#x4EE5;&#x6BCF;&#x4E00;&#x4E2A;Region&#x7684;&#x5783;&#x573E;&#x56DE;&#x6536;&#x4EF7;&#x503C;&#x7684;&#x5927;&#x5C0F;&#x3002; </li>
</ul>
<h2 id="Remember-Set-&#x4F5C;&#x7528;"><a href="#Remember-Set-&#x4F5C;&#x7528;" class="headerlink" title="Remember Set &#x4F5C;&#x7528;"></a>Remember Set &#x4F5C;&#x7528;</h2><p>&#x6BCF;&#x4E00;&#x4E2A;Region  &#x5BF9;&#x5E94;&#x4E00;&#x4E2A;Remember Set. &#x5728;&#x5BF9;Reference &#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x8BFB;&#x5199;&#x7684;&#x65F6;&#x5019;&#xFF0C; JVM&#x4F1A;&#x4E2D;&#x65AD;&#x5199;&#x64CD;&#x4F5C;&#xFF0C; &#x5728;&#x88AB;&#x5E94;&#x7528;&#x5BF9;&#x8C61;&#x7684;Region &#x7684;&#x5BF9;&#x8C61;&#x7684;RSet&#x4E2D;&#x8BB0;&#x5F55;&#x4E0A;&#x548C;&#x4ED6;&#x6709;&#x5173;&#x7CFB;&#x7684;&#x5176;&#x4ED6;&#x7684;Region&#x4FE1;&#x606F;&#x3002; &#x8FD9;&#x6837;&#x5728;GCroots&#x6807;&#x8BB0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x907F;&#x514D;&#x6574;&#x4E2A;&#x5806;&#x7684;&#x626B;&#x63CF;&#x3002;</p>
<h2 id="&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;"><a href="#&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;" class="headerlink" title="&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;"></a>&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;</h2><ul>
<li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x4F1A;&#x5360;&#x7528;&#x5B83;&#x52A0;&#x8F7D;&#x7684;&#x6240;&#x6709;&#x7C7B;&#x548C;&#x5B83;&#x4EEC;&#x6240;&#x6709;&#x7684;&#x9759;&#x6001;&#x57DF;&#x3002;&#x9759;&#x6001;&#x57DF;&#x901A;&#x5E38;&#x542B;&#x6709;&#x7F13;&#x5B58;&#x3001;&#x5355;&#x4F8B;&#x5BF9;&#x8C61;&#x548C;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x7F6E;&#x4EE5;&#x53CA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002;&#x5373;&#x4F7F;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6CA1;&#x6709;&#x4E00;&#x4E9B;&#x5927;&#x7684;&#x9759;&#x6001;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x4E5F;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x6846;&#x67B6;&#x4E0D;&#x5360;&#x7528;&#x7740;&#x5B83;&#x4EEC;&#xFF08;&#x5982;Log4J&#x662F;&#x4E00;&#x79CD;&#x5E38;&#x89C1;&#x7684;&#x7F6A;&#x9B41;&#x7978;&#x9996;,&#x56E0;&#x4E3A;&#x5B83;&#x901A;&#x5E38;&#x662F;&#x653E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7C7B;&#x8DEF;&#x5F84;&#x4E2D;)&#x3002;&#x8FD9;&#x5C31;&#x8BF4;&#x660E;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x7684;&#x4EE3;&#x4EF7;&#x4F1A;&#x5F88;&#x5927;&#x3002;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReinforcementLearning]]></title>
      <url>http://zhangshengshan.github.io/2018/07/05/ReinforcementLearning/</url>
      <content type="html"><![CDATA[<h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p>test</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DebugSparkWithIntelliy]]></title>
      <url>http://zhangshengshan.github.io/2018/06/01/DebugSparkWithIntelliy/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[GitSyncWithForkedRep]]></title>
      <url>http://zhangshengshan.github.io/2018/05/31/GitSyncWithForkedRep/</url>
      <content type="html"><![CDATA[<p>to sync with the repo you&#x2019;ve forked , refer the following cammands <a href="https://help.github.com/articles/syncing-a-fork" target="_blank" rel="external">cammands</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[LDA现行判别分析]]></title>
      <url>http://zhangshengshan.github.io/2018/03/21/LDA%E7%8E%B0%E8%A1%8C%E5%88%A4%E5%88%AB%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/27899927?group_id=869893271453863936" target="_blank" rel="external">&#x53C2;&#x8003;&#x6587;&#x7AE0;</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Latex]]></title>
      <url>http://zhangshengshan.github.io/2018/02/23/Latex/</url>
      <content type="html"><![CDATA[<p>$$<br>\alpha \alpha \alpha \alpha \alpha \alpha \alpha \alpha \alpha \alpha \arcsin \ddot{}<br>$$</p>
<p>$$<br>h^{ \arctan ^{ x }{ y }  }\left( x \right)<br>$$</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于支持向量机的几个问题]]></title>
      <url>http://zhangshengshan.github.io/2018/02/20/%E5%85%B3%E4%BA%8E%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;"><a href="#&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;" class="headerlink" title="&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;"></a>&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;</h1><ul>
<li>&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x539F;&#x59CB;&#x95EE;&#x9898;&#x4E3A;&#x5565;&#x8981;&#x8F6C;&#x6362;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x6C42;&#x89E3;<br>&#x975E;&#x5FC5;&#x987B;&#xFF0C;&#x4F46;&#x662F;&#x8F6C;&#x5316;&#x5BF9;&#x5076;&#x6761;&#x4EF6;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x8BA1;&#x7B97;&#x3002;&#x8F6C;&#x5316;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x8BA1;&#x7B97;&#x53EF;&#x4EE5;&#x5C06;&#x6709;&#x7EA6;&#x675F;&#x7684;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x4E3A;&#x65E0;&#x7EA6;&#x675F;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x901A;&#x8FC7;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5C06;&#x9488;&#x5BF9;x&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x653E;&#x5230;&#x4F18;&#x5316;&#x7684;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x3002;&#x5BF9;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x800C;&#x8A00;&#xFF0C;&#x8F6C;&#x5316;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x4EE5;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;platt&#x63D0;&#x51FA;&#x7684;SMO&#x7B97;&#x6CD5;&#xFF0C;&#x9488;&#x5BF9;alpha&#xFF08;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x7B97;&#x5B50;&#xFF09;&#x8FDB;&#x884C;&#x542F;&#x53D1;&#x5F0F;&#x7684;&#x6C42;&#x89E3;&#xFF0C;&#x5B58;&#x5728;&#x89E3;&#x6790;&#x89E3;&#xFF0C;&#x6548;&#x7387;&#x9AD8;&#x3002;</li>
<li>&#x4E3A;&#x5565;&#x8981;&#x6784;&#x9020;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5F0F;<br>&#x901A;&#x8FC7;&#x6784;&#x9020;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5F0F;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x5728;&#x539F;&#x4F18;&#x5316;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x53EF;&#x884C;&#x57DF;&#x7B49;&#x540C;&#x4E8E;&#x539F;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x975E;&#x53EF;&#x884C;&#x57DF;&#x4E0A;&#x8D8B;&#x8FD1;&#x65E0;&#x7A77;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002;</li>
<li>&#x4E3A;&#x5565;&#x4E0D;&#x8BBA;&#x539F;&#x95EE;&#x9898;&#x662F;&#x51F8;&#x7684;&#xFF0C;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x4E00;&#x5B9A;&#x4F1A;&#x662F;&#x51F8;&#x7684;&#xFF1F;</li>
<li>&#x5F3A;&#x5BF9;&#x5076;&#x6027;&#x624D;&#x80FD;&#x591F;&#x5728;SVM&#x95EE;&#x9898;&#x4E2D;&#x6210;&#x7ACB;<br><img src="/myimages/WX20180302-140428.png" alt="&#x5F3A;&#x5BF9;&#x5076;&#x6027;&#x6210;&#x7ACB;&#x6761;&#x4EF6;"><br><strong>&#x4E0A;&#x9762;&#x6587;&#x4EF6;&#x622A;&#x53D6;&#x81EA;&#x77E5;&#x4E4E;&#x6587;&#x7AE0;&#xFF1A;<a href="https://zhuanlan.zhihu.com/p/24638007" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/24638007</a></strong></li>
<li>KKT&#x6761;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;</li>
<li>SMO&#x7B97;&#x6CD5;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5565;, &#x4ECE;&#x4E00;&#x4E9B;&#x5217;&#x7684;&#x5BF9;&#x5076;&#x53D8;&#x91CF;&#x4E2D;&#x6311;&#x9009;&#x51FA;&#x4E24;&#x4E2A;&#x8FDB;&#x884C;&#x6C42;&#x89E3;&#xFF0C;&#x539F;&#x5219;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x6311;&#x9009;&#x8FDD;&#x53CD;KKT&#x6761;&#x4EF6;&#x6700;&#x4E25;&#x91CD;&#x7684;&#x70B9;&#xFF1F;</li>
<li>&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x51FD;&#x6570;&#x6210;&#x4E3A;&#x6838;&#x51FD;&#x6570;&#xFF0C;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x5F15;&#x5165;&#x6838;&#x51FD;&#x6570;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>
<li>&#x5F15;&#x5165;&#x8F6F;&#x95F4;&#x9694;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x5199;&#xFF0C;&#x6B63;&#x5219;&#x9879;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>
<li>&#x4E3A;&#x5565;Hinge&#x635F;&#x5931;&#x51FD;&#x6570;&#x80FD;&#x591F;&#x4FDD;&#x8BC1;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x89E3;&#x7684;&#x7A00;&#x758F;&#x6027;</li>
<li>&#x652F;&#x6301;&#x5411;&#x91CF;&#x56DE;&#x5F52;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>
<li>&#x9AD8;&#x65AF;&#x6838;&#x7684;gamma&#x7684;&#x542B;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x600E;&#x4E48;&#x7406;&#x89E3;&#xFF1F;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Install_cuda9.0_cudnn7.0_tensorflow1.5_onUbuntu16.04_GTX1080TI]]></title>
      <url>http://zhangshengshan.github.io/2018/02/13/Install-cuda9-0-cudnn7-0-tensorflow1-5-onUbuntu16-04-GTX1080TI/</url>
      <content type="html"><![CDATA[<h1 id="How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0"><a href="#How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0" class="headerlink" title="How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0"></a>How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0</h1><h2 id="1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;"><a href="#1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;" class="headerlink" title="1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;"></a>1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;</h2><p>&#x5B89;&#x88C5;tensorflow&#x9996;&#x5148;&#x8981;&#x767B;&#x9646;tensorflow&#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x9605;&#x8BFB;&#x5BF9;&#x5E94;&#x7684;&#x6307;&#x5BFC;&#x6587;&#x6863;<a href="https://www.tensorflow.org/install/install_linux" target="_blank" rel="external">Install On Ubuntu</a><br><img src="/myimages/WX20180213-143853.png" alt="&#x5B89;&#x88C5;&#x6587;&#x6863;&#x56FE;&#x7247;"><br><strong>&#x6CE8;&#x610F;&#x7531;&#x4E8E;&#x6587;&#x6863;&#x4E0A;&#x9762;&#x5199;&#x7684;&#x662F;9.0&#x7248;&#x672C;&#xFF0C;&#x76EE;&#x524D;nvidia&#x5B98;&#x65B9;&#x7684;Cuda&#x7248;&#x672C;&#x4E3A;9.1&#xFF0C;&#x6700;&#x597D;&#x662F;&#x91C7;&#x7528;&#x548C;tensorflow&#x6587;&#x6863;&#x5BF9;&#x5E94;&#x7684;9.0&#x7248;&#x672C;&#xFF0C;&#x592A;&#x65B0;&#x7684;&#x7248;&#x672C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5404;&#x79CD;&#x672A;&#x77E5;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7B14;&#x8005;&#x6700;&#x5F00;&#x59CB;&#x9009;&#x62E9;9.1&#x7248;&#x672C;&#xFF0C;&#x9047;&#x5230;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x7EC8;&#x9009;&#x62E9;&#x548C;&#x5B98;&#x7F51;&#x4E00;&#x81F4;&#x7684;&#x7248;&#x672C;&#x5F97;&#x4EE5;&#x89E3;&#x51B3;&#x3002;</strong></p>
<h2 id="2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9-0"><a href="#2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9-0" class="headerlink" title="2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9.0"></a>2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9.0</h2><p><img src="/myimages/WX20180213-145246.png" alt="Cuda&#x5B89;&#x88C5;&#x6587;&#x6863;"><br><strong>&#x5728;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E86;gcc&#x7248;&#x672C;&#x592A;&#x9AD8;&#x7684;&#x62A5;&#x9519;&#xFF0C;&#x540E;&#x6765;&#x4ED4;&#x7EC6;&#x5BF9;&#x7167;&#x4E86;&#x56FE;&#x4E2D;&#x7684;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x53D1;&#x73B0;&#xFF0C;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x7684;&#x7248;&#x672C;&#x662F;Kernel4.4 &#x548C;gcc-4.3.1, &#x6211;&#x89E3;&#x51B3;&#x7684;&#x65B9;&#x6848;&#x662F;&#x4E0B;&#x8F7D;gcc&#x6E90;&#x4EE3;&#x7801;&#x81EA;&#x884C;&#x5B89;&#x88C5;&#xFF0C;&#x6E90;&#x7801;&#x5B89;&#x88C5;gcc &#x7684;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x53C2;&#x7167;&#x7F51;&#x4E0A;&#x53C2;&#x8003;&#x8D44;&#x6599;&#x548C;gcc&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x5728;&#x6B64;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;</strong><br><img src="/myimages/WX20180213-150211.png" alt="&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;"><br><strong>&#x56FE;&#x7247;&#x4E2D;&#x622A;&#x56FE;&#x5B89;&#x88C5;&#x524D;&#x540E;&#x90FD;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x5B9A;&#x7684;&#x9A8C;&#x8BC1;&#x64CD;&#x4F5C;&#xFF0C;&#x8FC7;&#x7A0B;&#x8BF7;&#x53C2;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;</strong></p>
<h2 id="&#x5B89;&#x88C5;cudnn"><a href="#&#x5B89;&#x88C5;cudnn" class="headerlink" title="&#x5B89;&#x88C5;cudnn"></a>&#x5B89;&#x88C5;cudnn</h2><p>&#x9996;&#x5148;&#x8981;&#x6CE8;&#x610F;&#x4E0B;&#x8F7D;&#x6B63;&#x786E;&#x7684;&#x7248;&#x672C;&#x7684;cudnn, <strong><a href="https://developer.nvidia.com/rdp/cudnn-download#a-collapse705-9" target="_blank" rel="external">Download cuDNN v7.0.5 (Dec 5, 2017), for CUDA 9.0</a></strong>,&#x7136;&#x540E;&#x9009;&#x62E9;&#x9605;&#x8BFB;&#x5BF9;&#x5E94;&#x7684;&#x5B89;&#x88C5;&#x6587;&#x6863;<a href="http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v7.0.5/prod/Doc/cuDNN-Installation-Guide.pdf?qO7ppZ7ZUZxNrI9KhtEHSndOL-IiLg4UwcWdFcYc2D2AYPJLJha2jvJp7bJO-Dl4Xa3ONYIKhWtLIHTbyr4tfoXndb53sK7SMtODAEwQlZgbYRsPE3wb2qwAGZH6E1fVW6CO1qeO2u_tZTLKe1zKbRCc10Gi8WpCaeyIlGPhLFuHI0qc8uX2eyEaGwVZfAaFkA" target="_blank" rel="external">cuDNN Install Guide</a><br><img src="/myimages/WX20180214-095916.png" alt="Download cuDNN"><br><img src="/myimages/WX20180214-100208.png" alt="Install&amp;Verify"></p>
<h2 id="&#x5B89;&#x88C5;tensorflow"><a href="#&#x5B89;&#x88C5;tensorflow" class="headerlink" title="&#x5B89;&#x88C5;tensorflow"></a>&#x5B89;&#x88C5;tensorflow</h2><p>&#x4E4B;&#x524D;&#x6709;&#x8FC7;&#x4ECE;&#x6E90;&#x7801;&#x5B89;&#x88C5;Tensorflow&#x7684;&#x7CBE;&#x529B;&#xFF0C;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x95EE;&#x9898;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x592A;&#x5EFA;&#x8BAE;&#x5927;&#x5BB6;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x7B14;&#x8005;&#x504F;&#x597D;&#x4F7F;&#x7528;Anaconda&#x8FDB;&#x884C;Python&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x8BB2;&#x8FF0;Anaconda&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E3B;&#x8981;&#x53C2;&#x7167;Tensorflow&#x5B89;&#x88C5;&#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x91CC;&#x622A;&#x53D6;&#x51FA;&#x5B89;&#x88C5;tensorflow &#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3002; Ubuntu&#x4E0A;&#x5B89;&#x88C5;Anaconda&#x7684;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#&#x9996;&#x5148;&#x521B;&#x5EFA;python3.5&#x7684;&#x73AF;&#x5883;</div><div class="line">conda create -n tensorflow pip python=3.5</div><div class="line">#&#x6FC0;&#x6D3B;&#x73AF;&#x5883;</div><div class="line">source activate tensorflow</div><div class="line">#&#x5B89;&#x88C5;&#x652F;&#x6301;GPU&#x7684;Tensorflow1.5&#x7248;&#x672C;</div><div class="line">pip install --ignore-installed https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl</div></pre></td></tr></table></figure></p>
<p>&#x5728;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x7F3A;&#x5C11;&#x67D0;&#x4E9B;python&#x7684;&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x6B64;&#x65F6;&#x6839;&#x636E;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF0C;&#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x5B89;&#x88C5;&#x5305;&#x5373;&#x53EF;&#x3002;<br>&#x5728;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x4EE5;&#x540E;&#x9700;&#x8981;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x6B63;&#x786E;&#x5B89;&#x88C5;&#xFF0C;&#x5728;python Shell&#x4E2D;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x6307;&#x4EE4;&#x5373;&#x53EF;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Python</div><div class="line">import tensorflow as tf</div><div class="line">hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</div><div class="line">sess = tf.Session()</div><div class="line">print(sess.run(hello))</div></pre></td></tr></table></figure></p>
<h2 id="&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;"><a href="#&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;" class="headerlink" title="&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;"></a>&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;</h2><p>&#x5728;&#x6211;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x73B0;&#x5728;&#x7B80;&#x5355;&#x6574;&#x7406;&#x4E00;&#x4E0B;&#xFF0C;&#x5E76;&#x4E14;&#x7ED9;&#x51FA;&#x7B80;&#x5355;&#x7684;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x3002;</p>
<ol>
<li>&#x5B89;&#x88C5;cuda&#x4EE5;&#x540E;&#xFF0C;&#x8FD0;&#x884C;nvidia-smi&#x6307;&#x4EE4;&#x5305;Library&#x548C;Driver&#x7684;&#x51B2;&#x7A81;&#x9519;&#x8BEF;&#xFF0C;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x91CD;&#x542F;&#x7535;&#x8111;&#xFF0C;&#x89C2;&#x5BDF;&#x662F;&#x5426;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x89E3;&#x51B3;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x8F93;&#x5165;dmesg&#x89C2;&#x5BDF;&#x4E00;&#x4E0B;&#x5185;&#x6838;&#x5728;&#x52A0;&#x8F7D;nvidia&#x9A71;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x62A5;&#x9519;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BB2;&#x662F;nvidia&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x7684;&#x7248;&#x672C;&#x4E0D;&#x517C;&#x5BB9;&#x5BFC;&#x81F4;&#x7684;&#x3002;&#x6B64;&#x65F6;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x5728;&#x8FDB;&#x884C;&#x89C2;&#x5BDF;&#x3002; &#x5982;&#x679C;&#x8FD8;&#x662F;&#x4E0D;&#x80FD;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x5EFA;&#x8BAE;&#x5F7B;&#x5E95;&#x6E05;&#x9664;nvidia/cuda/cudnn&#x76F8;&#x5173;&#x7684;&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x6307;&#x4EE4;<code>sudo apt-get purge nvidia* cuda* libcudnn</code> &#x6307;&#x4EE4;&#x5B8C;&#x6210;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0; &#x64CD;&#x4F5C;&#x4E00;&#x904D;</li>
<li>&#x5728;&#x7F16;&#x8BD1;cuda&#x6216;&#x8005;cudnn &#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x9A8C;&#x8BC1;&#x5B89;&#x88C5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x662F;gcc&#x7248;&#x672C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5E76;&#x4E14;&#x5B89;&#x88C5;&#x5BF9;&#x5E94;&#x7248;&#x672C;&#x7684;gcc&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7F3A;&#x5C11;&#x67D0;&#x4E9B;&#x5E93;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5F88;&#x5927;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x662F;LD_LIBRARY_PATH&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x8BBE;&#x7F6E;&#xFF0C;&#x6CE8;&#x610F;&#x4ED4;&#x7EC6;&#x9605;&#x8BFB;&#x4EE5;&#x4E0B;cuda&#x548C;cudnn&#x6587;&#x6863;&#x4E2D;&#x5173;&#x4E8E;LD_LIBRARY_PATH&#x7684;&#x914D;&#x7F6E;&#x63CF;&#x8FF0;&#x548C;&#x8981;&#x6C42;&#x3002;&#x91CD;&#x65B0;&#x914D;&#x7F6E;&#x4E00;&#x4E0B;&#x3002;</li>
</ol>
<h2 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2><p>&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x7C7B;&#x7684;&#x64CD;&#x4F5C;&#x5728;&#x7F51;&#x4E0A;&#x603B;&#x662F;&#x80FD;&#x591F;&#x627E;&#x5230;&#x5F88;&#x591A;&#x7684;&#x8D44;&#x6599;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E9B;&#x7684;&#x7248;&#x672C;&#x548C;&#x5F53;&#x524D;&#x7684;&#x76F8;&#x6BD4;&#x6709;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x5DEE;&#x522B;&#xFF0C;&#x56E0;&#x6B64;&#x7167;&#x642C;&#x522B;&#x4EBA;&#x7684;&#x7ECF;&#x9A8C;&#x672A;&#x5FC5;&#x4F1A;&#x6210;&#x529F;&#x3002;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#x9605;&#x8BFB;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x4ED4;&#x7EC6;&#x9605;&#x8BFB;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8D70;&#x5F2F;&#x8DEF;&#xFF0C;&#x9047;&#x5230;&#x95EE;&#x9898;google&#x6216;&#x8005;stackOverflow&#x4E0A;&#x9762;&#x7684;&#x7B54;&#x6848;&#x8D28;&#x91CF;&#x5F80;&#x5F80;&#x6BD4;&#x8F83;&#x9AD8;&#x3002;</p>
<h2 id="TODOs"><a href="#TODOs" class="headerlink" title="TODOs"></a>TODOs</h2><p>&#x6574;&#x4E2A;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x53C2;&#x8003;&#x4E86;&#x7F51;&#x4E0A;&#x5F88;&#x591A;&#x6587;&#x7AE0;&#x548C;&#x5E16;&#x5B50;&#xFF0C;&#x5728;&#x6B64;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF0C;&#x7531;&#x4E8E;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CA1;&#x6709;&#x4FDD;&#x7559;&#x76F8;&#x5173;&#x7684;&#x94FE;&#x63A5;&#x5730;&#x5740;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6B64;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF0C;&#x540E;&#x7EED;&#x4F1A;&#x62BD;&#x65F6;&#x95F4;&#x5C06;&#x90E8;&#x5206;&#x4E86;&#x94FE;&#x63A5;&#x6DFB;&#x52A0;&#x5728;&#x8FD9;&#x91CC;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GitKeepSameWithUpStream]]></title>
      <url>http://zhangshengshan.github.io/2018/02/13/GitKeepSameWithUpStream/</url>
      <content type="html"><![CDATA[<h1 id="How-to-Keep-same-with-upstream"><a href="#How-to-Keep-same-with-upstream" class="headerlink" title="How to Keep same with upstream"></a>How to Keep same with upstream</h1><h2 id="Configuring-a-remote-for-a-fork"><a href="#Configuring-a-remote-for-a-fork" class="headerlink" title="Configuring a remote for a fork"></a>Configuring a remote for a fork</h2><p>check current remote repository<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote -v</div></pre></td></tr></table></figure></p>
<p>Specify a new remote upstream repository that will be synced with the fork.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add upstream https://github.com/tensorflow/tensorflow.git</div></pre></td></tr></table></figure></p>
<p>check again<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote -v</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git fetch upstream</div><div class="line">git checkout master</div><div class="line">git merge upstream/master</div><div class="line">git push origin master</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UpperBound]]></title>
      <url>http://zhangshengshan.github.io/2017/09/18/UpperBound/</url>
      <content type="html"><![CDATA[<p>While upper type bounds limit a type to a subtype of another type, lower type bounds declare a type to be a supertype of another type. The term B &gt;: A expresses that the type parameter B or the abstract type B refer to a supertype of type A. In most cases, A will be the type parameter of the class and B will be the type parameter of a method.</p>
<p>Here is an example where this is useful:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">trait Node[+B] {</div><div class="line">  def prepend(elem: B): Unit</div><div class="line">}</div><div class="line"></div><div class="line">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] {</div><div class="line">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class="line">  def head: B = h</div><div class="line">  def tail = t</div><div class="line">}</div><div class="line"></div><div class="line">case class Nil[+B]() extends Node[B] {</div><div class="line">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class="line">}</div></pre></td></tr></table></figure>
<p>This program implements a singly-linked list. Nil represents an empty element (i.e. an empty list). class ListNode is a node which contains an element of type B (head) and a reference to the rest of the list (tail). The class Node and its subtypes are covariant because we have +B.</p>
<p>However, this program does not compile because the parameter elem in prepend is of type B, which we declared covariant. This doesn&#x2019;t work because functions are contravariant in their parameter types and covariant in their result types.</p>
<p>To fix this, we need to flip the variance of the type of the parameter elem in prepend. We do this by introducing a new type parameter U that has B as a lower type bound.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">trait Node[+B] {</div><div class="line">  def prepend[U &gt;: B](elem: U)</div><div class="line">}</div><div class="line"></div><div class="line">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] {</div><div class="line">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class="line">  def head: B = h</div><div class="line">  def tail = t</div><div class="line">}</div><div class="line"></div><div class="line">case class Nil[+B]() extends Node[B] {</div><div class="line">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class="line">}</div></pre></td></tr></table></figure>
<p>Now we can do the following:</p>
<p>trait Mammal<br>case class AfricanSwallow() extends Mammal<br>case class EuropeanSwallow() extends Mammal</p>
<p>val africanSwallowList= ListNode<a href="AfricanSwallow(">AfricanSwallow</a>, Nil())<br>val mammalList: Node[Mammal] = africanSwallowList<br>mammalList.prepend(new EuropeanSwallow)</p>
<p>The Node[Mammal] can be assigned the africanSwallowList but then accept EuropeanSwallows.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[函数式编程]]></title>
      <url>http://zhangshengshan.github.io/2017/09/10/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;"><a href="#&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;" class="headerlink" title="&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;"></a>&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;</h1><p>&#x6700;&#x65E9;&#x63A5;&#x89E6;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x662F;&#x516C;&#x53F8;&#x7684;&#x4E00;&#x4F4D;&#x5B9E;&#x4E60;&#x751F;&#x540C;&#x5B66;&#x4ECB;&#x7ECD;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5F53;&#x65F6;&#x5728;&#x4ED6;&#x5728;PYTHON&#x89E3;&#x91CA;&#x884C;&#x4E0A;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[scala隐式转换]]></title>
      <url>http://zhangshengshan.github.io/2017/09/08/scala%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h1 id="SCALA-&#x9690;&#x5F0F;&#x8F6C;&#x6362;"><a href="#SCALA-&#x9690;&#x5F0F;&#x8F6C;&#x6362;" class="headerlink" title="SCALA &#x9690;&#x5F0F;&#x8F6C;&#x6362;"></a>SCALA &#x9690;&#x5F0F;&#x8F6C;&#x6362;</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ReleasePackageToSonatypeRepo]]></title>
      <url>http://zhangshengshan.github.io/2017/06/21/ReleasePackageToSonatypeRepo/</url>
      <content type="html"><![CDATA[<h1 id="maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;"><a href="#maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;" class="headerlink" title="maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;"></a>maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;</h1><p><a href="http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components" target="_blank" rel="external">&#x53C2;&#x8003;&#x6587;&#x6863;</a><br>pom.xml &#x793A;&#x4F8B;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line">  &lt;groupId&gt;io.github.zhangshengshan&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;zss&lt;/artifactId&gt;</div><div class="line">  &lt;packaging&gt;jar&lt;/packaging&gt;</div><div class="line">  &lt;version&gt;3.0&lt;/version&gt;</div><div class="line"></div><div class="line">  &lt;name&gt;my-app&lt;/name&gt;</div><div class="line">  &lt;description&gt;a package which implements some machine learing methods&lt;/description&gt;</div><div class="line">  &lt;url&gt;http://github.zhangshengshan.ig&lt;/url&gt;</div><div class="line">  &lt;scm&gt;</div><div class="line">    &lt;connection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/connection&gt;</div><div class="line">    &lt;developerConnection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/developerConnection&gt;</div><div class="line">    &lt;tag&gt;HEAD&lt;/tag&gt;</div><div class="line">    &lt;url&gt;http://io.github.zhangshengshan&lt;/url&gt;</div><div class="line">  &lt;/scm&gt;</div><div class="line"></div><div class="line">    &lt;licenses&gt;</div><div class="line">      &lt;license&gt;</div><div class="line">        &lt;name&gt;Apache License, Version 2.0&lt;/name&gt;</div><div class="line">        &lt;url&gt;https://www.apache.org/licenses/LICENSE-2.0.txt&lt;/url&gt;</div><div class="line">        &lt;distribution&gt;repo&lt;/distribution&gt;</div><div class="line">        &lt;comments&gt;A business-friendly OSS license&lt;/comments&gt;</div><div class="line">      &lt;/license&gt;</div><div class="line">    &lt;/licenses&gt;</div><div class="line"></div><div class="line">  &lt;developers&gt;</div><div class="line">    &lt;developer&gt;</div><div class="line">      &lt;id&gt;zhangshengshan&lt;/id&gt;</div><div class="line">      &lt;name&gt;zhangshengshan&lt;/name&gt;</div><div class="line">      &lt;email&gt;alphabetago@163.com&lt;/email&gt;</div><div class="line">      &lt;url&gt;http://github.zhangshengshan.io&lt;/url&gt;</div><div class="line">      &lt;organization&gt;youzan&lt;/organization&gt;</div><div class="line">      &lt;organizationUrl&gt;http://www.youzan.com&lt;/organizationUrl&gt;</div><div class="line">      &lt;roles&gt;</div><div class="line">        &lt;role&gt;architect&lt;/role&gt;</div><div class="line">        &lt;role&gt;developer&lt;/role&gt;</div><div class="line">      &lt;/roles&gt;</div><div class="line">      &lt;timezone&gt;China/Beijing&lt;/timezone&gt;</div><div class="line">      &lt;properties&gt;</div><div class="line">        &lt;picUrl&gt;http://www.example.com/jdoe/pic&lt;/picUrl&gt;</div><div class="line">      &lt;/properties&gt;</div><div class="line">    &lt;/developer&gt;</div><div class="line">  &lt;/developers&gt;</div><div class="line"></div><div class="line">  &lt;dependencies&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;3.8.1&lt;/version&gt;</div><div class="line">      &lt;scope&gt;test&lt;/scope&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">  &lt;/dependencies&gt;</div><div class="line"></div><div class="line">&lt;build&gt;</div><div class="line">  &lt;plugins&gt;</div><div class="line">    &lt;plugin&gt;</div><div class="line">      &lt;groupId&gt;org.sonatype.plugins&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;nexus-staging-maven-plugin&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;1.6.7&lt;/version&gt;</div><div class="line">      &lt;extensions&gt;true&lt;/extensions&gt;</div><div class="line">      &lt;configuration&gt;</div><div class="line">         &lt;serverId&gt;ossrh&lt;/serverId&gt;</div><div class="line">         &lt;nexusUrl&gt;https://oss.sonatype.org/&lt;/nexusUrl&gt;</div><div class="line">         &lt;!--&lt;autoReleaseAfterClose&gt;true&lt;/autoReleaseAfterClose&gt;--&gt;</div><div class="line">      &lt;/configuration&gt;</div><div class="line">    &lt;/plugin&gt;</div><div class="line">    &lt;plugin&gt;</div><div class="line">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;1.5&lt;/version&gt;</div><div class="line">      &lt;executions&gt;</div><div class="line">        &lt;execution&gt;</div><div class="line">          &lt;id&gt;sign-artifacts&lt;/id&gt;</div><div class="line">          &lt;phase&gt;verify&lt;/phase&gt;</div><div class="line">          &lt;goals&gt;</div><div class="line">            &lt;goal&gt;sign&lt;/goal&gt;</div><div class="line">          &lt;/goals&gt;</div><div class="line">        &lt;/execution&gt;</div><div class="line">      &lt;/executions&gt;</div><div class="line">    &lt;/plugin&gt;</div><div class="line">    &lt;plugin&gt;</div><div class="line">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;2.2.1&lt;/version&gt;</div><div class="line">      &lt;executions&gt;</div><div class="line">        &lt;execution&gt;</div><div class="line">          &lt;id&gt;attach-sources&lt;/id&gt;</div><div class="line">          &lt;goals&gt;</div><div class="line">            &lt;goal&gt;jar-no-fork&lt;/goal&gt;</div><div class="line">          &lt;/goals&gt;</div><div class="line">        &lt;/execution&gt;</div><div class="line">      &lt;/executions&gt;</div><div class="line">    &lt;/plugin&gt;</div><div class="line">    &lt;plugin&gt;</div><div class="line">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class="line">      &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;</div><div class="line">      &lt;version&gt;2.9.1&lt;/version&gt;</div><div class="line">      &lt;executions&gt;</div><div class="line">        &lt;execution&gt;</div><div class="line">          &lt;id&gt;attach-javadocs&lt;/id&gt;</div><div class="line">          &lt;goals&gt;</div><div class="line">            &lt;goal&gt;jar&lt;/goal&gt;</div><div class="line">          &lt;/goals&gt;</div><div class="line">        &lt;/execution&gt;</div><div class="line">      &lt;/executions&gt;</div><div class="line">    &lt;/plugin&gt;</div><div class="line">  &lt;/plugins&gt;</div><div class="line">&lt;/build&gt;</div><div class="line"></div><div class="line">&lt;distributionManagement&gt;</div><div class="line">  &lt;snapshotRepository&gt;</div><div class="line">    &lt;id&gt;ossrh&lt;/id&gt;</div><div class="line">    &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;</div><div class="line">  &lt;/snapshotRepository&gt;</div><div class="line">&lt;/distributionManagement&gt;</div><div class="line"></div><div class="line">&lt;!--&lt;distributionManagement&gt;--&gt;</div><div class="line">  &lt;!--&lt;snapshotRepository&gt;--&gt;</div><div class="line">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class="line">    &lt;!--&lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;--&gt;</div><div class="line">  &lt;!--&lt;/snapshotRepository&gt;--&gt;</div><div class="line">  &lt;!--&lt;repository&gt;--&gt;</div><div class="line">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class="line">    &lt;!--&lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;--&gt;</div><div class="line">  &lt;!--&lt;/repository&gt;--&gt;</div><div class="line">&lt;!--&lt;/distributionManagement&gt;--&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure></p>
<h1 id="SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;"><a href="#SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;" class="headerlink" title="SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;"></a>SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;</h1><p><a href="http://central.sonatype.org/pages/sbt.html#deploying-to-ossrh-with-sbt-introduction" target="_blank" rel="external">&#x53C2;&#x8003;&#x6587;&#x6863;</a></p>
<p>build.sbt&#x793A;&#x4F8B;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">addSbtPlugin(&quot;org.xerial.sbt&quot; % &quot;sbt-sonatype&quot; % &quot;1.1&quot;)</div><div class="line"></div><div class="line">useGpg := true</div><div class="line">organization := &quot;io.github.zhangshengshan&quot;</div><div class="line">name := &quot;sbtSonatype&quot;</div><div class="line">version := &quot;5.0.1&quot;</div><div class="line">scalaVersion := &quot;2.10.6&quot;</div><div class="line"></div><div class="line">licenses := Seq(&quot;BSD-style&quot; -&gt; url(&quot;http://www.opensource.org/licenses/bsd-license.php&quot;))</div><div class="line">homepage := Some(url(&quot;http://example.com&quot;))</div><div class="line">scmInfo := Some(</div><div class="line">  ScmInfo(</div><div class="line">    url(&quot;https://github.com/your-account/your-project&quot;),</div><div class="line">    &quot;scm:git@github.com:your-account/your-project.git&quot;</div><div class="line">  )</div><div class="line">)</div><div class="line">developers := List(</div><div class="line">  Developer(</div><div class="line">    id    = &quot;Your identifier&quot;,</div><div class="line">    name  = &quot;Your Name&quot;,</div><div class="line">    email = &quot;your@email&quot;,</div><div class="line">    url   = url(&quot;http://your.url&quot;)</div><div class="line">  )</div><div class="line">)</div><div class="line"></div><div class="line">pomIncludeRepository := { _ =&gt; false }</div><div class="line">publishMavenStyle := true</div><div class="line"></div><div class="line">publishTo := {</div><div class="line">  val nexus = &quot;https://oss.sonatype.org/&quot;</div><div class="line">  if (isSnapshot.value)</div><div class="line">    Some(&quot;snapshots&quot; at nexus + &quot;content/repositories/snapshots&quot;)</div><div class="line">  else</div><div class="line">    Some(&quot;releases&quot;  at nexus + &quot;service/local/staging/deploy/maven2&quot;)</div><div class="line">}</div><div class="line">publishArtifact in Test:= false</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[深度学习中的几个经典问题]]></title>
      <url>http://zhangshengshan.github.io/2017/04/26/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E5%87%A0%E4%B8%AA%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<ul>
<li>DROPOUT &#x4E3A;&#x5565;&#x80FD;&#x591F;&#x5BA2;&#x670D;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x600E;&#x4E48;&#x6837;&#x7406;&#x89E3;</li>
<li>&#x68AF;&#x5EA6;&#x5F25;&#x6563;&#x662F;&#x4EC0;&#x4E48;&#x542B;&#x4E49;</li>
<li>ReLu&#x6709;&#x4EC0;&#x4E48;&#x7279;&#x70B9;&#xFF0C;&#x6709;&#x54EA;&#x4E9B;&#x53D8;&#x79CD;</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[A Beginner's Guide To Understanding Convolutional Neural Networks]]></title>
      <url>http://zhangshengshan.github.io/2017/04/20/A-Beginner-s-Guide-To-Understanding-Convolutional-Neural-Networks/</url>
      <content type="html"><![CDATA[<h1 id="A-Beginner&#x2019;s-Guide-To-Understanding-Convolutional-Neural-Networks"><a href="#A-Beginner&#x2019;s-Guide-To-Understanding-Convolutional-Neural-Networks" class="headerlink" title="A Beginner&#x2019;s Guide To Understanding Convolutional Neural Networks"></a>A Beginner&#x2019;s Guide To Understanding Convolutional Neural Networks</h1><p><img src="https://adeshpande3.github.io/assets/Cover.png" alt=""></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote>
<p>Convolutional neural networks. Sounds like a weird combination of biology and math with a little CS sprinkled in, but these networks have been some of the most influential innovations in the field of computer vision. 2012 was the first year that neural nets grew to prominence as Alex Krizhevsky used them to win that year&#x2019;s ImageNet competition (basically, the annual Olympics of computer vision), dropping the classification error record from 26% to 15%, an astounding improvement at the time.Ever since then, a host of companies have been using deep learning at the core of their services. Facebook uses neural nets for their automatic tagging algorithms, Google for their photo search, Amazon for their product recommendations, Pinterest for their home feed personalization, and Instagram for their search infrastructure.<br>&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7ED3;&#x5408;&#x4E86;&#x751F;&#x7269;&#x79D1;&#x5B66;&#x3001;&#x6570;&#x5B66;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x70B9;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x53D6;&#x5F97;&#x7684;&#x521B;&#x65B0;&#x6027;&#x6210;&#x5C31;&#x8BA9;&#x4EBA;&#x522E;&#x76EE;&#x76F8;&#x770B;&#x3002; 2012&#x5E74;&#xFF0C;&#x5377;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x58F0;&#x540D;&#x9E4A;&#x8D77;&#x3002;&#x4F34;&#x968F;&#x7740;Alex Krizhevsky&#x7528;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5728;&#x62E5;&#x6709;&#x4E00;&#x5E74;&#x4E00;&#x5EA6;&#x7684;&#x201C;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x5965;&#x8FD0;&#x4F1A;&#x201D;&#x4E4B;&#x79F0;&#x7684;ImageNet&#x7ADE;&#x8D5B;&#x4E0A;&#x53D6;&#x5F97;&#x4E86;&#x5206;&#x7C7B;&#x9519;&#x8BEF;&#x7387;&#x4ECE;26%&#x964D;&#x4F4E;&#x5230;15%&#x60CA;&#x4EBA;&#x7684;&#x6210;&#x5C31;&#xFF0C;&#x5377;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF08;CNN&#xFF09;&#x58F0;&#x540D;&#x9E4A;&#x8D77;&#x3002;&#x4ECE;&#x90A3;&#x65F6;&#x8D77;&#xFF0C;&#x8BB8;&#x591A;&#x8457;&#x540D;&#x7684;&#x79D1;&#x6280;&#x516C;&#x53F8;&#x5DF2;&#x7ECF;&#x5728;&#x4ED6;&#x4EEC;&#x6838;&#x5FC3;&#x4E1A;&#x52A1;&#x4E0A;&#x91C7;&#x7528;&#x6DF1;&#x5C42;&#x5B66;&#x4E60;&#x6280;&#x672F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;Facebook&#x5229;&#x7528;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x81EA;&#x52A8;&#x6807;&#x6CE8;&#xFF0C;&#x8C37;&#x6B4C;&#x5229;&#x7528;&#x4ED6;&#x4EEC;&#x8FDB;&#x884C;&#x56FE;&#x7247;&#x641C;&#x7D22;&#xFF0C;&#x4E9A;&#x9A6C;&#x900A;&#x7684;&#x4EA7;&#x54C1;&#x63A8;&#x8350;&#xFF0C;Pinterest&#x7684;&#x4E2A;&#x6027;&#x5316;&#x8BA2;&#x9605;&#xFF0C;&#x4EE5;&#x53CA;Instagram&#x7684;&#x641C;&#x7D22;&#x57FA;&#x7840;&#x670D;&#x52A1;&#x3002;<br><img src="https://adeshpande3.github.io/assets/Companies.png" alt=""></p>
</blockquote>
<blockquote>
<p>However, the classic, and arguably most popular, use case of these networks is for image processing. Within image processing, let&#x2019;s take a look at how to use these CNNs for image classification.<br>&#x4E0D;&#x8FC7;&#x6700;&#x7ECF;&#x5178;&#x6700;&#x6D41;&#x884C;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5E94;&#x7528;&#x8FD8;&#x662F;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x4F1A;&#x4E00;&#x8D77;&#x770B;&#x4E00;&#x4E0B;CNN&#x5728;&#x5728;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x9886;&#x57DF;&#x7684;&#x5E94;&#x7528;&#x3002;</p>
</blockquote>
<h2 id="The-Problem-Space"><a href="#The-Problem-Space" class="headerlink" title="The Problem Space"></a>The Problem Space</h2><blockquote>
<p>Image classification is the task of taking an input image and outputting a class (a cat, dog, etc) or a probability of classes that best describes the image. For humans, this task of recognition is one of the first skills we learn from the moment we are born and is one that comes naturally and effortlessly as adults. Without even thinking twice, we&#x2019;re able to quickly and seamlessly identify the environment we are in as well as the objects that surround us. When we see an image or just when we look at the world around us, most of the time we are able to immediately characterize the scene and give each object a label, all without even consciously noticing.<br>These skills of being able to quickly recognize patterns, generalize from prior knowledge, and adapt to different image environments are ones that we do not share with our fellow machines.<br>&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#x65E8;&#x5728;&#x6839;&#x636E;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x8F93;&#x51FA;&#x6240;&#x5C5E;&#x7C7B;&#x522B;(&#x5982;&#x732B;&#xFF0C;&#x72D7;&#xFF0C;&#x7B49;&#xFF09;&#x6216;&#x8005;&#x4ECE;&#x6982;&#x7387;&#x7684;&#x89D2;&#x5EA6;&#x5224;&#x65AD;&#x8BE5;&#x56FE;&#x7247;&#x6700;&#x6709;&#x53EF;&#x80FD;&#x5C5E;&#x4E8E;&#x4EC0;&#x4E48;&#x7C7B;&#x522B;&#x3002;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x800C;&#x8A00;&#xFF0C;&#x8FD9;&#x662F;&#x4E0E;&#x751F;&#x5177;&#x6765;&#x7684;&#x80FD;&#x529B;&#x800C;&#x4E14;&#x548C;&#x6210;&#x4EBA;&#x6240;&#x5DEE;&#x65E0;&#x51E0;&#x3002;&#x60F3;&#x90FD;&#x4E0D;&#x7528;&#x60F3;&#xFF0C;&#x4EBA;&#x7C7B;&#x5C31;&#x53EF;&#x4EE5;&#x8F7B;&#x800C;&#x6613;&#x4E3E;&#x7684;&#x8BC6;&#x522B;&#x5468;&#x56F4;&#x7684;&#x73AF;&#x5883;&#x548C;&#x7269;&#x4F53;&#x3002;&#x5F53;&#x4EBA;&#x7C7B;&#x770B;&#x8EAB;&#x8FB9;&#x7684;&#x7269;&#x4F53;&#x6216;&#x8005;&#x573A;&#x666F;&#xFF0C;&#x4EBA;&#x7C7B;&#x53EF;&#x4EE5;&#x7ACB;&#x523B;&#x6982;&#x62EC;&#x5468;&#x56F4;&#x73AF;&#x5883;&#x7684;&#x7279;&#x5F81;&#x5E76;&#x4E14;&#x7ED9;&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x751A;&#x81F3;&#x90FD;&#x4E0D;&#x9700;&#x8981;&#x523B;&#x610F;&#x5730;&#x53BB;&#x5173;&#x6CE8;&#x3002;&#x8FD9;&#x4E9B;&#x8FC5;&#x901F;&#x8BC6;&#x522B;&#x6A21;&#x5F0F;&#x3001;&#x4ECE;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E2D;&#x6CDB;&#x5316;&#x3001;&#x548C;&#x9002;&#x5E94;&#x4E0D;&#x540C;&#x73AF;&#x5883;&#x7684;&#x80FD;&#x529B;&#x5374;&#x5E76;&#x4E0D;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x673A;&#x5668;&#x6240;&#x62E5;&#x6709;&#x3002;</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/Corgi3.png" alt=""></p>
<h2 id="Inputs-and-Outputs"><a href="#Inputs-and-Outputs" class="headerlink" title="Inputs and Outputs"></a>Inputs and Outputs</h2><blockquote>
<p>When a computer sees an image (takes an image as input), it will see an array of pixel values. Depending on the resolution and size of the image, it will see a 32 x 32 x 3 array of numbers (The 3 refers to RGB values). Just to drive home the point, let&#x2019;s say we have a color image in JPG form and its size is 480 x 480. The representative array will be 480 x 480 x 3. Each of these numbers is given a value from 0 to 255 which describes the pixel intensity at that point. These numbers, while meaningless to us when we perform image classification, are the only inputs available to the computer.  The idea is that you give the computer this array of numbers and it will output numbers that describe the probability of the image being a certain class (.80 for cat, .15 for dog, .05 for bird, etc).</p>
</blockquote>
<blockquote>
<p>&#x8BA1;&#x7B97;&#x673A;&#x628A;&#x4E00;&#x5E45;&#x56FE;&#x7247;&#x7406;&#x89E3;&#x4E3A;&#x50CF;&#x7D20;&#x503C;&#x6570;&#x7EC4;&#xFF0C;&#x6839;&#x636E;&#x89E3;&#x6790;&#x5EA6;&#x548C;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x4E00;&#x526F;&#x56FE;&#x7247;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x8868;&#x793A;&#x4E3A;32 <em> 32 </em> 3&#x7684;&#x591A;&#x7EF4;&#x6570;&#x7EC4;(3&#x8868;&#x793A;RGB&#x503C;)&#x3002;&#x91CD;&#x7533;&#x4E00;&#x4E0B;&#xFF0C;&#x5047;&#x5982;&#x5B58;&#x5728;&#x4E00;&#x526F;JPG&#x683C;&#x5F0F;&#x5927;&#x5C0F;&#x4E3A;480 <em> 480 &#x7684;&#x56FE;&#x50CF;&#x3002;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x7EAC;&#x5EA6;&#x5C06;&#x4F1A;&#x662F;480 </em> 480 * 3. &#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;0-255, &#x63CF;&#x8FF0;&#x4E86;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x867D;&#x7136;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x5904;&#xFF0C;&#x4F46;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x5374;&#x53EA;&#x80FD;&#x5F97;&#x5230;&#x8FD9;&#x4E9B;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x3002;&#x4F46;&#x8BA1;&#x7B97;&#x673A;&#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x6570;&#x503C;&#x7EC4;&#x6210;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E9B;&#x5217;&#x6982;&#x7387;&#x503C;&#xFF0C;&#x5206;&#x522B;&#x63CF;&#x8FF0;&#x4E86;&#x56FE;&#x7247;&#x5C5E;&#x4E8E;&#x5BF9;&#x5E94;&#x7C7B;&#x522B;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002;</p>
</blockquote>
<h2 id="What-We-Want-the-Computer-to-Do"><a href="#What-We-Want-the-Computer-to-Do" class="headerlink" title="What We Want the Computer to Do"></a>What We Want the Computer to Do</h2><blockquote>
<p>Now that we know the problem as well as the inputs and outputs, let&#x2019;s think about how to approach this. What we want the computer to do is to be able to differentiate between all the images it&#x2019;s given and figure out the unique features that make a dog a dog or that make a cat a cat. This is the process that goes on in our minds subconsciously as well. When we look at a picture of a dog, we can classify it as such if the picture has identifiable features such as paws or 4 legs. In a similar way, the computer is able perform image classification by looking for low level features such as edges and curves, and then building up to more abstract concepts through a series of convolutional layers. This is a general overview of what a CNN does. Let&#x2019;s get into the specifics.<br>&#x65E2;&#x7136;&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#x4E86;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x5206;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x770B;&#x5230;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x60F3;&#x60F3;&#x4E00;&#x4E0B;&#x4EBA;&#x7C7B;&#x5982;&#x4F55;&#x505A;&#x5230;&#x7684;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x5206;&#x7C7B;&#x56FE;&#x7247;&#x548C;&#x8BC6;&#x522B;&#x51FA;&#x7C7B;&#x522B;&#x672C;&#x8D28;&#x4E0A;&#x7684;&#x7279;&#x5F81;&#x8FD9;&#x6837;&#x7684;&#x8FC7;&#x7A0B;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x51E0;&#x4E4E;&#x662F;&#x4E0D;&#x5047;&#x601D;&#x7D22;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4EBA;&#x7C7B;&#x770B;&#x5230;&#x72D7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x6613;&#x7684;&#x8FA8;&#x522B;&#x72D7;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x722A;&#x5B50;&#x548C;&#x56DB;&#x6761;&#x817F;&#x3002;&#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E5F;&#x53EF;&#x4EE5;&#x8BC6;&#x522B;&#x5230;&#x6BD4;&#x8F83;&#x4F4E;&#x5C42;&#x6B21;&#x5730;&#x7279;&#x5F81;&#x6BD4;&#x5982;&#x8FB9;&#x7F18;&#x6216;&#x8005;&#x66F2;&#x7EBF;&#xFF0C; &#x7136;&#x540E;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x5377;&#x79EF;&#x5C42;&#x6784;&#x5EFA;&#x51FA;&#x5C42;&#x6B21;&#x8F83;&#x9AD8;&#x7684;&#x3001;&#x62BD;&#x8C61;&#x7684;&#x7279;&#x5F81;&#x3002;&#x8FD9;&#x5C31;&#x662F;CNN&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x3002;&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x6DF1;&#x5165;&#x5730;&#x63A2;&#x7A76;CNN&#x7684;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x3002;</p>
</blockquote>
<h2 id="Biological-Connection"><a href="#Biological-Connection" class="headerlink" title="Biological Connection"></a>Biological Connection</h2><blockquote>
<p>But first, a little background. When you first heard of the term convolutional neural networks, you may have thought of something related to neuroscience or biology, and you would be right. Sort of. CNNs do take a biological inspiration from the visual cortex. The visual cortex has small regions of cells that are sensitive to specific regions of the visual field. This idea was expanded upon by a fascinating experiment by Hubel and Wiesel in 1962 (Video) where they showed that some individual neuronal cells in the brain responded (or fired) only in the presence of edges of a certain orientation. For example, some neurons fired when exposed to vertical edges and some when shown horizontal or diagonal edges. Hubel and Wiesel found out that all of these neurons were organized in a columnar architecture and that together, they were able to produce visual perception. This idea of specialized components inside of a system having specific tasks (the neuronal cells in the visual cortex looking for specific characteristics) is one that machines use as well, and is the basis behind CNNs.</p>
</blockquote>
<h2 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h2><blockquote>
<p>Back to the specifics. A more detailed overview of what CNNs do would be that you take the image, pass it through a series of convolutional, nonlinear, pooling (downsampling), and fully connected layers, and get an output. As we said earlier, the output can be a single class or a probability of classes that best describes the image. Now, the hard part is understanding what each of these layers do. So let&#x2019;s get into the most important one.</p>
</blockquote>
<h2 id="First-Layer-&#x2013;-Math-Part"><a href="#First-Layer-&#x2013;-Math-Part" class="headerlink" title="First Layer &#x2013; Math Part"></a>First Layer &#x2013; Math Part</h2><blockquote>
<p>The first layer in a CNN is always a Convolutional Layer. First thing to make sure you remember is what the input to this conv (I&#x2019;ll be using that abbreviation a lot) layer is. Like we mentioned before, the input is a 32 x 32 x 3 array of pixel values. Now, the best way to explain a conv layer is to imagine a flashlight that is shining over the top left of the image. Let&#x2019;s say that the light this flashlight shines covers a 5 x 5 area. And now, let&#x2019;s imagine this flashlight sliding across all the areas of the input image. In machine learning terms, this flashlight is called a filter(or sometimes referred to as a neuron or a kernel) and the region that it is shining over is called the receptive field. Now this filter is also an array of numbers (the numbers are called weights or parameters). A very important note is that the depth of this filter has to be the same as the depth of the input (this makes sure that the math works out), so the dimensions of this filter is 5 x 5 x 3. Now, let&#x2019;s take the first position the filter is in for example.  It would be the top left corner. As the filter is sliding, or convolving, around the input image, it is multiplying the values in the filter with the original pixel values of the image (aka computing element wise multiplications). These multiplications are all summed up (mathematically speaking, this would be 75 multiplications in total). So now you have a single number. Remember, this number is just representative of when the filter is at the top left of the image. Now, we repeat this process for every location on the input volume. (Next step would be moving the filter to the right by 1 unit, then right again by 1, and so on). Every unique location on the input volume produces a number. After sliding the filter over all the locations, you will find out that what you&#x2019;re left with is a 28 x 28 x 1 array of numbers, which we call an activation map or feature map. The reason you get a 28 x 28 array is that there are 784 different locations that a 5 x 5 filter can fit on a 32 x 32 input image. These 784 numbers are mapped to a 28 x 28 array.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/ActivationMap.png" alt=""></p>
<blockquote>
<p>(Quick Note: Some of the images, including the one above, I used came from this terrific book, <a href="http://neuralnetworksanddeeplearning.com/" target="_blank" rel="external">&#x201C;Neural Networks and Deep Learning&#x201D;</a> by Michael Nielsen. Strongly recommend.)</p>
</blockquote>
<blockquote>
<p>Let&#x2019;s say now we use two 5 x 5 x 3 filters instead of one. Then our output volume would be 28 x 28 x 2. By using more filters, we are able to preserve the spatial dimensions better. Mathematically, this is what&#x2019;s going on in a convolutional layer.</p>
</blockquote>
<h2 id="First-Layer-&#x2013;-High-Level-Perspective"><a href="#First-Layer-&#x2013;-High-Level-Perspective" class="headerlink" title="First Layer &#x2013; High Level Perspective"></a>First Layer &#x2013; High Level Perspective</h2><blockquote>
<p>However, let&#x2019;s talk about what this convolution is actually doing from a high level. Each of these filters can be thought of as feature identifiers. When I say features, I&#x2019;m talking about things like straight edges, simple colors, and curves. Think about the simplest characteristics that all images have in common with each other. Let&#x2019;s say our first filter is 7 x 7 x 3 and is going to be a curve detector. (In this section, let&#x2019;s ignore the fact that the filter is 3 units deep and only consider the top depth slice of the filter and the image, for simplicity.)As a curve detector, the filter will have a pixel structure in which there will be higher numerical values along the area that is a shape of a curve (Remember, these filters that we&#x2019;re talking about as just numbers!).       </p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/Filter.png" alt=""></p>
<blockquote>
<p>Now, let&#x2019;s go back to visualizing this mathematically. When we have this filter at the top left corner of the input volume, it is computing multiplications between the filter and pixel values at that region. Now let&#x2019;s take an example of an image that we want to classify, and let&#x2019;s put our filter at the top left corner.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/OriginalAndFilter.png" alt=""></p>
<blockquote>
<p>Remember, what we have to do is multiply the values in the filter with the original pixel values of the</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/FirstPixelMulitiplication.png" alt=""></p>
<blockquote>
<p>Basically, in the input image, if there is a shape that generally resembles the curve that this filter is representing, then all of the multiplications summed together will result in a large value! Now let&#x2019;s see what happens when we move our filter.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/SecondMultiplication.png" alt=""></p>
<blockquote>
<p>The value is much lower! This is because there wasn&#x2019;t anything in the image section that responded to the curve detector filter. Remember, the output of this conv layer is an activation map. So, in the simple case of a one filter convolution (and if that filter is a curve detector), the activation map will show the areas in which there at mostly likely to be curves in the picture. In this example, the top left value of our 28 x 28 x 1 activation map will be 6600. This high value means that it is likely that there is some sort of curve in the input volume that caused the filter to activate. The top right value in our activation map will be 0 because there wasn&#x2019;t anything in the input volume that caused the filter to activate (or more simply said, there wasn&#x2019;t a curve in that region of the original image). Remember, this is just for one filter. This is just a filter that is going to detect lines that curve outward and to the right. We can have other filters for lines that curve to the left or for straight edges. The more filters, the greater the depth of the activation map, and the more information we have about the input volume.</p>
</blockquote>
<blockquote>
<p>Disclaimer: The filter I described in this section was simplistic for the main purpose of describing the math that goes on during a convolution. In the picture below, you&#x2019;ll see some examples of actual visualizations of the filters of the first conv layer of a trained network. Nonetheless, the main argument remains the same. The filters on the first layer convolve around the input image and &#x201C;activate&#x201D; (or compute high values) when the specific feature it is looking for is in the input volume.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/FirstLayers.png" alt=""></p>
<blockquote>
<p>(Quick Note: The above image came from Stanford&#x2019;s <a href="http://cs231n.stanford.edu/" target="_blank" rel="external">CS 231N </a> course taught by Andrej Karpathy and Justin Johnson. Recommend for anyone looking for a deeper understanding of CNNs.)</p>
</blockquote>
<h2 id="Going-Deeper-Through-the-Network"><a href="#Going-Deeper-Through-the-Network" class="headerlink" title="Going Deeper Through the Network"></a>Going Deeper Through the Network</h2><blockquote>
<p>Now in a traditional convolutional neural network architecture, there are other layers that are interspersed between these conv layers. I&#x2019;d strongly encourage those interested to read up on them and understand their function and effects, but in a general sense, they provide nonlinearities and preservation of dimension that help to improve the robustness of the network and control overfitting. A classic CNN architecture would look like this.<br><img src="https://adeshpande3.github.io/assets/Table.png" alt=""><br>The last layer, however, is an important one and one that we will go into later on. Let&#x2019;s just take a step back and review what we&#x2019;ve learned so far. We talked about what the filters in the first conv layer are designed to detect. They detect low level features such as edges and curves. As one would imagine, in order to predict whether an image is a type of object, we need the network to be able to recognize higher level features such as hands or paws or ears. So let&#x2019;s think about what the output of the network is after the first conv layer. It would be a 28 x 28 x 3 volume (assuming we use three 5 x 5 x 3 filters).  When we go through another conv layer, the output of the first conv layer becomes the input of the 2nd conv layer.  Now, this is a little bit harder to visualize. When we were talking about the first layer, the input was just the original image. However, when we&#x2019;re talking about the 2nd conv layer, the input is the activation map(s) that result from the first layer. So each layer of the input is basically describing the locations in the original image for where certain low level features appear. Now when you apply a set of filters on top of that (pass it through the 2nd conv layer), the output will be activations that represent higher level features. Types of these features could be semicircles (combination of a curve and straight edge) or squares (combination of several straight edges). As you go through the network and go through more conv layers, you get activation maps that represent more and more complex features. By the end of the network, you may have some filters that activate when there is handwriting in the image, filters that activate when they see pink objects, etc. If you want more information about visualizing filters in ConvNets, Matt Zeiler and Rob Fergus had an excellent research paper discussing the topic. Jason Yosinski also has a video on YouTube that provides a great visual representation. Another interesting thing to note is that as you go deeper into the network, the filters begin to have a larger and larger receptive field, which means that they are able to consider information from a larger area of the original input volume (another way of putting it is that they are more responsive to a larger region of pixel space).</p>
</blockquote>
<h2 id="Fully-Connected-Layer"><a href="#Fully-Connected-Layer" class="headerlink" title="Fully Connected Layer"></a>Fully Connected Layer</h2><blockquote>
<p>Now that we can detect these high level features, the icing on the cake is attaching a fully connected layer to the end of the network. This layer basically takes an input volume (whatever the output is of the conv or ReLU or pool layer preceding it) and outputs an N dimensional vector where N is the number of classes that the program has to choose from. For example, if you wanted a digit classification program, N would be 10 since there are 10 digits. Each number in this N dimensional vector represents the probability of a certain class. For example, if the resulting vector for a digit classification program is [0 .1 .1 .75 0 0 0 0 0 .05], then this represents a 10% probability that the image is a 1, a 10% probability that the image is a 2, a 75% probability that the image is a 3, and a 5% probability that the image is a 9 (Side note: There are other ways that you can represent the output, but I am just showing the softmax approach). The way this fully connected layer works is that it looks at the output of the previous layer (which as we remember should represent the activation maps of high level features) and determines which features most correlate to a particular class. For example, if the program is predicting that some image is a dog, it will have high values in the activation maps that represent high level features like a paw or 4 legs, etc. Similarly, if the program is predicting that some image is a bird, it will have high values in the activation maps that represent high level features like wings or a beak, etc. Basically, a FC layer looks at what high level features most strongly correlate to a particular class and has particular weights so that when you compute the products between the weights and the previous layer, you get the correct probabilities for the different classes.<br><img src="https://adeshpande3.github.io/assets/LeNet.png" alt=""></p>
</blockquote>
<h2 id="Training-AKA-What-Makes-this-Stuff-Work"><a href="#Training-AKA-What-Makes-this-Stuff-Work" class="headerlink" title="Training (AKA:What Makes this Stuff Work)"></a>Training (AKA:What Makes this Stuff Work)</h2><blockquote>
<p>Now, this is the one aspect of neural networks that I purposely haven&#x2019;t mentioned yet and it is probably the most important part. There may be a lot of questions you had while reading. How do the filters in the first conv layer know to look for edges and curves? How does the fully connected layer know what activation maps to look at? How do the filters in each layer know what values to have? The way the computer is able to adjust its filter values (or weights) is through a training process called backpropagation.</p>
</blockquote>
<blockquote>
<p>Before we get into backpropagation, we must first take a step back and talk about what a neural network needs in order to work. At the moment we all were born, our minds were fresh. We didn&#x2019;t know what a cat or dog or bird was. In a similar sort of way, before the CNN starts, the weights or filter values are randomized. The filters don&#x2019;t know to look for edges and curves. The filters in the higher layers don&#x2019;t know to look for paws and beaks. As we grew older however, our parents and teachers showed us different pictures and images and gave us a corresponding label. This idea of being given an image and a label is the training process that CNNs go through. Before getting too into it, let&#x2019;s just say that we have a training set that has thousands of images of dogs, cats, and birds and each of the images has a label of what animal that picture is. Back to backprop.</p>
</blockquote>
<blockquote>
<p>So backpropagation can be separated into 4 distinct sections, the forward pass, the loss function, the backward pass, and the weight update. During the forward pass, you take a training image which as we remember is a 32 x 32 x 3 array of numbers and pass it through the whole network. On our first training example, since all of the weights or filter values were randomly initialized, the output will probably be something like [.1 .1 .1 .1 .1 .1 .1 .1 .1 .1], basically an output that doesn&#x2019;t give preference to any number in particular. The network, with its current weights, isn&#x2019;t able to look for those low level features or thus isn&#x2019;t able to make any reasonable conclusion about what the classification might be. This goes to the loss function part of backpropagation. Remember that what we are using right now is training data. This data has both an image and a label. Let&#x2019;s say for example that the first training image inputted was a 3. The label for the image would be [0 0 0 1 0 0 0 0 0 0]. A loss function can be defined in many different ways but a common one is MSE (mean squared error), which is &#xBD; times (actual - predicted) squared.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/Equation.png" alt=""></p>
<blockquote>
<p>Let&#x2019;s say the variable L is equal to that value. As you can imagine, the loss will be extremely high for the first couple of training images. Now, let&#x2019;s just think about this intuitively. We want to get to a point where the predicted label (output of the ConvNet) is the same as the training label (This means that our network got its prediction right).In order to get there, we want to minimize the amount of loss we have. Visualizing this as just an optimization problem in calculus, we want to find out which inputs (weights in our case) most directly contributed to the loss (or error) of the network.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/Loss.png" alt=""></p>
<blockquote>
<p>This is the mathematical equivalent of a dL/dW where W are the weights at a particular layer. Now, what we want to do is perform a backward pass through the network, which is determining which weights contributed most to the loss and finding ways to adjust them so that the loss decreases. Once we compute this derivative, we then go to the last step which is the weight update. This is where we take all the weights of the filters and update them so that they change in the direction of the gradient.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/Weight.png" alt=""></p>
<blockquote>
<p>The learning rate is a parameter that is chosen by the programmer. A high learning rate means that bigger steps are taken in the weight updates and thus, it may take less time for the model to converge on an optimal set of weights. However, a learning rate that is too high could result in jumps that are too large and not precise enough to reach the optimal point.</p>
</blockquote>
<p><img src="https://adeshpande3.github.io/assets/HighLR.png" alt=""></p>
<blockquote>
<p>The process of forward pass, loss function, backward pass, and parameter update is generally called one epoch. The program will repeat this process for a fixed number of epochs for each set of training images (commonly called a batch). Once you finish the parameter update on the last training example, hopefully the network should be trained well enough so that the weights of the layers are tuned correctly.</p>
</blockquote>
<h2 id="How-Companies-Use-CNNs"><a href="#How-Companies-Use-CNNs" class="headerlink" title="How Companies Use CNNs"></a>How Companies Use CNNs</h2><blockquote>
<p>Data, data, data. The companies that have lots of this magic 4 letter word are the ones that have an inherent advantage over the rest of the competition. The more training data that you can give to a network, the more training iterations you can make, the more weight updates you can make, and the better tuned to the network is when it goes to production. Facebook (and Instagram) can use all the photos of the billion users it currently has, Pinterest can use information of the 50 billion pins that are on its site, Google can use search data, and Amazon can use data from the millions of products that are bought every day. And now you know the magic behind how they use it.</p>
</blockquote>
<h2 id="Disclaimer"><a href="#Disclaimer" class="headerlink" title="Disclaimer"></a>Disclaimer</h2><blockquote>
<p>While this post should be a good start to understanding CNNs, it is by no means a comprehensive overview. Things not discussed in this post include the nonlinear and pooling layers as well as hyperparameters of the network such as filter sizes, stride, and padding. Topics like network architecture, batch normalization, vanishing gradients, dropout, initialization techniques, non-convex optimization,biases, choices of loss functions, data augmentation,regularization methods, computational considerations, modifications of backpropagation, and more were also not discussed (yet ).</p>
</blockquote>
<p><a href="https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&apos;s-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/" target="_blank" rel="external">Link to Part 2 </a></p>
<p>Dueces. </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[DeepLearningCnn]]></title>
      <url>http://zhangshengshan.github.io/2017/04/18/DeepLearningCnn/</url>
      <content type="html"><![CDATA[<p>W &#x5982;&#x679C;&#x521D;&#x59CB;&#x5316;&#x4E0D;&#x4E3A;0 &#x4F1A;&#x51FA;&#x73B0;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x95EE;&#x9898;</p>
<p><strong>symmetry breaking</strong> &#x4EC0;&#x4E48;&#x542B;&#x4E49;<br><strong>0 gradients</strong> </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ExactlyOnce]]></title>
      <url>http://zhangshengshan.github.io/2017/03/28/ExactlyOnce/</url>
      <content type="html"><![CDATA[<p><a href="https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/" target="_blank" rel="external">https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SparkParseJson]]></title>
      <url>http://zhangshengshan.github.io/2017/03/08/SparkParseJson/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[EchoServer服务器]]></title>
      <url>http://zhangshengshan.github.io/2017/02/15/EchoServer%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<h1 id="EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;"><a href="#EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;" class="headerlink" title="EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;"></a>EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;</h1><h2 id="&#x63D0;&#x7EB2;"><a href="#&#x63D0;&#x7EB2;" class="headerlink" title="&#x63D0;&#x7EB2;"></a>&#x63D0;&#x7EB2;</h2><ul>
<li>&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer</li>
<li>&#x91C7;&#x7528;&#x517C;&#x5BB9;API&#x7684;EchoServer</li>
<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;</li>
<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;</li>
<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x6A21;&#x578B;</li>
</ul>
<h2 id="&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer"><a href="#&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer" class="headerlink" title="&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer"></a>&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer</h2><h3 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">int socket(int domain, int type, int protocol);</div><div class="line">Returns file descriptor on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>
<p>domain &#x53EF;&#x4EE5;&#x662F;AF_UNIX&#x3001;AF_INET&#x3001;AF_INET6&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x901A;&#x8FC7;&#x5185;&#x6838;&#x3001;IPV4&#x8FDE;&#x63A5;&#x7684;&#x4E3B;&#x673A;&#x3001;IPV6&#x8FDE;&#x63A5;&#x7684;&#x4E3B;&#x673A;&#x8FDB;&#x884C;&#x901A;&#x8BAF;&#xFF0C;Unix&#x57DF;(AF_INET)&#x53EA;&#x80FD;&#x5728;&#x76F8;&#x540C;&#x7684;&#x4E3B;&#x673A;&#x4E0A;&#x8FDB;&#x884C;&#x901A;&#x8BAF;&#x3002;&#x4E0A;&#x9762;&#x5404;&#x79CD;&#x57DF;&#x5BF9;&#x8FD9;&#x6837;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x3002;<br>type &#x53EF;&#x4EE5;&#x662F;SOCK_STREAM&#x3001;SOCK_DGRAM&#x6216;&#x8005;SOCK_RAW&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x3002;</p>
<h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);</div><div class="line">Returns 0 on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>
<p>sockfd&#x662F;&#x901A;&#x8FC7;socket&#x8C03;&#x7528;&#x521B;&#x5EFA;&#x7684;socket&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C; struct sockaddr &#x662F;&#x901A;&#x7528;&#x5730;&#x5740;&#x7ED3;&#x6784;&#xFF0C;&#x56E0;&#x4E3A;socket()&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#x57DF;&#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x79CD;&#x7C7B;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x80FD;&#x591F;&#x63A5;&#x53D7;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x5740;&#x7C7B;&#x578B;&#x6BD4;&#x5982;(sockaddr_un,sockaddr_in,sockaddr_in6)&#x3002;</p>
<h3 id="listen"><a href="#listen" class="headerlink" title="listen"></a>listen</h3><p>&#x6D41;&#x5F0F;&#x7684;SOCKET&#x5206;&#x4E3A;&#x4E3B;&#x52A8;&#x88AB;&#x52A8;&#x4E24;&#x79CD;&#xFF0C;&#x7B80;&#x5355;&#x6765;&#x8BB2;connect&#x64CD;&#x4F5C;&#x7684;SOCKET&#x6210;&#x4E3A;&#x4E3B;&#x52A8;&#x7684;&#x5927;&#x5BB6;&#xFF0C;&#x800C;&#x901A;&#x8FC7;listen&#x64CD;&#x4F5C;&#x7684;SOCKET&#x53EF;&#x4EE5;&#x88AB;&#x52A8;&#x7684;&#x63A5;&#x5165;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nclude &lt;sys/socket.h&gt;</div><div class="line">int listen(int sockfd, int backlog);</div><div class="line">Returns 0 on success, or &#x2013;1 on error</div></pre></td></tr></table></figure></p>
<p>backlog &#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x662F;&#x63A7;&#x5236;&#x5185;&#x6838;&#x8BB0;&#x5F55;&#x672A;&#x51B3;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x91CF;&#x3002;<strong>&#x672A;&#x51B3;&#x8FDE;&#x63A5;</strong>&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x5DF2;&#x7ECF;&#x53D1;&#x751F;connect&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x56E0;&#x4E3A;&#x5FD9;&#x4E8E;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x800C;&#x5C1A;&#x672A;accept&#x64CD;&#x4F5C;&#x3002;</p>
<h3 id="accept"><a href="#accept" class="headerlink" title="accept"></a>accept</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);</div><div class="line">Returns file descriptor on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>
<p>accept&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x4F1A;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x63A5;&#x5165;&#x8FDE;&#x63A5;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8C03;&#x7528;accept()&#x65F6;&#x5019;&#x4E0D;&#x5B58;&#x5728;&#x672A;&#x51B3;&#x8FDE;&#x63A5;&#xFF0C;&#x90A3;&#x4E48;&#x5219;&#x8BE5;&#x8C03;&#x7528;&#x4F1A;&#x963B;&#x585E;&#x5230;&#x6709;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x4E3A;&#x6B62;&#x3002;</p>
<h3 id="&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;"><a href="#&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;" class="headerlink" title="&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;"></a>&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">#include &lt;sys/types.h&gt;</div><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;netinet/in.h&gt;</div><div class="line">#include &lt;arpa/inet.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;fcntl.h&gt;</div><div class="line">#include &lt;sys/shm.h&gt;</div><div class="line"></div><div class="line">#define MYPORT  8887</div><div class="line">#define QUEUE   20</div><div class="line">#define BUFFER_SIZE 1024</div><div class="line"></div><div class="line">int main()</div><div class="line">{</div><div class="line">    ///&#x5B9A;&#x4E49;sockfd</div><div class="line">    int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class="line">    ///&#x5B9A;&#x4E49;sockaddr_in</div><div class="line">    struct sockaddr_in server_sockaddr;</div><div class="line">    server_sockaddr.sin_family = AF_INET;</div><div class="line">    server_sockaddr.sin_port = htons(MYPORT);</div><div class="line">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class="line">    ///bind&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class="line">    if(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class="line">    {</div><div class="line">        perror(&quot;bind&quot;);</div><div class="line">        exit(1);</div><div class="line">    }</div><div class="line">    ///listen&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class="line">    if(listen(server_sockfd,QUEUE) == -1)</div><div class="line">    {</div><div class="line">        perror(&quot;listen&quot;);</div><div class="line">        exit(1);</div><div class="line">    }</div><div class="line">    ///&#x5BA2;&#x6237;&#x7AEF;&#x5957;&#x63A5;&#x5B57;</div><div class="line">    char buffer[BUFFER_SIZE];</div><div class="line">    struct sockaddr_in client_addr;</div><div class="line">    socklen_t length = sizeof(client_addr);</div><div class="line">    ///&#x6210;&#x529F;&#x8FD4;&#x56DE;&#x975E;&#x8D1F;&#x63CF;&#x8FF0;&#x5B57;&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class="line">    int conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class="line">    if(conn&lt;0)</div><div class="line">    {</div><div class="line">        perror(&quot;connect&quot;);</div><div class="line">        exit(1);</div><div class="line">    }</div><div class="line">    while(1)</div><div class="line">    {</div><div class="line">        memset(buffer,0,sizeof(buffer));</div><div class="line">        int len = recv(conn, buffer, sizeof(buffer),0);</div><div class="line">        if(strcmp(buffer,&quot;exit\n&quot;)==0)</div><div class="line">            break;</div><div class="line">        fputs(buffer, stdout);</div><div class="line">        send(conn, buffer, len, 0);</div><div class="line">    }</div><div class="line">    close(conn);</div><div class="line">    close(server_sockfd);</div><div class="line">    return 0;</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer"><a href="#&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer" class="headerlink" title="&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer"></a>&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer</h2><p>&#x7F51;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x7684;&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#x6559;&#x7A0B;&#x6216;&#x8005;&#x6587;&#x7AE0;&#x7ED9;&#x51FA;&#x7684;&#x6700;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x548C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5DEE;&#x4E0D;&#x591A;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5B8C;&#x5584;&#x3002;&#x8FD9;&#x4E9B;&#x6539;&#x8FDB;&#x4E3B;&#x8981;&#x662F;&#x91C7;&#x7528;&#x540D;&#x79F0;&#x6765;&#x66FF;&#x4EE3;IP&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;&#x53F7;&#x3002;&#xFF08;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6765;&#x81EA;&#x4E8E;&#x300A;Linux/Unix&#x7CFB;&#x7EDF;&#x7F16;&#x7A0B;&#x624B;&#x518C;&#x300B;&#xFF09;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">#define _BSD_SOURCE             /* To get definitions of NI_MAXHOST and NI_MAXSERV from &lt;netdb.h&gt; */</div><div class="line">#include &lt;netdb.h&gt;</div><div class="line">#include &quot;is_seqnum.h&quot;</div><div class="line">#define BACKLOG 50</div><div class="line">int main(int argc, char *argv[])</div><div class="line">{</div><div class="line">    uint32_t seqNum;</div><div class="line">    char reqLenStr[INT_LEN];            /* Length of requested sequence */</div><div class="line">    char seqNumStr[INT_LEN];            /* Start of granted sequence */</div><div class="line">    struct sockaddr_storage claddr;</div><div class="line">    int lfd, cfd, optval, reqLen;</div><div class="line">    socklen_t addrlen;</div><div class="line">    struct addrinfo hints;</div><div class="line">    struct addrinfo *result, *rp;</div><div class="line">#define ADDRSTRLEN (NI_MAXHOST + NI_MAXSERV + 10)</div><div class="line">    char addrStr[ADDRSTRLEN];</div><div class="line">    char host[NI_MAXHOST];</div><div class="line">    char service[NI_MAXSERV];</div><div class="line"></div><div class="line">    if (argc &gt; 1 &amp;&amp; strcmp(argv[1], &quot;--help&quot;) == 0)</div><div class="line">        usageErr(&quot;%s [init-seq-num]\n&quot;, argv[0]);</div><div class="line"></div><div class="line">    seqNum = (argc &gt; 1) ? getInt(argv[1], 0, &quot;init-seq-num&quot;) : 0;</div><div class="line"></div><div class="line">    /* Ignore the SIGPIPE signal, so that we find out about broken connection errors via a failure from write(). */</div><div class="line"></div><div class="line">    if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)    errExit(&quot;signal&quot;);</div><div class="line"></div><div class="line">    /* Call getaddrinfo() to obtain a list of addresses that we can try binding to */</div><div class="line"></div><div class="line">    memset(&amp;hints, 0, sizeof(struct addrinfo));</div><div class="line">    hints.ai_canonname = NULL;</div><div class="line">    hints.ai_addr = NULL;</div><div class="line">    hints.ai_next = NULL;</div><div class="line">    hints.ai_socktype = SOCK_STREAM;</div><div class="line">    hints.ai_family = AF_UNSPEC;        /* Allows IPv4 or IPv6 */</div><div class="line">    // &#x8FD9;&#x91CC;&#x6307;&#x5B9A;&#x4E86;AI_PASSIVE &#x521B;&#x5EFA;&#x7684;socket&#x4F1A;&#x88AB;&#x7ED1;&#x5B9A;&#x5728;&#x901A;&#x914D;&#x5730;&#x5740;&#x4E0A;, &#x7ED3;&#x679C;&#x5C31;&#x662F;&#x5F53;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5728;&#x591A;&#x5BBF;&#x4E3B;&#x673A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;</div><div class="line">    // &#xFF0C;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x53D1;&#x9001;&#x5230;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x5730;&#x5740;&#x7684;&#x8BF7;&#x6C42;&#x3002;</div><div class="line">    hints.ai_flags = AI_PASSIVE | AI_NUMERICSERV;</div><div class="line">                        /* Wildcard IP address; service name is numeric */</div><div class="line"></div><div class="line">    if (getaddrinfo(NULL, PORT_NUM, &amp;hints, &amp;result) != 0)</div><div class="line">        errExit(&quot;getaddrinfo&quot;);</div><div class="line"></div><div class="line">    /* Walk through returned list until we find an address structure</div><div class="line">       that can be used to successfully create and bind a socket */</div><div class="line"></div><div class="line">    optval = 1;</div><div class="line">    for (rp = result; rp != NULL; rp = rp-&gt;ai_next) {</div><div class="line">        lfd = socket(rp-&gt;ai_family, rp-&gt;ai_socktype, rp-&gt;ai_protocol);</div><div class="line">        if (lfd == -1)</div><div class="line">            continue;                   /* On error, try next address */</div><div class="line"></div><div class="line">        if (setsockopt(lfd, SOL_SOCKET, SO_REUSEADDR, &amp;optval, sizeof(optval))</div><div class="line">                == -1)</div><div class="line">             errExit(&quot;setsockopt&quot;);</div><div class="line"></div><div class="line">        if (bind(lfd, rp-&gt;ai_addr, rp-&gt;ai_addrlen) == 0)</div><div class="line">            break;                      /* Success */</div><div class="line"></div><div class="line">        /* bind() failed: close this socket and try next address */</div><div class="line">        close(lfd);</div><div class="line">    }</div><div class="line"></div><div class="line">    if (rp == NULL)</div><div class="line">        fatal(&quot;Could not bind socket to any address&quot;);</div><div class="line"></div><div class="line">    if (listen(lfd, BACKLOG) == -1)</div><div class="line">        errExit(&quot;listen&quot;);</div><div class="line"></div><div class="line">    /* freeaddrinfo&#x7684;&#x4F5C;&#x7528;&#x662F;&#x91CA;&#x653E;getaddrinfo&#x4E3A;result&#x52A8;&#x6001;&#x5206;&#x914D;&#x7684;&#x5185;&#x5B58; */</div><div class="line">    freeaddrinfo(result);</div><div class="line"></div><div class="line">    for (;;) {                  /* Handle clients iteratively */</div><div class="line"></div><div class="line">        /* Accept a client connection, obtaining client&apos;s address */</div><div class="line"></div><div class="line">        addrlen = sizeof(struct sockaddr_storage);</div><div class="line">        cfd = accept(lfd, (struct sockaddr *) &amp;claddr, &amp;addrlen);</div><div class="line">        if (cfd == -1) {</div><div class="line">            errMsg(&quot;accept&quot;);</div><div class="line">            continue;</div><div class="line">        }</div><div class="line"></div><div class="line">        if (getnameinfo((struct sockaddr *) &amp;claddr, addrlen,</div><div class="line">                    host, NI_MAXHOST, service, NI_MAXSERV, 0) == 0)</div><div class="line">            snprintf(addrStr, ADDRSTRLEN, &quot;(%s, %s)&quot;, host, service);</div><div class="line">        else</div><div class="line">            snprintf(addrStr, ADDRSTRLEN, &quot;(?UNKNOWN?)&quot;);</div><div class="line">        printf(&quot;Connection from %s\n&quot;, addrStr);</div><div class="line"></div><div class="line">        /* Read client request, send sequence number back */</div><div class="line"></div><div class="line">        if (readLine(cfd, reqLenStr, INT_LEN) &lt;= 0) {</div><div class="line">            close(cfd);</div><div class="line">            continue;                   /* Failed read; skip request */</div><div class="line">        }</div><div class="line"></div><div class="line">        reqLen = atoi(reqLenStr);</div><div class="line">        if (reqLen &lt;= 0) {              /* Watch for misbehaving clients */</div><div class="line">            close(cfd);</div><div class="line">            continue;                   /* Bad request; skip it */</div><div class="line">        }</div><div class="line"></div><div class="line">        snprintf(seqNumStr, INT_LEN, &quot;%d\n&quot;, seqNum);</div><div class="line">        if (write(cfd, seqNumStr, strlen(seqNumStr)) != strlen(seqNumStr))</div><div class="line">            fprintf(stderr, &quot;Error on write&quot;);</div><div class="line"></div><div class="line">        seqNum += reqLen;               /* Update sequence number */</div><div class="line"></div><div class="line">        if (close(cfd) == -1)           /* Close connection */</div><div class="line">            errMsg(&quot;close&quot;);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<h3 id="getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;"><a href="#getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;" class="headerlink" title="getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;"></a>getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">#include &lt;netdb.h&gt;</div><div class="line">int getaddrinfo(const char *host, const char *service,</div><div class="line">const struct addrinfo *hints, struct addrinfo **result);</div><div class="line">Returns 0 on success, or nonzero on error</div></pre></td></tr></table></figure>
<ul>
<li>host&#x53EF;&#x4EE5;&#x662F;&#x4E3B;&#x673A;&#x540D;&#x79F0;&#x6216;&#x8005;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;&#x7684;IP&#x5730;&#x5740;</li>
<li>service&#x53EF;&#x4EE5;&#x662F;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x6216;&#x8005;&#x7AEF;&#x53E3;&#x53F7;</li>
<li>hints&#x53C2;&#x6570;&#x89C4;&#x5B9A;&#x4E86;result&#x53C2;&#x6570;&#x8FD4;&#x56DE;&#x7684;socket&#x5730;&#x5740;&#x7684;&#x6807;&#x51C6;&#x3002;</li>
<li>result&#x53C2;&#x6570;&#x662F;getaddrinfo&#x81EA;&#x52A8;&#x5206;&#x914D;&#x7684;addrinfo&#x94FE;&#x8868;&#x3002;</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">struct addrinfo {</div><div class="line">int ai_flags; /* Input flags (AI_* constants) */</div><div class="line">int ai_family; /* Address family */</div><div class="line">int ai_socktype; /* Type: SOCK_STREAM, SOCK_DGRAM */</div><div class="line">int ai_protocol; /* Socket protocol */</div><div class="line">size_t ai_addrlen; /* Size of structure pointed to by ai_addr */</div><div class="line">char *ai_canonname; /* Canonical name of host */</div><div class="line">struct sockaddr *ai_addr; /* Pointer to socket address structure */</div><div class="line">struct addrinfo *ai_next; /* Next structure in linked list */</div><div class="line">};</div></pre></td></tr></table></figure>
<p>hints&#x53C2;&#x6570;&#x53EA;&#x80FD;&#x8BBE;&#x7F6E; ai_flags&#xFF0C;ai_family, ai_socktype, ai_protocol&#x56DB;&#x4E2A;&#x5B57;&#x6BB5;&#x3002;hints.ai_family&#x53EF;&#x4EE5;&#x6307;&#x5B9A;AF_INET&#x6216;&#x8005;AF_INET6, &#x6216;&#x8005;&#x8BBE;&#x7F6E;&#x4E3A;AF_UNSPEC. hints.ai_socktype&#x6307;&#x5B9A;socket&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;SOCK_STREAM&#x6216;&#x8005;SOCK_DGRAM&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;0&#x5219;&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;socket. hints.ai_flags&#x63A7;&#x5236;getaddrinfo&#x7684;&#x884C;&#x4E3A;&#x3002;AI_PASSIVE&#x8868;&#x793A;&#x8FD4;&#x56DE;&#x88AB;&#x52A8;&#x65B9;&#x5F0F;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x3002;&#x6B64;&#x65F6;host&#x8BBE;&#x7F6E;&#x4E3A;NULL&#xFF0C;&#x901A;&#x8FC7;result&#x8FD4;&#x56DE;&#x7684;socket&#x5730;&#x5740;&#x7ED3;&#x6784;&#x5C06;&#x4F1A;&#x5305;&#x542B;&#x901A;&#x914D;IP&#x5730;&#x5740;&#xFF08;&#x5373;INADDR_DAY&#x6216;&#x8005;IN6ADDR_ANY_INIT&#xFF09;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;AI_PASSIVE&#x5219;&#x8FD4;&#x56DE;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x5C06;&#x4F1A;&#x5C06;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x4E3A;connect() &#x548C;sendto()&#x3002;</p>
<p>SO_REUSEADDR &#x662F;TCP&#x670D;&#x52A1;&#x5668;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x8981;&#x8BBE;&#x7F6E;&#x8FD9;&#x4E2A;&#x9009;&#x9879;&#x3002;&#x8FD9;&#x91CC;&#x4EC5;&#x4EC5;&#x5173;&#x6CE8;&#x5176;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#x7528;&#x9014;&#xFF1A;&#x907F;&#x514D;&#x5F53;&#x670D;&#x52A1;&#x5668;&#x91CD;&#x542F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C1D;&#x8BD5;&#x5C06;&#x5957;&#x63A5;&#x5B57;&#x5173;&#x8054;&#x5728;&#x5F53;&#x524D;TCP&#x8282;&#x70B9;&#x76F8;&#x5173;&#x8054;&#x7684;&#x7AEF;&#x53E3;&#x4E0A;&#x7684;&#x65F6;&#x5019;&#x51FA;&#x73B0;EADDRRINUSE&#xFF08;&#x5730;&#x5740;&#x5DF2;&#x4F7F;&#x7528;&#xFF09;&#x7684;&#x9519;&#x8BEF;&#x3002;</p>
<h2 id="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;"><a href="#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;" class="headerlink" title="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;"><a href="#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;" class="headerlink" title="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;-&#x5F02;&#x6B65;IO-&#x534F;&#x7A0B;&#x6A21;&#x578B;"><a href="#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;-&#x5F02;&#x6B65;IO-&#x534F;&#x7A0B;&#x6A21;&#x578B;" class="headerlink" title="&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;(&#x5F02;&#x6B65;IO/&#x534F;&#x7A0B;&#x6A21;&#x578B;)"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;(&#x5F02;&#x6B65;IO/&#x534F;&#x7A0B;&#x6A21;&#x578B;)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="&#x5176;&#x4ED6;"><a href="#&#x5176;&#x4ED6;" class="headerlink" title="&#x5176;&#x4ED6;"></a>&#x5176;&#x4ED6;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Homebrew_config_for_mac]]></title>
      <url>http://zhangshengshan.github.io/2017/02/11/Homebrew-config-for-mac/</url>
      <content type="html"><![CDATA[<p>MAC &#x4E0A;&#x9762;&#x7684;brew&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x6162;&#xFF0C;&#x5C1D;&#x8BD5;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x52A0;&#x901F;homebrew&#x5B89;&#x88C5;&#x8F6F;&#x4EF6;&#x7684;&#x901F;&#x5EA6;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">cd &quot;$(brew --repo)&quot;</div><div class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</div><div class="line"></div><div class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</div><div class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</div><div class="line"></div><div class="line">brew update</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[test]]></title>
      <url>http://zhangshengshan.github.io/2017/01/25/test/</url>
      <content type="html"><![CDATA[<h1 id="aa"><a href="#aa" class="headerlink" title="aa"></a>aa</h1><h2 id="bb"><a href="#bb" class="headerlink" title="bb"></a>bb</h2><ul>
<li>asdf</li>
<li>asdf</li>
<li>asdf</li>
<li>asdf</li>
<li>asdf</li>
</ul>
<h2 id="cc"><a href="#cc" class="headerlink" title="cc"></a>cc</h2><h3 id="ccc"><a href="#ccc" class="headerlink" title="ccc"></a>ccc</h3><p class="text-muted">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>
<p class="text-primary">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
<p class="text-success">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>
<p class="text-info">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
<p class="text-warning">Etiam porta sem malesuada magna mollis euismod.</p>
<p class="text-danger">Donec ullamcorper nulla non metus auctor fringilla.</p>
<a class="btn btn-default" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-primary" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-success" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-warning" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-danger" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-info" href="http://www.baidu.com" target="_blank" rel="external">baidu</a>
<span class="label label-default">default</span>
<span class="label label-warning">warinng</span>
<span class="label label-success">success</span>
<span class="label label-danger">danger</span>
<span class="label label-primary">primary</span>
<span class="label label-info">info</span>
<p class="text-info">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>
<p class="text-info">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>
<a class="btn btn-default" href="http://hahack.com" target="_blank" rel="external">asdfasdfasdfasdf</a>
<a class="btn btn-success" href="http://hahack.com" target="_blank" rel="external">text</a>
<a class="btn btn-default" href="http://github.com" target="_blank" rel="external">asdfasdfasdf</a>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfassfdsfssfasdf
adsfasdfadsfasfadsfafdasfd
asdfasdfasdfafsaf</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfasdfassdf</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfasdfassdf</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfasdfassdf</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfasdfassdf</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  asdfasdfasdfassdf</div>
<p><img src="https://adeshpande3.github.io/assets/Cover.png" alt="avatar"></p>
<h1 id="asdf"><a href="#asdf" class="headerlink" title="asdf"></a>asdf</h1><p><a href="http://www.baidu.com" target="_blank" rel="external">asdf</a>]</p>
<ul>
<li>asdf</li>
<li>asdf</li>
<li>asdf</li>
<li>as</li>
<li>dfa</li>
<li>sdf</li>
<li>asdf<br>-</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[LearningFlink]]></title>
      <url>http://zhangshengshan.github.io/2017/01/07/LearningFlink/</url>
      <content type="html"><![CDATA[<h1 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h1><p>Flink &#x5904;&#x7406;&#x6709;&#x754C;&#x548C;&#x65E0;&#x754C;&#x6570;&#x636E;&#x6E90;&#x9700;&#x8981;&#x91C7;&#x7528;&#x4E0D;&#x540C;&#x7684;Api, &#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x89C1;&#x4E0B;&#x8868;&#x683C;</p>
<table>
<thead>
<tr>
<th>DataSource</th>
<th>ApiType</th>
</tr>
</thead>
<tbody>
<tr>
<td>bounded source</td>
<td>DataSet Api</td>
</tr>
<tr>
<td>unbounded source</td>
<td>DataStream Api</td>
</tr>
</tbody>
</table>
<h1 id="create-sbt-project"><a href="#create-sbt-project" class="headerlink" title="create sbt project"></a>create sbt project</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn archetype:generate  -DarchetypeGroupId=org.apache.flink  -DarchetypeArtifactId=flink-quickstart-scala  -DarchetypeVersion=1.1.3</div></pre></td></tr></table></figure>
<h2 id="Data-Sink"><a href="#Data-Sink" class="headerlink" title="Data Sink"></a>Data Sink</h2><p>if Data Sink operation is defined, then env.execute is needed </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Deep MNIST for Experts]]></title>
      <url>http://zhangshengshan.github.io/2017/01/04/Deep-MNIST-for-Experts/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">from tensorflow.examples.tutorials.mnist import input_data</div><div class="line">mnist = input_data.read_data_sets(&apos;MNIST_data&apos;, one_hot=True)</div><div class="line"></div><div class="line">import tensorflow as tf</div><div class="line">sess = tf.InteractiveSession()</div><div class="line"></div><div class="line"></div><div class="line">#None &#x8868;&#x793A;&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5F88;&#x591A;&#x4E2A;&#x6837;&#x672C;, 784=28*28&#x8868;&#x793A;&#x5171;&#x6709;784&#x4E2A;&#x50CF;&#x7D20;&#x70B9;</div><div class="line">#y_&#x8868;&#x793A;&#x4E0E;x&#x5BF9;&#x5E94;&#x7684;label, &#x7531;&#x4E8E;&#x91C7;&#x7528;&#x7684;&#x662F;one_hot&#x7F16;&#x7801;&#x7684;&#x6240;&#x4EE5;&#x662F;10&#x7EF4;</div><div class="line">x = tf.placeholder(tf.float32, shape=[None, 784])</div><div class="line">y_ = tf.placeholder(tf.float32, shape=[None, 10])</div><div class="line"></div><div class="line"></div><div class="line">W = tf.Variable(tf.zeros([784,10]))</div><div class="line">b = tf.Variable(tf.zeros([10]))</div><div class="line"></div><div class="line"></div><div class="line">sess.run(tf.global_variables_initializer())</div><div class="line"># &#x5047;&#x8BBE; &#x6709;X&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x90A3;&#x4E48; (X*784) * (784*10) = (X*10) </div><div class="line">y = tf.matmul(x,W) + b</div><div class="line"></div><div class="line"></div><div class="line">cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Google 面试宝典]]></title>
      <url>http://zhangshengshan.github.io/2017/01/04/Google-%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/</url>
      <content type="html"><![CDATA[<p>geek.csdn.net/news/detail/107064</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[install tensorflow]]></title>
      <url>http://zhangshengshan.github.io/2016/12/28/install-tensorflow/</url>
      <content type="html"><![CDATA[<p>anaconda &#x63D0;&#x4F9B;&#x4E86;python&#x79D1;&#x5B66;&#x8BA1;&#x7B97;&#x7684;&#x73AF;&#x5883;&#xFF0C;&#x4E3A;&#x5404;&#x79CD;python&#x8F6F;&#x4EF6;&#x5305;&#x5B89;&#x88C5;&#x548C;&#x7BA1;&#x7406;&#x63D0;&#x4F9B;&#x4E86;&#x904D;&#x5386;&#xFF0C;&#x6309;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x65B9;&#x5F0F;&#x5373;&#x53EF;&#x4EE5;&#x5B89;&#x88C5;tensorflow. </p>
<h2 id="&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;"><a href="#&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;" class="headerlink" title="&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;"></a>&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda create -n tensorflow python=3.5</div></pre></td></tr></table></figure>
<h2 id="&#x5B89;&#x88C5;tensorflow"><a href="#&#x5B89;&#x88C5;tensorflow" class="headerlink" title="&#x5B89;&#x88C5;tensorflow"></a>&#x5B89;&#x88C5;tensorflow</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ source activate tensorflow</div><div class="line">(tensorflow)$  # Your prompt should change</div><div class="line"></div><div class="line"># Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:</div><div class="line">(tensorflow)$ conda install -c conda-forge tensorflow</div></pre></td></tr></table></figure>
<p>&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x72B6;&#x51B5;&#x4E0D;&#x597D;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x91C7;&#x7528;pip&#x5B89;&#x88C5;&#x3002;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ source activate tensorflow</div><div class="line">(tensorflow)$  # Your prompt should change</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.12.0-py3-none-any.whl</div></pre></td></tr></table></figure>
<p><strong>&#x8BF7;&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x4E0D;&#x80FD;&#x91C7;&#x7528;pip3&#x5B89;&#x88C5;&#xFF0C;&#x56E0;&#x4E3A;anaconda&#x73AF;&#x5883;&#x4E2D;pip3&#x5B89;&#x88C5;&#x662F;&#x6709;&#x95EE;&#x9898;&#x7684;</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --ignore-installed --upgrade $TF_BINARY_URL</div></pre></td></tr></table></figure></p>
<h2 id="&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;"><a href="#&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;" class="headerlink" title="&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;"></a>&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import tensorflow as tf</div><div class="line">print(tf.__versioin__)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vim使用技巧]]></title>
      <url>http://zhangshengshan.github.io/2016/12/22/vim%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h2 id="dbext"><a href="#dbext" class="headerlink" title="dbext"></a>dbext</h2><p>&#x5728;&#x547D;&#x4EE4;&#x5F0F;&#x4E2D;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x6307;&#x4EE4;&#xFF0C;&#x6BD4;&#x5982;DBCompleteTables&#x53EF;&#x4EE5;&#x5728;vim&#x7684;dictionary&#x4E2D;&#x5B58;&#x50A8;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8868;&#x683C;&#x540D;&#x79F0;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DBCompleteTables</div><div class="line">DBCompleteProcedures</div><div class="line">DBCompleteViews</div></pre></td></tr></table></figure></p>
<p>&#x6B64;&#x65F6;&#x5728;vim&#x4E2D;&#x8F93;&#x5165;&#x8868;&#x683C;&#x540D;&#x79F0;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;ctrl+x &#x548C; ctrl+k &#x6765;&#x5B9E;&#x73B0;&#x81EA;&#x52A8;&#x4E0D;&#x5168;&#x8868;&#x540D;&#x79F0;&#x7684;&#x529F;&#x80FD;&#x3002;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\slc</div></pre></td></tr></table></figure>
<p>&#x5728;table_name &#x4E0A;&#x9762;&#x505C;&#x7559;&#x5149;&#x6807;&#x7136;&#x540E;&#x6267;&#x884C;\slc&#x5219;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;&#x8FD9;&#x4E2A;&#x8868;&#x683C;&#x7684;&#x5404;&#x4E2A;&#x5B57;&#x6BB5;&#x540D;&#x79F0;, &#x6309;p&#x5219;&#x53EF;&#x7C98;&#x8D34;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">**\sh**</div></pre></td></tr></table></figure>
<p>&#x67E5;&#x770B;&#x6267;&#x884C;&#x7684;&#x5386;&#x53F2;&#xFF0C;&#x5728;ResultBuffer&#x4E2D;&#x8F93;&#x5165;Enter&#x5219;&#x6267;&#x884C;&#x8BE5;&#x547D;&#x4EE4;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UVa455]]></title>
      <url>http://zhangshengshan.github.io/2016/12/21/UVa455/</url>
      <content type="html"><![CDATA[<p>inspired by my wife, and i got the code below<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;strings.h&gt;</div><div class="line">int main ( int argc, char *argv[] )</div><div class="line">{</div><div class="line">    char buf[81];</div><div class="line">    int i = 0;</div><div class="line">    memset(buf,0,sizeof(buf));</div><div class="line">    while(scanf(&quot;%s&quot;,buf)!=EOF){</div><div class="line">        for(i=1;i&lt;strlen(buf);i++){</div><div class="line">            if ( strlen(buf)%i==0 ){</div><div class="line">                if (strncmp(buf,buf+i,strlen(buf)-i)==0) {</div><div class="line">                    printf ( &quot; k is %d\n&quot;,i );</div><div class="line">                    break;</div><div class="line">                }</div><div class="line">            }</div><div class="line">        }</div><div class="line">        if(i==strlen(buf)){</div><div class="line">            printf ( &quot;k is %d\n&quot;,i );</div><div class="line">        }</div><div class="line">        memset(buf,0,sizeof(buf));</div><div class="line">    }</div><div class="line">    return EXIT_SUCCESS;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[UVa1225]]></title>
      <url>http://zhangshengshan.github.io/2016/12/21/UVa1225/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;strings.h&gt;</div><div class="line">int main ( int argc, char *argv[] )</div><div class="line">{</div><div class="line">    int a[10]={0};</div><div class="line">    int temp = 0;</div><div class="line">    int i =0;</div><div class="line">    int num=0;</div><div class="line">    while(1==scanf(&quot;%d&quot;,&amp;num)){</div><div class="line">        memset(a,0,sizeof(a));</div><div class="line">        for (i = 1; i &lt;= num; i++) {</div><div class="line">            temp = i;</div><div class="line">            do {</div><div class="line">                a[temp%10]++;</div><div class="line">                temp = temp/10;</div><div class="line">            } while(temp);</div><div class="line">        }</div><div class="line">        for (i = 0; i &lt; 9; i++) {</div><div class="line">            printf ( &quot;%d &quot;,a[i] );           /* code */</div><div class="line">        }</div><div class="line">        printf ( &quot;%d\n&quot;, a[i] );</div><div class="line">    }</div><div class="line">    return EXIT_SUCCESS;</div><div class="line">}				/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[3_2UVa1586]]></title>
      <url>http://zhangshengshan.github.io/2016/12/21/3-2UVa1586/</url>
      <content type="html"><![CDATA[<h1 id="Molar-Mass-ACM-ICPC-sroul-2007-UVa1586"><a href="#Molar-Mass-ACM-ICPC-sroul-2007-UVa1586" class="headerlink" title="Molar Mass ACM/ICPC sroul 2007, UVa1586"></a>Molar Mass ACM/ICPC sroul 2007, UVa1586</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;strings.h&gt;</div><div class="line">#include &lt;ctype.h&gt;</div><div class="line"></div><div class="line">/* </div><div class="line"> * ===  FUNCTION  ======================================================================</div><div class="line"> *         Name:  main</div><div class="line"> *  Description:  </div><div class="line"> * =====================================================================================</div><div class="line"> */</div><div class="line"></div><div class="line">/* </div><div class="line"> * ===  FUNCTION  ======================================================================</div><div class="line"> *         Name:  get_g</div><div class="line"> *  Description:  </div><div class="line"> * =====================================================================================</div><div class="line"> */</div><div class="line">float get_g ( char a )</div><div class="line">{</div><div class="line">    switch(a){</div><div class="line">        case &apos;C&apos;:</div><div class="line">            return 12.01;</div><div class="line">            break;</div><div class="line">        case &apos;H&apos;:</div><div class="line">            return 1.008;</div><div class="line">            break;</div><div class="line">        case &apos;O&apos;:</div><div class="line">            return 16.00;</div><div class="line">            break;</div><div class="line">        case &apos;N&apos;:</div><div class="line">            return 14.01;</div><div class="line">            break;</div><div class="line">        default:</div><div class="line">            return -1.0;</div><div class="line">    }</div><div class="line">}		</div><div class="line">int main ( int argc, char *argv[] ) {</div><div class="line">    char buf[101]={}; </div><div class="line">    int flag = 0;</div><div class="line">    float sum = 0.0;</div><div class="line">    int i = 0 ;</div><div class="line">    int j = 0;</div><div class="line">    int count = 0;</div><div class="line"></div><div class="line">    while( (scanf(&quot;%s&quot;, buf)!=EOF) ){</div><div class="line">        flag = 0;</div><div class="line">        for (i = 0; buf[i]!=&apos;\0&apos;; i++) {</div><div class="line">            count = 0;</div><div class="line">            for( j=i+1;isdigit(buf[j])&amp;&amp;buf[j];j++ ){</div><div class="line">                count = count * 10 + (buf[j]-&apos;0&apos;);</div><div class="line">            }</div><div class="line">            if (count==0) {</div><div class="line">                count=1;</div><div class="line">            }</div><div class="line">            if (buf[i]!=&apos;C&apos;</div><div class="line">                    &amp;&amp; buf[i]!=&apos;N&apos;</div><div class="line">                    &amp;&amp; buf[i]!=&apos;O&apos;</div><div class="line">                    &amp;&amp; buf[i]!=&apos;H&apos;</div><div class="line">                    ) {</div><div class="line">                flag = 1;</div><div class="line">            }</div><div class="line">            sum += count * get_g(buf[i]);</div><div class="line">            i=j-1;</div><div class="line">        }</div><div class="line">        if (!flag){</div><div class="line">            printf ( &quot;sum is %f\n&quot;,sum );</div><div class="line">        }else{</div><div class="line">//            printf ( &quot;input error\n&quot; );</div><div class="line">        }</div><div class="line">    }</div><div class="line">    return EXIT_SUCCESS;</div><div class="line">}				/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Streaming Programming Guide]]></title>
      <url>http://zhangshengshan.github.io/2016/12/15/Spark-Streaming-Programming-Guide/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[17年要读的书和学习的技能]]></title>
      <url>http://zhangshengshan.github.io/2016/12/09/17%E5%B9%B4%E8%A6%81%E8%AF%BB%E7%9A%84%E4%B9%A6%E5%92%8C%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8A%80%E8%83%BD/</url>
      <content type="html"><![CDATA[<h1 id="17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;"><a href="#17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;" class="headerlink" title="17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;"></a>17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;</h1><table>
<thead>
<tr>
<th>&#x4E66;&#x7C4D;&#x540D;&#x79F0;</th>
<th>&#x76EE;&#x7684;</th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x7B97;&#x6CD5;&#x827A;&#x672F;&#x4E0E;&#x4FE1;&#x606F;&#x5B66;&#x7ADE;&#x8D5B;:&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x5165;&#x95E8;&#x7ECF;&#x5178;(&#x7B2C;2&#x7248;)</td>
<td>&#x63D0;&#x5347;&#x7B97;&#x6CD5;&#x6C34;&#x5E73;&#xFF0C;&#x5F3A;&#x5316;C&#xFF0F;C++</td>
</tr>
<tr>
<td>&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x5165;&#x95E8;&#x7ECF;&#x5178;:&#x8BAD;&#x7EC3;&#x6307;&#x5357;</td>
<td>&#x63D0;&#x9AD8;&#x7B97;&#x6CD5;&#xFF0C;&#x8BAD;&#x7EC3;&#x601D;&#x7EF4;</td>
</tr>
<tr>
<td>&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x5199;Java&#x865A;&#x62DF;&#x673A;</td>
<td>&#x4E86;&#x89E3;JAVA&#x865A;&#x62DF;&#x673A;&#x539F;&#x7406;&#xFF0C;&#x63D0;&#x5347;Golang&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>
</tr>
<tr>
<td>&#x54CD;&#x5E94;&#x5F0F;&#x67B6;&#x6784;:&#x6D88;&#x606F;&#x6A21;&#x5F0F;Actor&#x5B9E;&#x73B0;&#x4E0E;Scala&#x3001;Akka&#x5E94;&#x7528;&#x96C6;&#x6210;</td>
<td>&#x5B66;&#x4E60;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x3001;&#x63D0;&#x5347;Scala&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>
</tr>
<tr>
<td><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="external">&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E2D;&#x6587;&#x7248;</a></td>
<td>&#x5B66;&#x4E60;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x4E3A;&#x8BE5;&#x9879;&#x76EE;&#x8D21;&#x732E;&#x4EE3;&#x7801;</td>
</tr>
<tr>
<td>Tensorflow&#x5B9E;&#x6218;</td>
<td>&#x5B66;&#x4E60;tensorflow&#x7F16;&#x5199;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7A0B;&#x5E8F;</td>
</tr>
<tr>
<td>&#x5206;&#x5E03;&#x5F0F;&#x5B9E;&#x65F6;&#x5904;&#x7406;&#x7CFB;&#x7EDF;&#xFF1A;&#x539F;&#x7406;&#x3001;&#x67B6;&#x6784;&#x4E0E;&#x5B9E;&#x73B0;</td>
<td>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5206;&#x5E03;&#x5F0F;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#xFF0C;&#x63D0;&#x5347;C&#xFF0F;C++&#x5B9E;&#x6218;&#x80FD;&#x529B;</td>
</tr>
<tr>
<td>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF1A;21&#x5929;&#x5B9E;&#x6218;Caffe</td>
<td>&#x5B9E;&#x6218;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x5347;C&#xFF0F;C++&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>
</tr>
</tbody>
</table>
<h1 id="17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;"><a href="#17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;" class="headerlink" title="17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;"></a>17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;</h1><p>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x65B9;&#x5411;</p>
<ul>
<li>DecisionTree</li>
<li>XgBoost</li>
<li>SVM </li>
<li>AdaBoost</li>
<li>PCA</li>
<li>LogisticRegresion</li>
</ul>
<p>Scala</p>
<ul>
<li>Akka</li>
<li>Actor</li>
</ul>
<p>Golang</p>
<ul>
<li>Beego</li>
<li>channel&#x57FA;&#x7840;</li>
</ul>
<p>&#x6570;&#x5B66;&#x57FA;&#x7840;</p>
<ul>
<li>&#x7EBF;&#x6027;&#x4EE3;&#x6570;</li>
<li>&#x6982;&#x7387;&#x8BBA;</li>
</ul>
<p>Spark</p>
<ul>
<li>Spark mlib</li>
<li>streaming(redis/kafka/akka/hbase)</li>
<li>structure streaming</li>
<li>basic rdd</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SparkDataFrameLikeSql]]></title>
      <url>http://zhangshengshan.github.io/2016/12/09/SparkDataFrameLikeSql/</url>
      <content type="html"><![CDATA[<p>The idea of spark Datafame may be inspired from dataframe of pandas which is a package of python for structure data processing. On my opinion, dataframe can by prefered by the people with BI(business intelligence) background for high development efficiency.</p>
<p>DataFrame in Spark could by registered as something which could be considered approximately as a virtual table, therefore anyone who has expierence of SQL could explore the data at quite a low cost of time.</p>
<p>This article will focus on some dataframe processing method without the help of registering a virtual table and executing SQL, however the corresponding SQL operations such as  SELECT, WHERE, GROUPBY, MIN, MAX, COUNT, SUM ,DISTINCT, ORDERBY, DESC/ASC, JOIN and GROUPBY TOP will be supplied for a better understanding of dataframe in spark.</p>
<h2 id="prepare-test-data"><a href="#prepare-test-data" class="headerlink" title="prepare test data"></a>prepare test data</h2><p>Firstly we make a DataFrame object a by reading a json file<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">val sc: SparkContext // An existing SparkContext.</div><div class="line">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class="line">// this is used to implicitly convert an RDD to a DataFrame.</div><div class="line">import sqlContext.implicits._</div><div class="line">val a = sqlContext.read.json(&quot;people.json&quot;)</div></pre></td></tr></table></figure></p>
<p>and the content of people.json is as below<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">{&quot;name&quot;:&quot;Michael&quot; , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3000 }</div><div class="line">{&quot;name&quot;:&quot;Dan&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3500 }</div><div class="line">{&quot;name&quot;:&quot;Alex&quot;    , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3600 }</div><div class="line">{&quot;name&quot;:&quot;Ben&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3700 }</div><div class="line">{&quot;name&quot;:&quot;Andy&quot;    , &quot;age&quot;:30 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:4000 }</div><div class="line">{&quot;name&quot;:&quot;Justin&quot;  , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:5000 }</div><div class="line">{&quot;name&quot;:&quot;Jack&quot;    , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:2000 }</div></pre></td></tr></table></figure></p>
<p>let us image a as a Table which is stored in a RDS database such as MySQL.</p>
<h2 id="desc"><a href="#desc" class="headerlink" title="desc"></a>desc</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">desc people;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">scala&gt; a.printSchema</div><div class="line">root</div><div class="line">|-- age: long (nullable = true)</div><div class="line">|-- depart: string (nullable = true)</div><div class="line">|-- name: string (nullable = true)</div><div class="line">|-- salary: long (nullable = true)</div></pre></td></tr></table></figure>
<h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select name from people;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a.select(&quot;name&quot;).show</div><div class="line">a.select($&quot;name&quot;).show</div><div class="line">a.select(a(&quot;name&quot;)).show</div></pre></td></tr></table></figure>
<p>the three methods above are equivelent.</p>
<h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select name,age from people where age = 23</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a.select(&quot;name&quot;, &quot;age&quot;).where($&quot;age&quot;===23).show</div><div class="line">a.select(&quot;name&quot;, &quot;age&quot;).filter($&quot;age&quot;===23).show</div></pre></td></tr></table></figure>
<h2 id="MIN-MAX-SUM-COUNT"><a href="#MIN-MAX-SUM-COUNT" class="headerlink" title="MIN,MAX,SUM,COUNT"></a>MIN,MAX,SUM,COUNT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select min(age), max(age), sum(salary), count(age) from people</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a.select(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div><div class="line">a.agg(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div></pre></td></tr></table></figure>
<p>and the result is<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">+--------+--------+-----------+----------+</div><div class="line">|min(age)|max(age)|sum(salary)|count(age)|</div><div class="line">+--------+--------+-----------+----------+</div><div class="line">|      19|      30|      24800|         7|</div><div class="line">+--------+--------+-----------+----------+</div></pre></td></tr></table></figure></p>
<h2 id="COUNT-DISTINCT"><a href="#COUNT-DISTINCT" class="headerlink" title="COUNT DISTINCT"></a>COUNT DISTINCT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select count (distinct age) , count ( distinct name ) from people</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a.select(count(&quot;age&quot;),countDistinct(&quot;age&quot;)).show</div><div class="line">a.agg(count(&quot;age&quot;), countDistinct(&quot;name&quot;)).show</div></pre></td></tr></table></figure>
<p>and the result is<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">+-------------------+--------------------+</div><div class="line">|count(DISTINCT age)|count(DISTINCT name)|</div><div class="line">+-------------------+--------------------+</div><div class="line">|                  7|                   3|</div><div class="line">+-------------------+--------------------+</div></pre></td></tr></table></figure></p>
<h2 id="ORDERBY-desc"><a href="#ORDERBY-desc" class="headerlink" title="ORDERBY desc"></a>ORDERBY desc</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select * from people orderby age desc, name desc</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a.sort($&quot;age&quot;.desc,$&quot;name&quot;.desc).show</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">+---+------+-------+------+</div><div class="line">|age|depart|   name|salary|</div><div class="line">+---+------+-------+------+</div><div class="line">| 30|     B|   Andy|  4000|</div><div class="line">| 23|     A|Michael|  3000|</div><div class="line">| 23|     A|    Dan|  3500|</div><div class="line">| 23|     A|    Ben|  3700|</div><div class="line">| 23|     A|   Alex|  3600|</div><div class="line">| 19|     A| Justin|  5000|</div><div class="line">| 19|     B|   Jack|  2000|</div><div class="line">+---+------+-------+------+</div></pre></td></tr></table></figure>
<h2 id="inner-join-left-outer-join-and-convert-null-to-a-default-value"><a href="#inner-join-left-outer-join-and-convert-null-to-a-default-value" class="headerlink" title="inner join, left outer join and convert null to a default value"></a>inner join, left outer join and convert null to a default value</h2><p>first we make another dataframe based on a<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">val c = a.filter(not ($&quot;age&quot;===23))</div><div class="line"></div><div class="line">scala&gt; c.show</div><div class="line">+---+------+------+------+</div><div class="line">|age|depart|  name|salary|</div><div class="line">+---+------+------+------+</div><div class="line">| 30|     B|  Andy|  4000|</div><div class="line">| 19|     A|Justin|  5000|</div><div class="line">| 19|     B|  Jack|  2000|</div><div class="line">+---+------+------+------+</div></pre></td></tr></table></figure></p>
<p>now we try to join a and c </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">select </div><div class="line">    a.age as a_age,</div><div class="line">    if(c.age is null, 0, c.age) as c_age,</div><div class="line">    a.depart as a_depart</div><div class="line">from </div><div class="line">    a</div><div class="line">left outer join</div><div class="line">    c</div><div class="line">on </div><div class="line">    a.age = c.age</div></pre></td></tr></table></figure>
<p>the cording dataframe form is<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.fill(0,Seq(&quot;c_age&quot;)).show</div><div class="line">+-----+-----+--------+</div><div class="line">|a_age|c_age|a_depart|</div><div class="line">+-----+-----+--------+</div><div class="line">|   23|    0|       A|</div><div class="line">|   23|    0|       A|</div><div class="line">|   23|    0|       A|</div><div class="line">|   23|    0|       A|</div><div class="line">|   30|   30|       B|</div><div class="line">|   19|   19|       A|</div><div class="line">|   19|   19|       A|</div><div class="line">|   19|   19|       B|</div><div class="line">|   19|   19|       B|</div><div class="line">+-----+-----+--------+</div></pre></td></tr></table></figure></p>
<p>what if those records whose c.age is null is execluded<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">select </div><div class="line">    a.age as a_age,</div><div class="line">    if(c.age is null, 0, c.age) as c_age,</div><div class="line">    a.depart as a_depart</div><div class="line">from </div><div class="line">    a</div><div class="line">left outer join</div><div class="line">    c</div><div class="line">on </div><div class="line">    a.age = c.age</div><div class="line">where </div><div class="line">    c.age is not null</div></pre></td></tr></table></figure></p>
<p>the na.drop method provided this function<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.drop.show</div><div class="line">+-----+-----+--------+</div><div class="line">|a_age|c_age|a_depart|</div><div class="line">+-----+-----+--------+</div><div class="line">|   30|   30|       B|</div><div class="line">|   19|   19|       A|</div><div class="line">|   19|   19|       A|</div><div class="line">|   19|   19|       B|</div><div class="line">|   19|   19|       B|</div><div class="line">+-----+-----+--------+</div></pre></td></tr></table></figure></p>
<h2 id="Top-N-for-group"><a href="#Top-N-for-group" class="headerlink" title="Top N for group"></a>Top N for group</h2><p>use window operation can help<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import org.apache.spark.sql.expressions.Window</div><div class="line">val w = Window.partitionBy($&quot;depart&quot;)</div><div class="line">import org.apache.spark.sql.expressions.Window</div><div class="line">val rankAsc = row_number().over(w.orderBy($&quot;salary&quot;)).alias(&quot;rank_asc&quot;)</div><div class="line">val rankDesc = row_number().over(w.orderBy($&quot;salary&quot;.desc)).alias(&quot;rank_desc&quot;)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 || $&quot;rank_desc&quot; &gt;= 2).show</div><div class="line">+---+------+-------+------+--------+---------+</div><div class="line">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class="line">+---+------+-------+------+--------+---------+</div><div class="line">| 30|     B|   Andy|  4000|       2|        1|</div><div class="line">| 19|     B|   Jack|  2000|       1|        2|</div><div class="line">| 23|     A|    Ben|  3700|       4|        2|</div><div class="line">| 23|     A|   Alex|  3600|       3|        3|</div><div class="line">| 23|     A|    Dan|  3500|       2|        4|</div><div class="line">| 23|     A|Michael|  3000|       1|        5|</div><div class="line">+---+------+-------+------+--------+---------+</div><div class="line">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 &amp;&amp; $&quot;rank_desc&quot; &gt;= 2).show</div><div class="line">+---+------+-------+------+--------+---------+</div><div class="line">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class="line">+---+------+-------+------+--------+---------+</div><div class="line">| 19|     B|   Jack|  2000|       1|        2|</div><div class="line">| 23|     A|    Dan|  3500|       2|        4|</div><div class="line">| 23|     A|Michael|  3000|       1|        5|</div><div class="line">+---+------+-------+------+--------+---------+</div></pre></td></tr></table></figure>
<p>what&#x2019;s more, it is clearly <code>select *</code> in SQL could by implemented by <code>select($&quot;*&quot;)</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[save spark rdd into Mysql]]></title>
      <url>http://zhangshengshan.github.io/2016/12/05/save-spark-rdd-into-Mysql/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">import java.util.Properties</div><div class="line">val target_df = targetRdd.toDF()</div><div class="line">val prop = new Properties()</div><div class="line">prop.put(&quot;user&quot;, &quot;username&quot;)</div><div class="line">prop.put(&quot;password&quot;, &quot;password&quot;)</div><div class="line">ret_df.write.mode(&quot;append&quot;).jdbc(&quot;jdbc:mysql://host:port/database&quot;,&quot;table&quot;,prop)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SparkStreamLearning]]></title>
      <url>http://zhangshengshan.github.io/2016/11/28/SparkStreamLearning/</url>
      <content type="html"><![CDATA[<h1 id="input-source"><a href="#input-source" class="headerlink" title="input source"></a>input source</h1><p>kafka<br>akka</p>
<h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><p>redis<br>kafka<br>elasticSearch<br>hive<br>mySql</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MAC访问你DOCKER容器中的WEB页面]]></title>
      <url>http://zhangshengshan.github.io/2016/11/10/MAC%E8%AE%BF%E9%97%AE%E4%BD%A0DOCKER%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84WEB%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>docker run -d -p hostport:dockerport &#x2013;name your_container_name  your_image_name nginx -g &#x201C;daemon off;&#x201D;</p>
<p>the above instruction start a docker nginx application which bind is port dockerport to its host port hostport.<br>usually you can access the nginx service on your host environment by curl the hostport, however in MacOs, ths hostport here<br>is the virtual machine. so when you curl localhost:hostport, you will get no response.</p>
<p>the right way is access the virtual machine responding port. so the ip of virtual machine is needed.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-machine ip your_virtual_machine</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl the ip you get:hostport</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Install Caffe on CentOS]]></title>
      <url>http://zhangshengshan.github.io/2016/11/09/Install-Caffe-on-CentOS/</url>
      <content type="html"><![CDATA[<p>&#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5728;CentOS&#x5E73;&#x53F0;&#x4E0A;&#x5B89;&#x88C5;Caffe</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark Window Operation ]]></title>
      <url>http://zhangshengshan.github.io/2016/08/22/Spark-Window-Operation/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Spark 2.0 Introduction]]></title>
      <url>http://zhangshengshan.github.io/2016/08/19/Spark-2-0-Introduction/</url>
      <content type="html"><![CDATA[<h1 id="Spark-2-0-MLib-Introduction"><a href="#Spark-2-0-MLib-Introduction" class="headerlink" title="Spark 2.0 MLib Introduction"></a>Spark 2.0 MLib Introduction</h1><p>As of Spark 2.0, the RDD-based APIs in the spark.mllib package have entered maintenance mode. The primary Machine Learning API for Spark is now the DataFrame-based API in the spark.ml package.</p>
<p>Spark2.0 ,&#x5728;spark.mllib&#x4E2D;&#x7684;&#x57FA;&#x4E8E;RDD&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;APIs&#x5C06;&#x4F1A;&#x8FDB;&#x5165;&#x7EF4;&#x62A4;&#x6A21;&#x5F0F;&#x3002;&#x73B0;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x4E3B;&#x8981;&#x7684;API&#x57FA;&#x4E8E;DataFrame,&#x4F4D;&#x4E8E;spark.ml&#x4E2D;&#x3002;</p>
<p>What are the implications?</p>
<pre><code>MLlib will still support the RDD-based API in spark.mllib with bug fixes.
MLlib will not add new features to the RDD-based API.
In the Spark 2.x releases, MLlib will add features to the DataFrames-based API to reach feature parity with the RDD-based API.
After reaching feature parity (roughly estimated for Spark 2.2), the RDD-based API will be deprecated.
The RDD-based API is expected to be removed in Spark 3.0.
</code></pre><p>Why is MLlib switching to the DataFrame-based API?</p>
<pre><code>DataFrames provide a more user-friendly API than RDDs. The many benefits of DataFrames include Spark Datasources, SQL/DataFrame queries, Tungsten and Catalyst optimizations, and uniform APIs across languages.
The DataFrame-based API for MLlib provides a uniform API across ML algorithms and across multiple languages.
DataFrames facilitate practical ML Pipelines, particularly feature transformations. See the Pipelines guide for details.
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Save DataFrame into a partitioned table of HIVE]]></title>
      <url>http://zhangshengshan.github.io/2016/08/19/Save-DataFrame-into-a-partitioned-table-of-HIVE/</url>
      <content type="html"><![CDATA[<h1 id="How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table"><a href="#How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table" class="headerlink" title="How to save a spark DataFrame as a patitioned hive table"></a>How to save a spark DataFrame as a patitioned hive table</h1><h2 id="utilise-saveAsTable-method"><a href="#utilise-saveAsTable-method" class="headerlink" title="utilise saveAsTable method"></a>utilise saveAsTable method</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">val conf = new SparkConf().setAppName(&quot;Simple Application&quot;).setMaster(&quot;local&quot;)</div><div class="line">val sc = new SparkContext(conf)</div><div class="line">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class="line">import sqlContext.implicits._</div><div class="line">val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)</div><div class="line">hiveContext.sql(&quot;use database&quot;)</div><div class="line"></div><div class="line">val cmd =</div><div class="line">  &quot;&quot;&quot;</div><div class="line">     select</div><div class="line">      col1,</div><div class="line">      col2</div><div class="line">     from</div><div class="line">      table</div><div class="line">  &quot;&quot;&quot;.stripMargin</div><div class="line">val yourDf = hiveContext.sql(cmd)</div><div class="line">yourDf.printSchema()</div><div class="line">yourDf.write.partitionBy(&quot;col2&quot;).saveAsTable(&quot;partitionTableName&quot;)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SparkPassFunctions]]></title>
      <url>http://zhangshengshan.github.io/2016/08/11/SparkPassFunctions/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">class MyClass {</div><div class="line">  val field = &quot;Hello&quot;</div><div class="line">  def doStuff(rdd: RDD[String]): RDD[String] = {</div><div class="line">  val field_ = this.field</div><div class="line">  rdd.map(x =&gt; field_ + x)}</div><div class="line">}</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MergeSort]]></title>
      <url>http://zhangshengshan.github.io/2016/07/26/MergeSort/</url>
      <content type="html"><![CDATA[<p>&#x5F52;&#x5E76;&#x6392;&#x5E8F;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">def msort[A](less: (A, A) =&gt; Boolean)(xs: List[A]): List[A] = { </div><div class="line">    def merge(xs1: List[A], xs2: List[A]): List[A] =</div><div class="line">        if (xs1.isEmpty) xs2</div><div class="line">        else if (xs2.isEmpty) xs1</div><div class="line">        else if (less(xs1.head, xs2.head)) xs1.head :: merge(xs1.tail, xs2) else xs2.head :: merge(xs1, xs2.tail)</div><div class="line">    val n = xs.length/2</div><div class="line">    if (n == 0) xs</div><div class="line">    else merge(msort(less)(xs take n), msort(less)(xs drop n))</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5982;&#x679C;&#x4F60;&#x5BF9;python&#x5217;&#x8868;&#x7684;&#x7528;&#x6CD5;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x7684;&#x65B9;&#x5F0F;&#x7406;&#x89E3;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xs take n   // xs[0:n+1]</div><div class="line">xs drop n   // xs[n+1:]</div></pre></td></tr></table></figure>
<p>msort&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x8C03;&#x7528;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msort((x: Int, y: Int) =&gt; x &lt; y)(List(5, 7, 1, 3))</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ScalaList]]></title>
      <url>http://zhangshengshan.github.io/2016/07/26/ScalaList/</url>
      <content type="html"><![CDATA[<p>Lists are not built in in Scala; they are defined by an abstract class List, <strong>which comes with two subclasses for :: and Nil.</strong><br>List &#x5E76;&#x4E0D;&#x662F;Scala&#x7684;&#x5185;&#x7F6E;&#x7C7B;&#x578B;&#x3002;List&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x62BD;&#x8C61;&#x7C7B;&#x3002;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">package scala</div><div class="line">abstract class List[+A] {</div></pre></td></tr></table></figure>
<p>List is an abstract class, so one cannot define elements by calling the empty List constructor (e.g. by new List). The class has a type parameter a. It is co-variant in this parameter,which means thatList[S] &lt;: List[T] for all types S and T such thatS &lt;: T.The class is situated in the package scala.This is a package containing the most important standard classes of Scala. List defines a number of methods, which are explained in the following.<br>List &#x662F;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x901A;&#x8FC7;&#x7A7A;&#x7684;List&#x6784;&#x9020;&#x5668;&#x6765;&#x5B9A;&#x4E49;&#x5143;&#x7D20;&#x3002;List&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x53C2;&#x6570;A&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x534F;&#x53D8;&#x7C7B;&#x578B;, &#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x7C7B;&#x578B;S&#x548C;T&#xFF0C;&#x5982;&#x679C;S&lt;:T, &#x5219; List[S]&lt;:List[T]&#x3002;&#x8BE5;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x5728;scala package&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x662F;Scala&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6807;&#x51C6;calsses&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Scala call-by-name call-by-value]]></title>
      <url>http://zhangshengshan.github.io/2016/07/19/Scala-call-by-name-call-by-value/</url>
      <content type="html"><![CDATA[<p>Call-by-value has the advantage that it avoids repeated evaluation of arguments.<br>Call-by-name has the advantage that it avoids evaluation of arguments when the<br>parameter is not used at all by the function. Call-by-value is usually more efficient<br>than call-by-name, but a call-by-value evaluation might loop where a call-by-name<br>evaluation would terminate. Consider:</p>
<p>Call-by-value &#x7684;&#x4F18;&#x52BF;&#x5728;&#x4E8E;&#x907F;&#x514D;&#x4E0D;&#x65AD;&#x7684;&#x8BA1;&#x7B97;&#x53C2;&#x6570;&#x3002;&#x800C;call-by-name&#x7684;&#x4F18;&#x52BF;&#x5728;&#x4E8E;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x4E0D;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x4E0E;call-by-value&#x6070;&#x597D;&#x76F8;&#x53CD;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;&#x4E00;&#x4E2A;Call-by-value&#x4F1A;&#x4E0D;&#x505C;&#x5FAA;&#x73AF;&#x4F46;&#x662F;Call-by-name&#x4F1A;&#x505C;&#x6B62;&#x7684;&#x4F8B;&#x5B50;&#x3002;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">scala&gt; def loop: Int = loop</div><div class="line">loop: Int</div><div class="line">scala&gt; def first(x: Int, y: Int) = x</div><div class="line">first: (Int,Int)Int</div></pre></td></tr></table></figure>
<p>Then first(1, loop) reduces with call-by-name to 1, whereas the same term reduces with call-by-value repeatedly to itself, hence evaluation does not terminate.<br>first(1, loop)<br>&#x2192; first(1, loop)<br>&#x2192; first(1, loop)<br>&#x2192; &#x2026;<br>&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x4E0D;&#x505C;&#x7684;&#x5FAA;&#x73AF;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;,y &#x88AB;&#x58F0;&#x660E;&#x4E3A; Call-by-value&#xFF0C;&#x56E0;&#x800C;&#xFF0C;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5426;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x4F1A;&#x88AB;&#x7528;&#x5230;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x90FD;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x4E0D;&#x505C;&#x7684;&#x5FAA;&#x73AF;&#x3002;</p>
<p>Scala uses call-by-value by default, but it switches to call-by-name evaluation if the<br>parameter type is preceded by =&gt;.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">scala&gt; def constOne(x: Int, y: =&gt; Int) = 1</div><div class="line">constOne: (Int,=&gt; Int)Int</div><div class="line">scala&gt; constOne(1, loop)</div><div class="line">unnamed0: Int = 1</div><div class="line">scala&gt; constOne(loop, 2) // gives an infinite loop.</div></pre></td></tr></table></figure></p>
<p>constOne(1,loop) &#x4F1A;&#x505C;&#x6B62;&#xFF0C;y&#x88AB;&#x58F0;&#x660E;&#x4E3A;Call-by-name, &#x6240;&#x4EE5;&#x5F53;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;,&#x5219;&#x4E0D;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x9677;&#x5165;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x3002;<br>constOne(loop,2) &#x5219;&#x6070;&#x597D;&#x76F8;&#x53CD;&#x3002;</p>
<p>&#x672C;&#x6587;&#x793A;&#x4F8B; &#x6765;&#x81EA;&#x4E8E;  &#x300A;ScalaByExample&#x300B;,&#x611F;&#x8C22;&#x539F;&#x4F5C;&#x8005;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[机器学习相关材料]]></title>
      <url>http://zhangshengshan.github.io/2016/07/13/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E6%9D%90%E6%96%99/</url>
      <content type="html"><![CDATA[<h1 id="&#x6570;&#x5B66;&#x57FA;&#x7840;"><a href="#&#x6570;&#x5B66;&#x57FA;&#x7840;" class="headerlink" title="&#x6570;&#x5B66;&#x57FA;&#x7840;"></a>&#x6570;&#x5B66;&#x57FA;&#x7840;</h1><ul>
<li>1&#x3001;&#x5FAE;&#x79EF;&#x5206; <a href="http://v.163.com/special/sp/singlevariablecalculus.html" target="_blank" rel="external">http://v.163.com/special/sp/singlevariablecalculus.html</a>  <a href="http://open.163.com/special/opencourse/multivariable.html" target="_blank" rel="external">http://open.163.com/special/opencourse/multivariable.html</a></li>
<li>2&#x3001;&#x7EBF;&#x6027;&#x4EE3;&#x6570; <a href="http://open.163.com/special/opencourse/daishu.html" target="_blank" rel="external">http://open.163.com/special/opencourse/daishu.html</a></li>
<li>3&#x3001;&#x6982;&#x7387;&#x7EDF;&#x8BA1;<a href="http://open.163.com/special/Khan/probability.html" target="_blank" rel="external">http://open.163.com/special/Khan/probability.html</a><br>&#x60F3;&#x8981;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF0C;&#x9700;&#x8981;&#x5177;&#x6709;&#x624E;&#x5B9E;&#x7684;&#x6570;&#x5B66;&#x57FA;&#x7840;&#xFF08;&#x77E9;&#x9635;&#x5206;&#x6790;&#x548C;&#x6982;&#x7387;&#x7EDF;&#x8BA1;&#x662F;&#x57FA;&#x7840;&#x7684;&#x7406;&#x8BBA;&#xFF09;</li>
</ul>
<h1 id="&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;"><a href="#&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;" class="headerlink" title="&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;"></a>&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>
<li>1&#x3001;&#x6700;&#x4F18;&#x5316;&#x7406;&#x8BBA;&#xFF08;&#x91CD;&#x70B9;&#x51F8;&#x4F18;&#x5316;&#x7406;&#x8BBA;&#xFF09;  <a href="http://stanford.edu/~boyd/cvxbook/" target="_blank" rel="external">http://stanford.edu/~boyd/cvxbook/</a>   <a href="http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian" target="_blank" rel="external">http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian</a></li>
<li>2&#x3001;&#x65F6;&#x53D8;&#x51FD;&#x6570;&#x4E0E;&#x6CDB;&#x51FD;&#x5206;&#x6790; <a href="http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1" target="_blank" rel="external">http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1</a>  <a href="http://open.163.com/special/opencourse/fanhanfenxi.html" target="_blank" rel="external">http://open.163.com/special/opencourse/fanhanfenxi.html</a></li>
<li>3&#x3001;&#x968F;&#x673A;&#x8FC7;&#x7A0B; Hyperlink: Stochastic Process MIT View the complete course: Discrete Stochastic Processes</li>
</ul>
<h1 id="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;"><a href="#&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;" class="headerlink" title="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;"></a>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>
<li>1&#x3001;Coursera&#x4E0A;Andrew Ng Andrew Ng&#x7684;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</li>
<li>2&#x3001;&#x6797;&#x8ED2;&#x7530;(&#x56FD;&#x7ACB;&#x53F0;&#x6E7E;&#x5927;&#x5B66;) &#x6A5F;&#x5668;&#x5B78;&#x7FD2;&#x57FA;&#x77F3;</li>
</ul>
<h1 id="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;-1"><a href="#&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;-1" class="headerlink" title="&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;"></a>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>
<li>1&#x3001; &#x300A;&#x7EDF;&#x8BA1;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;&#x300B;&#x674E;&#x822A;</li>
<li>2&#x3001; &#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5BFC;&#x8BBA;&#x300B;</li>
<li>3&#x3001; &#x300A;PRML&#x300B;</li>
<li>4&#x3001; &#x300A;&#x56FE;&#x89E3;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;[&#x65E5;]&#x6749;&#x5C71;&#x5C06;</li>
<li>5&#x3001;   Machine Learning: A Probabilistic Prespective &#xFF08;Kevin Murphy&#xFF09;</li>
<li>6&#x3001;   Pattern Recognition and Machine Learning &#xFF08;Christopher Bishop&#xFF09;</li>
<li>7&#x3001; &#x300A;Spark&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</li>
<li>8&#x3001; &#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5B9E;&#x6218;&#x300B;</li>
<li>9&#x3001; &#x300A;&#x8D1D;&#x53F6;&#x65AF;&#x601D;&#x7EF4;:&#x7EDF;&#x8BA1;&#x5EFA;&#x6A21;&#x7684;Python&#x5B66;&#x4E60;&#x6CD5;&#x300B;</li>
<li>10&#x3001;Python&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x300B;</li>
<li>11&#x3001;&#x6570;&#x5B66;&#x4E4B;&#x7F8E; &#xFF08;&#x5434;&#x519B;&#xFF09;</li>
<li>12&#x3001;Web&#x667A;&#x80FD;&#x7B97;&#x6CD5; &#xFF08;Haralambos Marmanis, Dmitry Babenko&#xFF09;</li>
<li>13&#x3001;&#x96C6;&#x4F53;&#x667A;&#x6167;&#x7F16;&#x7A0B; &#xFF08;Toby Segaran&#xFF09;</li>
<li>14&#x3001;&#x63A8;&#x8350;&#x7CFB;&#x7EDF;&#x5B9E;&#x8DF5;</li>
<li>15&#x3001;&#x8BA1;&#x7B97;&#x5E7F;&#x544A;&#x5B66;</li>
</ul>
<h1 id="&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;"><a href="#&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;" class="headerlink" title="&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;"></a>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;</h1><ul>
<li>1&#x3001;&#x300A;Deep Learning&#x300B;<a href="http://www.deeplearningbook.org" target="_blank" rel="external">http://www.deeplearningbook.org</a></li>
<li>2&#x3001;  CSDN Blog <a href="http://blog.csdn.net/zouxy09/article/details/8775360" target="_blank" rel="external">http://blog.csdn.net/zouxy09/article/details/8775360</a></li>
<li>3&#x3001;&#x300A;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x6559;&#x7A0B;&#x300B;<a href="http://ufldl.stanford.edu/tutorial" target="_blank" rel="external">http://ufldl.stanford.edu/tutorial</a></li>
</ul>
<h1 id="&#x6742;&#x9879;"><a href="#&#x6742;&#x9879;" class="headerlink" title="&#x6742;&#x9879;"></a>&#x6742;&#x9879;</h1><p><a href="http://blog.echen.me/2011/04/27/choosing-a-machine-learning-classifier/" target="_blank" rel="external">&#x300A;Choosing a Machine Learning Classifier&#x300B;</a><br><a href="https://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks" target="_blank" rel="external">&#x300A;An Introduction to Deep Learning: From Perceptrons to Deep Networks&#x300B;</a>  <a href="http://www.cnblogs.com/xiaowanyer/p/3701944.html" target="_blank" rel="external">&#x8BD1;&#x6587;</a><br><a href="http://vdisk.weibo.com/s/ayG13we2vxyKl" target="_blank" rel="external">&#x300A;The LION Way: Machine Learning plus Intelligent Optimization&#x300B;</a><br><a href="http://web.stanford.edu/group/pdplab/pdphandbook" target="_blank" rel="external">&#x300A;&#x5206;&#x5E03;&#x5F0F;&#x5E76;&#x884C;&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x300B;</a><br><a href="https://www.microsoft.com/en-us/research/publication/deep-learning-for-natural-language-processing-and-related-applications-tutorial-at-icassp/" target="_blank" rel="external">&#x300A;Deep Learning for Natural Language Processing and Related Applications&#x300B;</a><br><a href="http://neuralnetworksanddeeplearning.com/index.html" target="_blank" rel="external">&#x300A;Neural Networks and Deep Learning&#x300B;</a><br><a href="http://cxwangyi.github.io/notes/2014-01-20-distributed-machine-learning.html" target="_blank" rel="external">&#x300A;&#x5206;&#x5E03;&#x5F0F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x6545;&#x4E8B;&#x300B;</a><br><a href="http://markus.com/deep-learning-101/" target="_blank" rel="external">&#x300A;Deep Learning 101&#x300B;</a><br><a href="https://metacademy.org/roadmaps/rgrosse/deep_learning" target="_blank" rel="external">&#x300A;Deep learning from the bottom up&#x300B;</a><br><a href="http://blog.csdn.net/zouxy09/article/details/8775360" target="_blank" rel="external">&#x300A;Deep Learning&#xFF08;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF09;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x6574;&#x7406;&#x7CFB;&#x5217;&#x300B;</a><br><a href="http://www.seobythesea.com/2014/09/google-turns-deep-learning-classification-fight-web-spam/" target="_blank" rel="external">&#x300A;Google Turns To Deep Learning Classification To Fight Web Spam&#x300B;</a><br><a href="http://neo4j.com/blog/deep-learning-sentiment-analysis-movie-reviews-using-neo4j/" target="_blank" rel="external">&#x300A;Deep Learning Sentiment Analysis for Movie Reviews using Neo4j&#x300B;</a><br><a href="http://emnlp2014.org/papers/pdf/EMNLP2014148.pdf" target="_blank" rel="external">&#x300A;EMNLP&#x4E0A;&#x4E24;&#x7BC7;&#x5173;&#x4E8E;&#x80A1;&#x7968;&#x8D8B;&#x52BF;&#x7684;&#x5E94;&#x7528;&#x8BBA;&#x6587; &#x300B;</a><br><a href="http://www.morganclaypool.com/doi/abs/10.2200/S00607ED2V01Y201410HLT026" target="_blank" rel="external">&#x300A;Learning to Rank for Information Retrieval and Natural Language Processing&#x300B;</a><br><a href="http://www.cs.toronto.edu/~hinton/" target="_blank" rel="external">&#x300A;Geoffrey E. Hinton&#x300B;</a><br><a href="http://cs.stanford.edu/people/karpathy/convnetjs/demo/rldemo.html" target="_blank" rel="external">&#x300A;Andrej Karpathy&#x7684;&#x6DF1;&#x5EA6;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x6F14;&#x793A;&#x300B; &#x8BBA;&#x6587;&#x5728;&#x8FD9;&#x91CC;</a><br><a href="http://eugenezhulenev.com/blog/2014/11/14/stock-price-prediction-with-big-data-and-machine-learning/" target="_blank" rel="external">&#x300A;&#x7528;&#x5927;&#x6570;&#x636E;&#x548C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x505A;&#x80A1;&#x7968;&#x4EF7;&#x683C;&#x9884;&#x6D4B;&#x300B;</a><br><a href="https://www.kaggle.com/c/word2vec-nlp-tutorial" target="_blank" rel="external">&#x300A;Use Google&#x2019;s Word2Vec for movie reviews&#x300B;</a><br><a href="https://www.technologyreview.com/s/533496/why-neural-networks-look-set-to-thrash-the-best-human-go-players-for-the-first-time/" target="_blank" rel="external">&#x300A;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0B;&#x56F4;&#x68CB;&#x300B;</a><br><a href="http://blog.csdn.net/suipingsp/article/details/42101139" target="_blank" rel="external">&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;&#x53CA;Python&#x5B9E;&#x73B0;&#x2013;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF08;Linear Regression&#xFF09;&#x7B97;&#x6CD5;&#x300B;</a><br><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="external">&#x300A;Caffe&#x300B;</a><br><a href="https://github.com/BVLC/caffe/blob/master/models/bvlc_googlenet/readme.md" target="_blank" rel="external">&#x300A;GoogLeNet&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x6A21;&#x578B;&#x7684;Caffe&#x590D;&#x73B0; &#x300B; GoogleNet&#x8BBA;&#x6587;</a><br><a href="http://techblog.youdao.com/?p=915" target="_blank" rel="external">&#x300A;Deep Learning&#x5B9E;&#x6218;&#x4E4B;word2vec&#x300B;</a><br><a href="http://nikhilbuduma.com/2015/01/11/a-deep-dive-into-recurrent-neural-networks/" target="_blank" rel="external">&#x300A;A Deep Dive into Recurrent Neural Nets&#x300B;</a><br><a href="http://www.cs.toronto.edu/~hinton/" target="_blank" rel="external">&#x300A;Geoffrey E. Hinton&#x4E2A;&#x4EBA;&#x4E3B;&#x9875;&#x300B;</a><br><a href="https://www.paypal-engineering.com/2015/01/12/deep-learning-on-hadoop-2-0-2/" target="_blank" rel="external">&#x300A;Deep Learning on Hadoop 2.0&#x300B;</a><br><a href="http://tech.meituan.com/mt-recommend-practice.html" target="_blank" rel="external">&#x300A;&#x7F8E;&#x56E2;&#x63A8;&#x8350;&#x7B97;&#x6CD5;&#x5B9E;&#x8DF5;&#x300B;</a><br><a href="http://v1v3kn.tumblr.com/post/47193952400/the-trouble-with-svms" target="_blank" rel="external">&#x300A;The Trouble with SVMs&#x300B;</a><br><a href="http://www.gaussianprocess.org/gpml/" target="_blank" rel="external">&#x300A;Gaussian Processes for Machine Learning&#x300B;</a><br><a href="http://www.analyticsvidhya.com/blog/2015/03/introduction-auto-regression-moving-average-time-series/" target="_blank" rel="external">&#x300A;Introduction to ARMA Time Series Models &#x2013; simplified&#x300B;</a><br><a href="https://vimeo.com/19569529" target="_blank" rel="external">&#x300A;Neural Net in C++ Tutorial&#x300B;</a><br><a href="http://deeplearning.net/tutorial/" target="_blank" rel="external">&#x300A;Deep Learning Tutorials&#x300B;</a><br><a href="http://www.kdnuggets.com/2015/03/deep-learning-curse-dimensionality-autoencoders.html" target="_blank" rel="external">&#x300A;Deep Learning, The Curse of Dimensionality, and Autoencoders&#x300B;</a><br><a href="https://databricks.com/blog/2015/03/25/topic-modeling-with-lda-mllib-meets-graphx.html" target="_blank" rel="external">&#x300A;Topic modeling with LDA: MLlib meets GraphX&#x300B;</a><br><a href="https://arxiv.org/abs/1502.05988" target="_blank" rel="external">&#x300A;Deep Learning for Multi-label Classification&#x300B;</a><br><a href="https://deepmind.com/research/publications/" target="_blank" rel="external">&#x300A;Google DeepMind publications&#x300B;  AlphaGo&#x56E2;&#x961F;&#x5B98;&#x65B9;&#x8BBA;&#x6587;</a><br><a href="http://am207.org/" target="_blank" rel="external">&#x300A;AM207: Monte Carlo Methods, Stochastic Optimization&#x300B;</a><br><a href="http://www.allthingsdistributed.com/2015/04/machine-learning.html" target="_blank" rel="external">&#x300A;Back-to-Basics Weekend Reading - Machine Learning&#x300B;</a><br><a href="https://arxiv.org/abs/1504.00641" target="_blank" rel="external">&#x300A;A Probabilistic Theory of Deep Learning&#x300B;</a><br><a href="http://www.quora.com/How-does-Quora-use-machine-learning-in-2015/answer/Xavier-Amatriain" target="_blank" rel="external">&#x300A;How does Quora use machine learning in 2015?&#x300B;</a><br><a href="https://github.com/ogrisel/parallel_ml_tutorial" target="_blank" rel="external">&#x300A;Parallel Machine Learning with scikit-learn and IPython&#x300B;</a><br><a href="http://www.ssc.upenn.edu/~fdiebold/Teaching706/econ706Penn.html" target="_blank" rel="external">&#x300A;Time Series Econometrics - A Concise Course&#x300B;</a><br><a href="http://fotiad.is/blog/sentiment-analysis-comparison/" target="_blank" rel="external">&#x300A;A comparison of open source tools for sentiment analysis&#x300B;</a><br><a href="http://ijcai-15.org/index.php/accepted-papers" target="_blank" rel="external">&#x300A;International Joint Conference on Artificial Intelligence Accepted paper&#x300B;</a><br><a href="https://declara.com/content/21bO33gn" target="_blank" rel="external">&#x300A;How to Evaluate Machine Learning Models, Part 1: Orientation&#x300B;</a><br><a href="http://nbviewer.jupyter.org/github/gmonce/scikit-learn-book/tree/master/" target="_blank" rel="external">&#x300A;Learning scikit-learn: Machine Learning in Python&#x300B;</a><br><a href="https://speakerdeck.com/nivdul/lightning-fast-machine-learning-with-spark" target="_blank" rel="external">&#x300A;Lightning fast Machine Learning with Spark&#x300B;</a><br><a href="http://blog.wepay.com/how-were-using-machine-learning-to-fight-shell-selling/" target="_blank" rel="external">&#x300A;How we&#x2019;re using machine learning to fight shell selling&#x300B;</a><br><a href="http://www.mmds.org/" target="_blank" rel="external">&#x300A;Mining of Massive Datasets&#x300B;</a><br><a href="https://aaltodoc.aalto.fi/bitstream/handle/123456789/15585/isbn9789526061498.pdf" target="_blank" rel="external">&#x300A;Advances in Extreme Learning Machines&#x300B;</a><br><a href="http://www.visiondummy.com/2014/04/curse-dimensionality-affect-classification/" target="_blank" rel="external">&#x300A;The Curse of Dimensionality in classification&#x300B;</a><br><a href="http://blog.terminal.com/demistifying-long-short-term-memory-lstm-recurrent-neural-networks/" target="_blank" rel="external">&#x300A;Demistifying LSTM Neural Networks&#x300B;</a><br><a href="http://bigdata-madesimple.com/decoding-dimensionality-reduction-pca-and-svd/" target="_blank" rel="external">&#x300A;Decoding Dimensionality Reduction, PCA and SVD&#x300B;</a><br><a href="https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms/answer/Xavier-Amatriain" target="_blank" rel="external">&#x300A;What are the advantages of different classification algorithms?&#x300B;</a><br><a href="https://www.datacamp.com/courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic" target="_blank" rel="external">&#x300A;Kaggle R Tutorial on Machine Learning&#x300B; &#x300A;Interactive R Tutorial: Machine Learning for the Titanic Competition&#x300B;.</a><br><a href="http://nbviewer.jupyter.org/github/tfolkman/learningwithdata/blob/master/Logistic%20Gradient%20Descent.ipynb" target="_blank" rel="external">&#x300A;Logistic Regression and Gradient Descent&#x300B;</a><br><a href="http://www.anlytcs.com/2015/05/stock-forecasting-with-machine-learning.html" target="_blank" rel="external">&#x300A;Stock Forecasting With Machine Learning - Seven Possible Errors&#x300B;</a><br><a href="http://www.cnblogs.com/xiaowanyer/p/3701944.html" target="_blank" rel="external">&#x300A;LR&#x539F;&#x7406;&#x89E3;&#x6790;&#x300B;</a><br><a href="http://icml.cc/2015/?page_id=175" target="_blank" rel="external">&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9876;&#x7EA7;&#x4F1A;&#x8BAE;&#x548C;&#x6742;&#x5FD7;&#x300B;</a><br><a href="http://blog.csdn.net/haoni123321/article/details/37913795" target="_blank" rel="external">&#x300A;&#x8D1D;&#x8036;&#x65AF;&#x56DE;&#x5F52;&#x6750;&#x6599;&#x300B;</a><br><a href="http://mindhacks.cn/2008/09/21/the-magical-bayesian-method" target="_blank" rel="external">&#x300A;&#x8D1D;&#x8036;&#x65AF;&#x56DE;&#x5F52;&#x6750;&#x6599;&#x300B;</a><br><a href="https://www.youtube.com/watch?v=63FDxJ5e_Ew" target="_blank" rel="external">&#x300A;alphaGo&#x539F;&#x7406;&#x89E3;&#x6790;&#x300B;</a><br><a href="https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&apos;s-Guide-To-Understanding-Convolutional-Neural-Networks/" target="_blank" rel="external">&#x300A;&#x7406;&#x89E3;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6587;&#x7AE0;&#x300B;</a><br><a href="http://neuralnetworksanddeeplearning.com/" target="_blank" rel="external">&#x300A;Neural Networks and Deep Learning&#x300B;</a><br><a href="https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/" target="_blank" rel="external"> &#x901A;&#x4FD7;&#x6613;&#x61C2;&#x4ECB;&#x7ECD;CNN </a><br><a href="http://cs231n.github.io/" target="_blank" rel="external"> CS231n Convolutional Neural Networks for Visual Recognition </a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[过拟合的原因]]></title>
      <url>http://zhangshengshan.github.io/2016/07/13/%E8%BF%87%E6%8B%9F%E5%90%88%E7%9A%84%E5%8E%9F%E5%9B%A0/</url>
      <content type="html"><![CDATA[<h1 id="&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;"><a href="#&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;" class="headerlink" title="&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;"></a>&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;</h1><h2 id="&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;"><a href="#&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;" class="headerlink" title="&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;"></a>&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;</h2><p>&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x56E0;&#x4E3A;&#x5404;&#x79CD;&#x4E2A;&#x6837;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x603B;&#x4F1A;&#x4EA7;&#x751F;&#x8BEF;&#x5DEE;&#x3002;&#x5982;&#x679C;&#x9009;&#x62E9;&#x7684;&#x5047;&#x8BBE;&#x8FC7;&#x5206;&#x8FFD;&#x6C42;&#x80FD;&#x591F;&#x5B8C;&#x7F8E;&#x89E3;&#x91CA;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#xFF08;&#x5BF9;&#x4E8E;&#x56DE;&#x5F52;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x201C;&#x7A7F;&#x8FC7;&#x201D;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x70B9;&#xFF0C;&#x6216;&#x8005;&#x7C7B;&#x4F3C;&#x4E8E;&#x5747;&#x65B9;&#x8BEF;&#x5DEE;&#x8FC7;&#x5C0F;&#xFF09;&#xFF0C;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x73B0;&#x8C61;&#x3002;&#x9020;&#x6210;&#x8FD9;&#x79CD;&#x73B0;&#x8C61;&#x7684;&#x6839;&#x672C;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#xFF0C;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x628A;&#x8BEF;&#x5DEE;&#x4E5F;&#x5B8C;&#x7F8E;&#x7684;&#x5B66;&#x4E60;&#x4E86;&#x3002;</p>
<h2 id="&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;"><a href="#&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;" class="headerlink" title="&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;"></a>&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;</h2><p>&#x5F71;&#x54CD;&#x4EA7;&#x751F;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x7684;&#x56E0;&#x7D20;&#x6709;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5B9E;&#x4E2D;&#x53EF;&#x80FD;&#x4EC5;&#x63D0;&#x53D6;&#x51E0;&#x4E2A;&#x548C;&#x7ED3;&#x679C;&#x76F8;&#x5173;&#x5EA6;&#x5F88;&#x9AD8;&#x7684;&#x56E0;&#x7D20;&#x6765;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x89C2;&#x5BDF;&#x6570;&#x636E;&#x4F1A;&#x503E;&#x5411;&#x4E8E;&#x56F4;&#x7ED5;&#x4F60;&#x7684;&#x6709;&#x9650;&#x6A21;&#x578B;&#x7684;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x5448;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;&#x4E8E;&#x662F;&#x4F60;&#x5B9E;&#x9645;&#x89C2;&#x5BDF;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x53D6;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;&#x53D6;&#x6837;&#x5F88;&#x53EF;&#x80FD;&#x53D7;&#x5230;&#x5176;&#x4F59;&#x56E0;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#x504F;&#x79BB;&#x4F60;&#x7684;&#x6A21;&#x578B;&#x6240;&#x9884;&#x6D4B;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4FBF;&#x4E0D;&#x80FD;&#x8D2A;&#x5FC3;&#x4E0D;&#x8DB3;&#x5730;&#x8BD5;&#x56FE;&#x901A;&#x8FC7;&#x6539;&#x53D8;&#x6A21;&#x578B;&#x6765;&#x201C;&#x5B8C;&#x7F8E;&#x201D;&#x5339;&#x914D;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x4E9B;&#x4F7F;&#x7ED3;&#x679C;&#x504F;&#x79BB;&#x4F60;&#x7684;&#x9884;&#x6D4B;&#x7684;&#x8D21;&#x732E;&#x56E0;&#x7D20;&#x4E0D;&#x662F;&#x4F60;&#x8FD9;&#x4E2A;&#x6709;&#x9650;&#x6A21;&#x578B;&#x91CC;&#x9762;&#x542B;&#x6709;&#x7684;&#x56E0;&#x7D20;&#x6240;&#x80FD;&#x6982;&#x62EC;&#x7684;&#xFF0C;&#x786C;&#x8981;&#x6253;&#x80BF;&#x8138;&#x5145;&#x80D6;&#x5B50;&#x53EA;&#x80FD;&#x5BFC;&#x81F4;&#x4E0D;&#x5B9E;&#x9645;&#x7684;&#x6A21;&#x578B;&#x3002;</p>
<h2 id="&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;"><a href="#&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;" class="headerlink" title="&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;"></a>&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;</h2><p>$$<br>p\left( h|D\right )   = p\left( h\right ) p\left( D|h\right )<br>$$<br>&#x9AD8;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5982;&#x679C;&#x5B58;&#x5728;&#x591A;&#x4E2A;&#x5047;&#x8BBE;&#x548C;&#x89C2;&#x5BDF;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x5E94;&#x5F53;&#x9009;&#x62E9;&#x6700;&#x7B80;&#x5355;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x5047;&#x8BBE;&#x610F;&#x5473;&#x7740;$\left( h\right)$&#x8F83;&#x5927;&#xFF0C;&#x800C;&#x4E0E;&#x89C2;&#x6D4B;&#x4E00;&#x81F4;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x4F3C;&#x7136;&#x6570;&#x503C;&#x8F83;&#x5927;&#xFF0C;&#x5373;$p\left( D|h\right )$&#x8F83;&#x5927;&#x3002;</p>
<p>&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x9752;&#x7750;&#x4E8E;&#x5148;&#x9A8C;&#x6982;&#x7387;&#xFF0C;&#x8BA4;&#x4E3A;&#x5148;&#x9A8C;&#x8F83;&#x5927;&#x7684;&#x6A21;&#x578B;&#x6709;&#x8F83;&#x5927;&#x7684;&#x4F18;&#x52BF;&#xFF1B;&#x6700;&#x5927;&#x4F3C;&#x7136;&#x6CD5;&#x5219;&#x8BA4;&#x4E3A;&#x4F3C;&#x7136;&#x5927;&#x7684;&#x6A21;&#x578B;&#x5177;&#x6709;&#x8F83;&#x5927;&#x7684;&#x4F18;&#x52BF;&#xFF1B;&#x800C;&#x8D1D;&#x53F6;&#x65AF;&#x6CD5;&#x5219;&#x5219;&#x8BA4;&#x4E3A;&#x4E8C;&#x8005;&#x4E58;&#x79EF;&#x51B3;&#x5B9A;&#x6A21;&#x578B;&#x7684;&#x9009;&#x62E9;&#x95EE;&#x9898;&#x3002;</p>
<h2 id="&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;"><a href="#&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;" class="headerlink" title="&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;"></a>&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;</h2><p>&#x4E0A;&#x9762;&#x7684;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x63CF;&#x8FF0;&#x7684;&#x662F;&#x4F20;&#x7EDF;&#x7684;&#x5243;&#x5200;&#x6CD5;&#x5219;&#xFF0C;&#x4E3B;&#x8981;&#x6307;&#x5148;&#x9A8C;&#x6982;&#x7387;$\left( h\right)$,&#x800C;&#x8D1D;&#x53F6;&#x65AF;&#x6CD5;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5176;&#x5B9E;&#x548C;&#x4F3C;&#x7136;$p\left( D|h\right )$&#x4E0A;&#x9762;&#xFF0C;&#x5373;&#x8BE5;&#x6CD5;&#x5219;&#x4E3B;&#x8981;&#x8861;&#x91CF;&#x7684;&#x56E0;&#x7D20;&#x662F;&#x4F3C;&#x7136;&#x672C;&#x8EAB;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x5927;&#x5C0F;&#x3002; </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SPARK的宽依赖和窄依赖]]></title>
      <url>http://zhangshengshan.github.io/2016/04/25/SPARK%E7%9A%84%E5%AE%BD%E4%BE%9D%E8%B5%96%E5%92%8C%E7%AA%84%E4%BE%9D%E8%B5%96/</url>
      <content type="html"><![CDATA[<p>spark &#x7684;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x7684;transformation&#x64CD;&#x4F5C;,&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x662F;&#x5426;&#x4F9D;&#x8D56;&#x7236;RDDs&#x7684;&#x6240;&#x6709;partision&#x5206;&#x4E3A;&#x2018;&#x7A84;&#x4F9D;&#x8D56;&#x2019;&#x548C;&#x2018;&#x5BBD;&#x4F9D;&#x8D56;&#x2019;,&#x7B80;&#x5355;&#x7684;&#x8BF4;,&#x6709;shuffle&#x64CD;&#x4F5C;&#x7684;&#x5C31;&#x662F;&#x5BBD;&#x4F9D;&#x8D56;,&#x800C;&#x6CA1;&#x6709;shuffle&#x64CD;&#x4F5C;&#x7684;&#x5C31;&#x662F;&#x7A84;&#x4F9D;&#x8D56;&#x3002;<br>&#x5BF9;&#x4E8E;&#x7A84;&#x4F9D;&#x8D56;,spark&#x4F1A;&#x5C3D;&#x91CF;&#x5C06;&#x4ED6;&#x4EEC;&#x5212;&#x5206;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;stage,&#x800C;&#x5BBD;&#x4F9D;&#x8D56;&#x5219;&#x4F1A;&#x79F0;&#x4E3A;&#x53E6;&#x5916;&#x7684;stage&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[1-100素数判断pyhon程序]]></title>
      <url>http://zhangshengshan.github.io/2016/04/21/1-100%E7%B4%A0%E6%95%B0%E5%88%A4%E6%96%ADpyhon%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>&#x6C42;&#x53D6;1-100&#x7684;&#x6240;&#x6709;&#x7D20;&#x6570;&#xFF0C;&#x91C7;&#x7528;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">issu</span><span class="params">(x)</span>:</span></div><div class="line">    result=map(<span class="keyword">lambda</span> y:x%y,range(<span class="number">2</span>,x))</div><div class="line">    <span class="keyword">if</span>  len(result)!=<span class="number">0</span> <span class="keyword">and</span> <span class="number">0</span> <span class="keyword">not</span> <span class="keyword">in</span> result:</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">print</span> filter(issu,range(<span class="number">1</span>,<span class="number">101</span>))</div></pre></td></tr></table></figure></p>
<p>&#x7B54;&#x6848;&#x4E3A;<br><strong>[3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Questions and Answers]]></title>
      <url>http://zhangshengshan.github.io/2014/03/16/qna/</url>
      <content type="html"><![CDATA[<span class="label label-danger">Q</span> What does <code>Freemind</code> stands for?<br><br><span class="label label-success">A</span> <code>Freemind</code> is named after <a href="http://freemind.pluskid.org/" target="_blank" rel="external">Pluskid&#x2019;s blog</a>. This theme is greatly inspired by his blog layouts and stylesheets.<br><br><span class="label label-danger">Q</span> There&#x2019;re already so many themes for Hexo. Why create this one?<br><br><span class="label label-success">A</span> In fact I created this theme before I turned to use Hexo. I switched to Hexo about half an year ago, including my theme, since I have already got used to it and don&#x2019;t wanna change it for now.<br><br><a id="more"></a>
<p><span class="label label-danger">Q</span> Why use raw CSS stylesheets instead of more fashionable stylus?</p>
<p><span class="label label-success">A</span> Yes, stylus is cool. But I don&#x2019;t want to wrote my stylesheets again in stylus. So let&#x2019;s just keep them.</p>
<p><span class="label label-danger">Q</span> I love your theme. How to contribute?</p>
<p><span class="label label-success">A</span> Great that you love it. To devote your contribution, you can:</p>
<ul>
<li>Star its <a href="https://github.com/wzpan/hexo-theme-freemind" target="_blank" rel="external">Github project</a>;</li>
<li>Fork this project, make your change, and then send me your pull request;</li>
<li>Since it is public under MIT license, you can make your own theme based on mine. But it will be nicer if you claimed that your work is based on mine in your theme project page.</li>
</ul>
<p><span class="label label-danger">Q</span> <a href="http://hahack.com" target="_blank" rel="external">Your blog</a> looks a little different to this theme. Why such difference?</p>
<p><span class="label label-success">A</span> Yes. I modified the theme a little bit as I open sourced this theme. I actually did some simplification <em>e.g.</em> I removed the whole <a href="http://hahack.com/wiki" target="_blank" rel="external">Wiki</a> page because I don&#x2019;t think that everybody need this.</p>
<p><span class="label label-danger">Q</span> How to generate ToC(Table of Contents) in a certain page?</p>
<p><span class="label label-success">A</span> Add <code>toc: true</code> in the <a href="https://github.com/wzpan/hexo-theme-freemind#front-matter" target="_blank" rel="external">front-matter</a>.</p>
<p><span class="label label-danger">Q</span> Where can I find your markdown source files of these docs?</p>
<p><span class="label label-success">A</span> In the <a href="https://github.com/wzpan/hexo-theme-freemind/tree/source" target="_blank" rel="external">source</a> branch.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Questions and Answers（中文）]]></title>
      <url>http://zhangshengshan.github.io/2014/03/16/qna-cn/</url>
      <content type="html"><![CDATA[<span class="label label-danger">Q</span> <code>Freemind</code> &#x8FD9;&#x540D;&#x5B57;&#x6709;&#x4F55;&#x542B;&#x4E49;&#xFF1F;<br><br><span class="label label-success">A</span> <code>Freemind</code> &#x547D;&#x540D;&#x51FA;&#x81EA; <a href="http://freemind.pluskid.org/" target="_blank" rel="external">Pluskid</a> &#x7684;&#x535A;&#x5BA2;&#x3002;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x501F;&#x9274;&#x4E86;&#x4ED6;&#x7684;&#x535A;&#x5BA2;&#x7684;&#x5E03;&#x5C40;&#x548C;&#x6837;&#x5F0F;&#x3002;<br><br><span class="label label-danger">Q</span> &#x73B0;&#x5728;&#x90FD;&#x6709;&#x8FD9;&#x4E48;&#x591A; Hexo &#x7684;&#x4E3B;&#x9898;&#x4E86;&#xFF0C;&#x4E3A;&#x5565;&#x53C8;&#x8981;&#x5199;&#x4E00;&#x4E2A;&#xFF1F;<br><br><span class="label label-success">A</span> &#x5B9E;&#x9645;&#x4E0A;&#x6211;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x5728;&#x6211;&#x4F7F;&#x7528; Hexo &#x524D;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#x4E86;&#x3002;&#x6211;&#x5728;&#x534A;&#x5E74;&#x524D;&#x5C06;&#x535A;&#x5BA2;&#x8FC1;&#x79FB;&#x5230; Hexo &#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x5DF2;&#x7ECF;&#x4E60;&#x60EF;&#x4E86;&#x539F;&#x6765;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x987A;&#x4FBF;&#x628A;&#x4E3B;&#x9898;&#x4E5F;&#x79FB;&#x690D;&#x4E86;&#x8FC7;&#x6765;&#x3002;<br><br><a id="more"></a>
<p><span class="label label-danger">Q</span> &#x4E3A;&#x5565;&#x8FD8;&#x7528; CSS &#x5199;&#x6837;&#x5F0F;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x66F4;&#x9AD8;&#x7AEF;&#x5927;&#x6C14;&#x7684; stylus &#xFF1F;</p>
<p><span class="label label-success">A</span> &#x55EF;&#xFF0C;stylus &#x7684;&#x786E;&#x5F88;&#x9177;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x4E0D;&#x60F3;&#x518D;&#x628A;&#x4EE5;&#x524D;&#x7684;&#x6837;&#x5F0F;&#x91CD;&#x5199;&#x6210; stylus &#x4E86;&#x3002;&#x6240;&#x4EE5;&#x6682;&#x65F6;&#x5148;&#x4FDD;&#x7559;&#x539F;&#x6765;&#x7684; CSS&#x3002;</p>
<p><span class="label label-danger">Q</span> &#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E0D;&#x9519;&#x7528;&#xFF0C;&#x5982;&#x4F55;&#x8D21;&#x732E;&#xFF1F;</p>
<p><span class="label label-success">A</span> &#x6709;&#x4EBA;&#x559C;&#x6B22;&#x6211;&#x7684;&#x4E1C;&#x897F;&#x6211;&#x5C31;&#x5F88;&#x9AD8;&#x5174;&#x54AF;&#x3002;&#x5982;&#x679C;&#x60F3;&#x505A;&#x51FA;&#x8D21;&#x732E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#xFF1A;</p>
<ul>
<li>&#x4E3A;&#x672C;&#x4E3B;&#x9898;&#x7684; <a href="https://github.com/wzpan/hexo-theme-freemind" target="_blank" rel="external">Github &#x9879;&#x76EE;</a> &#x52A0;&#x9897;&#x661F;&#xFF1B;</li>
<li>Fork &#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x5C3D;&#x60C5;DIY&#xFF0C;&#x7136;&#x540E;&#x7ED9;&#x6211;&#x53D1; pull request;</li>
<li>&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x9075;&#x5FAA; MIT &#x5F00;&#x6E90;&#x534F;&#x8BAE;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x4E3B;&#x9898;&#x57FA;&#x7840;&#x4E0A;&#x521B;&#x5EFA;&#x4F60;&#x7684;&#x4E3B;&#x9898;&#x3002;&#x4E0D;&#x8FC7;&#x5982;&#x679C;&#x4F60;&#x80FD;&#x5728;&#x4F60;&#x7684;&#x4E3B;&#x9898;&#x9875;&#x9762;&#x4E2D;&#x58F0;&#x660E;&#x4E3B;&#x9898;&#x57FA;&#x4E8E; Freemind &#x5C31;&#x518D;&#x597D;&#x4E0D;&#x8FC7;&#x4E86;&#x3002;</li>
</ul>
<p><span class="label label-danger">Q</span> <a href="http://hahack.com" target="_blank" rel="external">&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;</a> &#x770B;&#x8D77;&#x6765;&#x8DDF;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x6709;&#x70B9;&#x4E0D;&#x4E00;&#x6837;&#x5440;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;</p>
<p><span class="label label-success">A</span> &#x662F;&#x7684;&#x3002;&#x6211;&#x5728;&#x5F00;&#x6E90;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x524D;&#x505A;&#x4E86;&#x4E9B;&#x7B80;&#x5316;&#x3002;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x9700;&#x8981;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x91CC;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x6027;&#xFF0C;&#x6BD4;&#x5982; <a href="http://hahack.com/wiki" target="_blank" rel="external">Wiki</a> &#x9875;&#x9762;&#x3002;</p>
<p><span class="label label-danger">Q</span> &#x5982;&#x4F55;&#x6307;&#x5B9A;&#x67D0;&#x4E9B;&#x9875;&#x9762;&#x751F;&#x6210; ToC(Table of Contents) &#xFF1F;</p>
<p><span class="label label-success">A</span> &#x5728;<a href="https://github.com/wzpan/hexo-theme-freemind#front-matter" target="_blank" rel="external">&#x6587;&#x7AE0;&#x5934;&#x90E8;</a>&#x6DFB;&#x52A0; <code>toc: true</code> &#x3002;</p>
<p><span class="label label-danger">Q</span> &#x4ECE;&#x54EA;&#x91CC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x4F60;&#x7684;&#x8FD9;&#x51E0;&#x7BC7;&#x6587;&#x6863;&#x7684; Markdown &#x6E90;&#x7801;&#xFF1F;</p>
<p><span class="label label-success">A</span> &#x5728;&#x9879;&#x76EE;&#x7684; <a href="https://github.com/wzpan/hexo-theme-freemind/tree/source" target="_blank" rel="external">source</a> &#x5206;&#x652F;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tag Plugins]]></title>
      <url>http://zhangshengshan.github.io/2014/03/16/tag-plugins/</url>
      <content type="html"><![CDATA[<p>The freemind theme offers several new tag plugins, so as to fully take advantages of Bootstrap.</p>
<p>To use these tag plugins, you need to install <a href="https://github.com/wzpan/hexo-tag-bootstrap" target="_blank" rel="external">hexo-tag-bootstrap</a> first. In your blog root folder, execute the following command:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>
<p>Then you can use these tag plugins in your blog, as easily as you normally do using hexo tag plugins. </p>
<a id="more"></a>
<h2 id="Text-Color"><a href="#Text-Color" class="headerlink" title="Text Color"></a>Text Color</h2><p>Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.</p>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">{% textcolor [style] %}</div><div class="line">  text string</div><div class="line">{% endtextcolor %}</div></pre></td></tr></table></figure>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">{% textcolor muted %}</div><div class="line">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor primary %}</div><div class="line">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor success %}</div><div class="line">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor info %}</div><div class="line">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor warning %}</div><div class="line">Etiam porta sem malesuada magna mollis euismod.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor danger %}</div><div class="line">Donec ullamcorper nulla non metus auctor fringilla.</div><div class="line">{% endtextcolor %}</div></pre></td></tr></table></figure>
<h3 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h3><p class="text-muted">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>

<p class="text-primary">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
<p class="text-success">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>

<p class="text-info">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
<p class="text-warning">Etiam porta sem malesuada magna mollis euismod.</p>

<p class="text-danger">Donec ullamcorper nulla non metus auctor fringilla.</p>
<h2 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h2><p>Inserts a button with target links, text and specified color.</p>
<h3 id="Syntax-1"><a href="#Syntax-1" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% btn url text [style] %}</div></pre></td></tr></table></figure>
<h3 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{% btn http://hahack.com hahack %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack primary %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack success %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack warning %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack danger %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack info %}</div></pre></td></tr></table></figure>
<h3 id="Results-1"><a href="#Results-1" class="headerlink" title="Results"></a>Results</h3><a class="btn btn-default" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-primary" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-success" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-warning" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-danger" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-info" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<h2 id="Labels"><a href="#Labels" class="headerlink" title="Labels"></a>Labels</h2><p>Inserts a label with text and specified color.</p>
<h3 id="Syntax-2"><a href="#Syntax-2" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% label text [style] %}</div></pre></td></tr></table></figure>
<h3 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{% label default %}</div><div class="line"></div><div class="line">{% label warinng warning %}</div><div class="line"></div><div class="line">{% label success success %}</div><div class="line"></div><div class="line">{% label danger danger %}</div><div class="line"></div><div class="line">{% label primary primary %}</div><div class="line"></div><div class="line">{% label info info %}</div></pre></td></tr></table></figure>
<h3 id="Results-2"><a href="#Results-2" class="headerlink" title="Results"></a>Results</h3><span class="label label-default">default</span>
<span class="label label-warning">warinng</span>
<span class="label label-success">success</span>
<span class="label label-danger">danger</span>
<span class="label label-primary">primary</span>
<span class="label label-info">info</span>
<h2 id="Badges"><a href="#Badges" class="headerlink" title="Badges"></a>Badges</h2><p>Inserts a badge with text.</p>
<h3 id="Syntax-3"><a href="#Syntax-3" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% badge text %}</div></pre></td></tr></table></figure>
<h3 id="Examples-3"><a href="#Examples-3" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% badge 42 %}</div></pre></td></tr></table></figure>
<h3 id="Results-3"><a href="#Results-3" class="headerlink" title="Results"></a>Results</h3><span class="badge">42</span>
<h2 id="Alerts"><a href="#Alerts" class="headerlink" title="Alerts"></a>Alerts</h2><p>Inserts alert messages with text and specified color.</p>
<h3 id="Syntax-4"><a href="#Syntax-4" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">{% alert [style] %}</div><div class="line">   Alert string</div><div class="line">{% endalert %}</div></pre></td></tr></table></figure>
<h3 id="Examples-4"><a href="#Examples-4" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">{% alert warning %}</div><div class="line">Best check yo self, you&apos;re not looking too good.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert danger %}</div><div class="line">Change a few things up and try submitting again.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert success %}</div><div class="line">You successfully read this important alert message.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert info %}</div><div class="line">This alert needs your attention, but it&apos;s not super important.</div><div class="line">{% endalert %}</div></pre></td></tr></table></figure>
<h3 id="Results-4"><a href="#Results-4" class="headerlink" title="Results"></a>Results</h3><div class="alert alert-warning"><i class="fa fa-bell"></i>  Best check yo self, you&apos;re not looking too good.</div>
<div class="alert alert-danger"><i class="fa fa-bug"></i>  Change a few things up and try submitting again.</div>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  You successfully read this important alert message.</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  This alert needs your attention, but it&apos;s not super important.</div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tag Plugins（中文）]]></title>
      <url>http://zhangshengshan.github.io/2014/03/16/tag-plugins-cn/</url>
      <content type="html"><![CDATA[<p>Freemind &#x4E3B;&#x9898;&#x63D0;&#x4F9B;&#x4E86;&#x4E30;&#x5BCC;&#x7684; tag plugins&#xFF0C;&#x4EE5;&#x5145;&#x5206;&#x5229;&#x7528; Bootstrap &#x7684;&#x5A01;&#x529B;&#x3002;</p>
<p>&#x5728;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B; tag plugins &#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5148;&#x5B89;&#x88C5; <a href="https://github.com/wzpan/hexo-tag-bootstrap" target="_blank" rel="external">hexo-tag-bootstrap</a> &#x3002;&#x5728;&#x4F60;&#x7684; Hexo &#x535A;&#x5BA2;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x4E0B;&#x5217;&#x547D;&#x4EE4;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>
<p>&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x50CF;&#x4F7F;&#x7528;&#x5176;&#x4ED6; hexo tag plugins &#x4E00;&#x6837;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B; Bootstrap tag plugins &#x4E86;&#x3002;</p>
<a id="more"></a>
<h2 id="&#x6587;&#x672C;&#x989C;&#x8272;"><a href="#&#x6587;&#x672C;&#x989C;&#x8272;" class="headerlink" title="&#x6587;&#x672C;&#x989C;&#x8272;"></a>&#x6587;&#x672C;&#x989C;&#x8272;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x6BB5;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x7528;&#x7279;&#x6B8A;&#x7684;&#x989C;&#x8272;&#x9AD8;&#x4EAE;&#x5B83;&#x3002;</p>
<h3 id="&#x8BED;&#x6CD5;"><a href="#&#x8BED;&#x6CD5;" class="headerlink" title="&#x8BED;&#x6CD5;"></a>&#x8BED;&#x6CD5;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">{% textcolor [style] %}</div><div class="line">  text string</div><div class="line">{% endtextcolor %}</div></pre></td></tr></table></figure>
<h3 id="&#x793A;&#x4F8B;"><a href="#&#x793A;&#x4F8B;" class="headerlink" title="&#x793A;&#x4F8B;"></a>&#x793A;&#x4F8B;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">{% textcolor muted %}</div><div class="line">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor primary %}</div><div class="line">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor success %}</div><div class="line">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor info %}</div><div class="line">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor warning %}</div><div class="line">Etiam porta sem malesuada magna mollis euismod.</div><div class="line">{% endtextcolor %}</div><div class="line"></div><div class="line">{% textcolor danger %}</div><div class="line">Donec ullamcorper nulla non metus auctor fringilla.</div><div class="line">{% endtextcolor %}</div></pre></td></tr></table></figure>
<h3 id="&#x7ED3;&#x679C;"><a href="#&#x7ED3;&#x679C;" class="headerlink" title="&#x7ED3;&#x679C;"></a>&#x7ED3;&#x679C;</h3><p class="text-muted">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>

<p class="text-primary">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
<p class="text-success">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>

<p class="text-info">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
<p class="text-warning">Etiam porta sem malesuada magna mollis euismod.</p>

<p class="text-danger">Donec ullamcorper nulla non metus auctor fringilla.</p>
<h2 id="&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;"><a href="#&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;" class="headerlink" title="&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;"></a>&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x6309;&#x94AE;&#x53EF;&#x4EE5;&#x5E26;&#x6709;&#x94FE;&#x63A5;&#x3001;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6837;&#x5F0F;&#x3002;</p>
<h3 id="&#x8BED;&#x6CD5;-1"><a href="#&#x8BED;&#x6CD5;-1" class="headerlink" title="&#x8BED;&#x6CD5;"></a>&#x8BED;&#x6CD5;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% btn url text [style] %}</div></pre></td></tr></table></figure>
<h3 id="&#x793A;&#x4F8B;-1"><a href="#&#x793A;&#x4F8B;-1" class="headerlink" title="&#x793A;&#x4F8B;"></a>&#x793A;&#x4F8B;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{% btn http://hahack.com hahack %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack primary %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack success %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack warning %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack danger %}</div><div class="line"></div><div class="line">{% btn http://hahack.com hahack info %}</div></pre></td></tr></table></figure>
<h3 id="&#x7ED3;&#x679C;-1"><a href="#&#x7ED3;&#x679C;-1" class="headerlink" title="&#x7ED3;&#x679C;"></a>&#x7ED3;&#x679C;</h3><a class="btn btn-default" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-primary" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-success" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-warning" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-danger" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<a class="btn btn-info" href="http://hahack.com" target="_blank" rel="external">hahack</a>
<h2 id="&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;"><a href="#&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;" class="headerlink" title="&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;"></a>&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x548C;&#x6837;&#x5F0F;&#x3002;</p>
<h3 id="&#x8BED;&#x6CD5;-2"><a href="#&#x8BED;&#x6CD5;-2" class="headerlink" title="&#x8BED;&#x6CD5;"></a>&#x8BED;&#x6CD5;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% label text [style] %}</div></pre></td></tr></table></figure>
<h3 id="&#x793A;&#x4F8B;-2"><a href="#&#x793A;&#x4F8B;-2" class="headerlink" title="&#x793A;&#x4F8B;"></a>&#x793A;&#x4F8B;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">{% label default %}</div><div class="line"></div><div class="line">{% label warinng warning %}</div><div class="line"></div><div class="line">{% label success success %}</div><div class="line"></div><div class="line">{% label danger danger %}</div><div class="line"></div><div class="line">{% label primary primary %}</div><div class="line"></div><div class="line">{% label info info %}</div></pre></td></tr></table></figure>
<h3 id="&#x7ED3;&#x679C;-2"><a href="#&#x7ED3;&#x679C;-2" class="headerlink" title="&#x7ED3;&#x679C;"></a>&#x7ED3;&#x679C;</h3><span class="label label-default">default</span>
<span class="label label-warning">warinng</span>
<span class="label label-success">success</span>
<span class="label label-danger">danger</span>
<span class="label label-primary">primary</span>
<span class="label label-info">info</span>
<h2 id="&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;"><a href="#&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;" class="headerlink" title="&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;"></a>&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5FBD;&#x7AE0;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x3002;</p>
<h3 id="&#x8BED;&#x6CD5;-3"><a href="#&#x8BED;&#x6CD5;-3" class="headerlink" title="&#x8BED;&#x6CD5;"></a>&#x8BED;&#x6CD5;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% badge text %}</div></pre></td></tr></table></figure>
<h3 id="&#x793A;&#x4F8B;-3"><a href="#&#x793A;&#x4F8B;-3" class="headerlink" title="&#x793A;&#x4F8B;"></a>&#x793A;&#x4F8B;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">{% badge 42 %}</div></pre></td></tr></table></figure>
<h3 id="&#x7ED3;&#x679C;-3"><a href="#&#x7ED3;&#x679C;-3" class="headerlink" title="&#x7ED3;&#x679C;"></a>&#x7ED3;&#x679C;</h3><span class="badge">42</span>
<h2 id="&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;"><a href="#&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;" class="headerlink" title="&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;"></a>&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x6BB5;&#x8B66;&#x62A5;&#x6587;&#x672C;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6837;&#x5F0F;&#x3002;</p>
<h3 id="&#x8BED;&#x6CD5;-4"><a href="#&#x8BED;&#x6CD5;-4" class="headerlink" title="&#x8BED;&#x6CD5;"></a>&#x8BED;&#x6CD5;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">{% alert [style] %}</div><div class="line">   Alert string</div><div class="line">{% endalert %}</div></pre></td></tr></table></figure>
<h3 id="&#x793A;&#x4F8B;-4"><a href="#&#x793A;&#x4F8B;-4" class="headerlink" title="&#x793A;&#x4F8B;"></a>&#x793A;&#x4F8B;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">{% alert warning %}</div><div class="line">Best check yo self, you&apos;re not looking too good.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert danger %}</div><div class="line">Change a few things up and try submitting again.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert success %}</div><div class="line">You successfully read this important alert message.</div><div class="line">{% endalert %}</div><div class="line"></div><div class="line">{% alert info %}</div><div class="line">This alert needs your attention, but it&apos;s not super important.</div><div class="line">{% endalert %}</div></pre></td></tr></table></figure>
<h3 id="&#x7ED3;&#x679C;-4"><a href="#&#x7ED3;&#x679C;-4" class="headerlink" title="&#x7ED3;&#x679C;"></a>&#x7ED3;&#x679C;</h3><div class="alert alert-warning"><i class="fa fa-bell"></i>  Best check yo self, you&apos;re not looking too good.</div>
<div class="alert alert-danger"><i class="fa fa-bug"></i>  Change a few things up and try submitting again.</div>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  You successfully read this important alert message.</div>
<div class="alert alert-info"><i class="fa fa-info"></i>  This alert needs your attention, but it&apos;s not super important.</div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Code Highlight]]></title>
      <url>http://zhangshengshan.github.io/2014/03/15/code-highlight/</url>
      <content type="html"><![CDATA[<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// C</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">{</div><div class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// C++</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">{</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Hello World&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">helloWorld</span></span></div><div class="line">{</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></div><div class="line">    {</div><div class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="Assembler"><a href="#Assembler" class="headerlink" title="Assembler"></a>Assembler</h2><figure class="highlight arm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">#include</span> &lt;stdio.h&gt;</div><div class="line"></div><div class="line"><span class="symbol">char</span> format[] = <span class="string">&quot;%s %s\n&quot;</span><span class="comment">;</span></div><div class="line"><span class="symbol">char</span> hello[] = <span class="string">&quot;Hello&quot;</span><span class="comment">;</span></div><div class="line"><span class="symbol">char</span> world[] = <span class="string">&quot;world&quot;</span><span class="comment">;</span></div><div class="line"><span class="symbol">void</span> main( void )</div><div class="line">{</div><div class="line">   __asm</div><div class="line">   {</div><div class="line">      <span class="keyword">mov </span> eax, offset world</div><div class="line">      <span class="keyword">push </span>eax</div><div class="line">      <span class="keyword">mov </span> eax, offset hello</div><div class="line">      <span class="keyword">push </span>eax</div><div class="line">      <span class="keyword">mov </span> eax, offset format</div><div class="line">      <span class="keyword">push </span>eax</div><div class="line">      call printf</div><div class="line">      <span class="keyword">pop </span> ebx</div><div class="line">      <span class="keyword">pop </span> ebx</div><div class="line">      <span class="keyword">pop </span> ebx</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="Net"><a href="#Net" class="headerlink" title=".Net"></a>.Net</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// Hello World .NET</div><div class="line"></div><div class="line">#using &lt;mscorlib.dll&gt;</div><div class="line">using namespace System;</div><div class="line"></div><div class="line">int _tmain()</div><div class="line">{</div><div class="line">    Console::WriteLine(S&quot;Hello World&quot;);</div><div class="line">    return 0;</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h2><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">-module</span><span class="params">(hello)</span>.</div><div class="line"><span class="keyword">-export</span><span class="params">([world/<span class="number">0</span>])</span>.</div><div class="line"></div><div class="line"><span class="function"><span class="title">world</span><span class="params">()</span> -&gt;</span> io:format(<span class="string">&quot;Hello World&quot;</span>).</div></pre></td></tr></table></figure>
<h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/local/bin/ruby -w</span></div><div class="line">puts <span class="string">&quot;Hello World&quot;</span></div></pre></td></tr></table></figure>
<h2 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC"></a>BASIC</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">// Texas Instruments TI-81 BASIC</div><div class="line">Prgm1:HELLO...</div><div class="line">:Disp &quot;HELLO WORLD&quot;</div></pre></td></tr></table></figure>
<h2 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin perl -w  </span></div><div class="line"><span class="keyword">print</span> (<span class="string">&quot;Hello World&quot;</span>);</div></pre></td></tr></table></figure>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/python</span></div><div class="line">print(<span class="string">&quot;Hello World&quot;</span>)</div></pre></td></tr></table></figure>
<h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span></div></pre></td></tr></table></figure>
<h2 id="Brainfuck"><a href="#Brainfuck" class="headerlink" title="Brainfuck"></a>Brainfuck</h2><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&lt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">-</span><span class="title">]</span>&lt;<span class="string">.</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&lt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">-</span><span class="title">]</span>&lt;<span class="literal">+</span><span class="string">.</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span><span class="string">.</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span><span class="title">[</span><span class="literal">-</span><span class="title">]</span></div><div class="line">&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&lt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">-</span><span class="title">]</span> &lt;<span class="string">.</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&lt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">-</span><span class="title">]</span>&lt;<span class="literal">-</span><span class="string">.</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span></div><div class="line"><span class="string">.</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span><span class="title">[</span><span class="literal">-</span><span class="title">]</span>&gt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&lt;<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;<span class="literal">-</span> <span class="title">]</span>&lt;<span class="literal">+</span><span class="string">.</span><span class="title">[</span><span class="literal">-</span><span class="title">]</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span></div></pre></td></tr></table></figure>
<h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?</span>=<span class="string">&quot;Hello world\n&quot;</span> <span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="Pascal"><a href="#Pascal" class="headerlink" title="Pascal"></a>Pascal</h2><figure class="highlight pascal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Program</span> HelloWorld;</div><div class="line"></div><div class="line"><span class="keyword">Begin</span></div><div class="line">  Writeln (<span class="string">&apos;Hello World!&apos;</span>);</div><div class="line"><span class="keyword">End</span>.</div></pre></td></tr></table></figure>
<h2 id="Delphi"><a href="#Delphi" class="headerlink" title="Delphi"></a>Delphi</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Delphi, thanks to C0derr</span></div><div class="line"><span class="keyword">program</span> Project1;</div><div class="line"><span class="keyword">uses</span></div><div class="line">  qdialogs;</div><div class="line"><span class="keyword">const</span></div><div class="line">  s=<span class="string">&apos;Hello, World!&apos;</span>;</div><div class="line"><span class="keyword">begin</span></div><div class="line">  showmessage(s);</div><div class="line"><span class="keyword">end</span>.</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Lorem Ipsum]]></title>
      <url>http://zhangshengshan.github.io/2014/03/15/lorem-ipsum/</url>
      <content type="html"><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<p><img src="/hexo-theme-freemind/images/lorem-ipsum/lorem-ipsum.jpg" alt="Lorem Ipsum"></p>
<a id="more"></a>
<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[繁體中文測試]]></title>
      <url>http://zhangshengshan.github.io/2013/12/25/traditional-chinese-test/</url>
      <content type="html"><![CDATA[<p>&#x89C0;&#x81EA;&#x5728;&#x83E9;&#x85A9;&#xFF0C;&#x884C;&#x6DF1;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6642;&#xFF0C;&#x7167;&#x898B;&#x4E94;&#x860A;&#x7686;&#x7A7A;&#xFF0C;&#x5EA6;&#x4E00;&#x5207;&#x82E6;&#x5384;&#x3002;</p>
<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x8272;&#x4E0D;&#x7570;&#x7A7A;&#xFF0C;&#x7A7A;&#x4E0D;&#x7570;&#x8272;&#xFF1B;&#x8272;&#x5373;&#x662F;&#x7A7A;&#xFF0C;&#x7A7A;&#x5373;&#x662F;&#x8272;&#x3002;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8B58;&#xFF0C;&#x4EA6;&#x5FA9;&#x5982;&#x662F;&#x3002;</p>
<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x662F;&#x8AF8;&#x6CD5;&#x7A7A;&#x76F8;&#xFF0C;&#x4E0D;&#x751F;&#x4E0D;&#x6EC5;&#xFF0C;&#x4E0D;&#x57A2;&#x4E0D;&#x6DE8;&#xFF0C;&#x4E0D;&#x589E;&#x4E0D;&#x6E1B;&#xFF0C;&#x662F;&#x6545;&#x7A7A;&#x4E2D;&#x7121;&#x8272;&#xFF0C;&#x7121;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8B58;&#xFF1B;&#x7121;&#x773C;&#x3001;&#x8033;&#x3001;&#x9F3B;&#x3001;&#x820C;&#x3001;&#x8EAB;&#x3001;&#x610F;&#xFF1B;&#x7121;&#x8272;&#x3001;&#x8072;&#x3001;&#x9999;&#x3001;&#x5473;&#x3001;&#x89F8;&#x3001;&#x6CD5;&#xFF1B;&#x7121;&#x773C;&#x754C;&#xFF0C;&#x4E43;&#x81F3;&#x7121;&#x610F;&#x8B58;&#x754C;&#xFF1B;&#x7121;&#x7121;&#x660E;&#xFF0C;&#x4EA6;&#x7121;&#x7121;&#x660E;&#x76E1;&#xFF1B;&#x4E43;&#x81F3;&#x7121;&#x8001;&#x6B7B;&#xFF0C;&#x4EA6;&#x7121;&#x8001;&#x6B7B;&#x76E1;&#x3002;&#x7121;&#x82E6;&#x3001;&#x96C6;&#x3001;&#x6EC5;&#x3001;&#x9053;&#xFF0C;&#x7121;&#x667A;&#x4EA6;&#x7121;&#x5F97;&#xFF0C;&#x4EE5;&#x7121;&#x6240;&#x5F97;&#x6545;&#x3002;</p>
<p>&#x83E9;&#x63D0;&#x85A9;&#x57F5;(<code>du&#x1D2;</code>)&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5FC3;&#x7121;&#x7F63;&#x7919;(<code>gu&#xE0; &#xE0;i</code>)&#x3002;&#x7121;&#x7F63;&#x7919;&#xFF0C;&#x6545;&#x7121;&#x6709;&#x6050;&#x6016;&#xFF0C;&#x9060;&#x96E2;&#x985B;&#x5012;&#x5922;&#x60F3;&#xFF0C;&#x7A76;&#x7ADF;&#x6D85;&#x69C3;&#x3002;&#x4E09;&#x4E16;&#x8AF8;&#x4F5B;&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5F97;&#x963F;&#x8028;&#x591A;&#x7F85;&#x4E09;&#x85D0;&#x4E09;&#x83E9;&#x63D0;&#x3002;<a id="more"></a></p>
<p>&#x6545;&#x77E5;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#xFF0C;&#x662F;&#x5927;&#x795E;&#x5492;&#xFF0C;&#x662F;&#x5927;&#x660E;&#x5492;&#xFF0C;&#x662F;&#x7121;&#x4E0A;&#x5492;&#xFF0C;&#x662F;&#x7121;&#x7B49;&#x7B49;&#x5492;&#xFF0C;&#x80FD;&#x9664;&#x4E00;&#x5207;&#x82E6;&#xFF0C;&#x771F;&#x5BE6;&#x4E0D;&#x865B;&#x3002;</p>
<p>&#x6545;&#x8AAA;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x5492;&#xFF0C;&#x5373;&#x8AAA;&#x5492;&#x66F0;&#xFF1A;</p>
<blockquote>
<p>&#x63ED;&#x8AE6;&#x3001;&#x63ED;&#x8AE6;&#xFF0C;&#x6CE2;&#x7F85;&#x63ED;&#x8AE6;&#xFF0C;&#x6CE2;&#x7F85;&#x50E7;&#x63ED;&#x8AE6;&#xFF0C;&#x83E9;&#x63D0;&#x85A9;&#x5A46;&#x8A36;&#x3002;</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[简体中文测试]]></title>
      <url>http://zhangshengshan.github.io/2013/12/25/simplified-chinese-test/</url>
      <content type="html"><![CDATA[<p>&#x89C2;&#x81EA;&#x5728;&#x83E9;&#x8428;&#xFF0C;&#x884C;&#x6DF1;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x65F6;&#xFF0C;&#x7167;&#x89C1;&#x4E94;&#x8574;&#x7686;&#x7A7A;&#xFF0C;&#x5EA6;&#x4E00;&#x5207;&#x82E6;&#x5384;&#x3002;</p>
<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x8272;&#x4E0D;&#x5F02;&#x7A7A;&#xFF0C;&#x7A7A;&#x4E0D;&#x5F02;&#x8272;&#xFF1B;&#x8272;&#x5373;&#x662F;&#x7A7A;&#xFF0C;&#x7A7A;&#x5373;&#x662F;&#x8272;&#x3002;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8BC6;&#xFF0C;&#x4EA6;&#x590D;&#x5982;&#x662F;&#x3002;</p>
<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x662F;&#x8BF8;&#x6CD5;&#x7A7A;&#x76F8;&#xFF0C;&#x4E0D;&#x751F;&#x4E0D;&#x706D;&#xFF0C;&#x4E0D;&#x57A2;&#x4E0D;&#x51C0;&#xFF0C;&#x4E0D;&#x589E;&#x4E0D;&#x51CF;&#xFF0C;&#x662F;&#x6545;&#x7A7A;&#x4E2D;&#x65E0;&#x8272;&#xFF0C;&#x65E0;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8BC6;&#xFF1B;&#x65E0;&#x773C;&#x3001;&#x8033;&#x3001;&#x9F3B;&#x3001;&#x820C;&#x3001;&#x8EAB;&#x3001;&#x610F;&#xFF1B;&#x65E0;&#x8272;&#x3001;&#x58F0;&#x3001;&#x9999;&#x3001;&#x5473;&#x3001;&#x89E6;&#x3001;&#x6CD5;&#xFF1B;&#x65E0;&#x773C;&#x754C;&#xFF0C;&#x4E43;&#x81F3;&#x65E0;&#x610F;&#x8BC6;&#x754C;&#xFF1B;&#x65E0;&#x65E0;&#x660E;&#xFF0C;&#x4EA6;&#x65E0;&#x65E0;&#x660E;&#x5C3D;&#xFF1B;&#x4E43;&#x81F3;&#x65E0;&#x8001;&#x6B7B;&#xFF0C;&#x4EA6;&#x65E0;&#x8001;&#x6B7B;&#x5C3D;&#x3002;&#x65E0;&#x82E6;&#x3001;&#x96C6;&#x3001;&#x706D;&#x3001;&#x9053;&#xFF0C;&#x65E0;&#x667A;&#x4EA6;&#x65E0;&#x5F97;&#xFF0C;&#x4EE5;&#x65E0;&#x6240;&#x5F97;&#x6545;&#x3002;</p>
<p>&#x83E9;&#x63D0;&#x8428;&#x57F5;(<code>du&#x1D2;</code>)&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5FC3;&#x65E0;&#x7F63;&#x788D;(<code>gu&#xE0; &#xE0;i</code>)&#x3002;&#x65E0;&#x7F63;&#x788D;&#xFF0C;&#x6545;&#x65E0;&#x6709;&#x6050;&#x6016;&#xFF0C;&#x8FDC;&#x79BB;&#x98A0;&#x5012;&#x68A6;&#x60F3;&#xFF0C;&#x7A76;&#x7ADF;&#x6D85;&#x76D8;&#x3002;&#x4E09;&#x4E16;&#x8BF8;&#x4F5B;&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5F97;&#x963F;&#x8028;&#x591A;&#x7F57;&#x4E09;&#x85D0;&#x4E09;&#x83E9;&#x63D0;&#x3002;<a id="more"></a></p>
<p>&#x6545;&#x77E5;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#xFF0C;&#x5927;&#x795E;&#x5492;&#xFF0C;&#x662F;&#x5927;&#x660E;&#x5492;&#xFF0C;&#x662F;&#x65E0;&#x4E0A;&#x5492;&#xFF0C;&#x662F;&#x65E0;&#x7B49;&#x7B49;&#x5492;&#xFF0C;&#x80FD;&#x9664;&#x4E00;&#x5207;&#x82E6;&#xFF0C;&#x771F;&#x5B9E;&#x4E0D;&#x865A;&#x3002;</p>
<p>&#x6545;&#x8BF4;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x5492;&#xFF0C; &#x5373;&#x8BF4;&#x5492;&#x66F0;&#xFF0C;</p>
<blockquote>
<p>&#x63ED;&#x8C1B;&#x63ED;&#x8C1B; &#x6CE2;&#x7F57;&#x63ED;&#x8C1B; &#x6CE2;&#x7F57;&#x50E7;&#x63ED;&#x8C1B; &#x83E9;&#x63D0;&#x8428;&#x5A46;&#x8BC3;</p>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
