{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/myimages/WX20180213-150211.png","path":"myimages/WX20180213-150211.png","modified":0,"renderable":0},{"_id":"source/myimages/WX20180214-095916.png","path":"myimages/WX20180214-095916.png","modified":0,"renderable":0},{"_id":"themes/freemind/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/font-awesome.css","path":"css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/google-fonts.css","path":"css/google-fonts.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/responsive.css","path":"css/responsive.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/img/github-sprite.png","path":"img/github-sprite.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/freemind/source/img/grid-18px-masked.png","path":"img/grid-18px-masked.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/img/glyphicons-halflings-white.png","path":"img/glyphicons-halflings-white.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/img/glyphicons-halflings.png","path":"img/glyphicons-halflings.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/freemind/source/img/grid-baseline-20px.png","path":"img/grid-baseline-20px.png","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"source/images/qna/qna.jpg","path":"images/qna/qna.jpg","modified":0,"renderable":0},{"_id":"source/images/tag-plugins/plugins.jpg","path":"images/tag-plugins/plugins.jpg","modified":0,"renderable":0},{"_id":"source/images/404.png","path":"images/404.png","modified":0,"renderable":0},{"_id":"source/images/lorem-ipsum/lorem-ipsum.jpg","path":"images/lorem-ipsum/lorem-ipsum.jpg","modified":0,"renderable":0},{"_id":"source/myimages/WX20180302-140428.png","path":"myimages/WX20180302-140428.png","modified":0,"renderable":0},{"_id":"themes/freemind/source/css/themes/common.css","path":"css/themes/common.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"source/images/xinjing/pusa2.jpg","path":"images/xinjing/pusa2.jpg","modified":0,"renderable":0},{"_id":"source/myimages/WX20180213-143853.png","path":"myimages/WX20180213-143853.png","modified":0,"renderable":0},{"_id":"themes/freemind/source/css/themes/default.css","path":"css/themes/default.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/LKf8nhXsWg5ybwEGXk8UBQ.woff","path":"fonts/google-fonts/LKf8nhXsWg5ybwEGXk8UBQ.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/0XxGQsSc1g4rdRdjJKZrNBsxEYwM7FgeyaSgU71cLG0.woff","path":"fonts/google-fonts/0XxGQsSc1g4rdRdjJKZrNBsxEYwM7FgeyaSgU71cLG0.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/2UX7WLTfW3W8TclTUvlFyQ.woff","path":"fonts/google-fonts/2UX7WLTfW3W8TclTUvlFyQ.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/PIPMHY90P7jtyjpXuZ2cLD8E0i7KZn-EPnyo3HZu7kw.woff","path":"fonts/google-fonts/PIPMHY90P7jtyjpXuZ2cLD8E0i7KZn-EPnyo3HZu7kw.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/cj2hUnSRBhwmSPr9kS5899kZXW4sYc4BjuAIFc1SXII.woff","path":"fonts/google-fonts/cj2hUnSRBhwmSPr9kS5899kZXW4sYc4BjuAIFc1SXII.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/UyYrYy3ltEffJV9QueSi4RdbPw3QSf9R-kE0EsQUn2A.woff","path":"fonts/google-fonts/UyYrYy3ltEffJV9QueSi4RdbPw3QSf9R-kE0EsQUn2A.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/google-fonts/lILlYDvubYemzYzN7GbLkHhCUOGz7vYGh680lGh-uXM.woff","path":"fonts/google-fonts/lILlYDvubYemzYzN7GbLkHhCUOGz7vYGh680lGh-uXM.woff","modified":0,"renderable":1},{"_id":"themes/freemind/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"source/myimages/WX20180213-145246.png","path":"myimages/WX20180213-145246.png","modified":0,"renderable":0},{"_id":"themes/freemind/source/fonts/google-fonts/0AKsP294HTD-nvJgucYTaIbN6UDyHWBl620a-IRfuBk.woff","path":"fonts/google-fonts/0AKsP294HTD-nvJgucYTaIbN6UDyHWBl620a-IRfuBk.woff","modified":0,"renderable":1},{"_id":"source/images/xinjing/pusa1.jpg","path":"images/xinjing/pusa1.jpg","modified":0,"renderable":0},{"_id":"themes/freemind/source/css/themes/cerulean.css","path":"css/themes/cerulean.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/cyborg.css","path":"css/themes/cyborg.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/cosmo.css","path":"css/themes/cosmo.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/bootstrap.css","path":"css/themes/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/flatly.css","path":"css/themes/flatly.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/journal.css","path":"css/themes/journal.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/simplex.css","path":"css/themes/simplex.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/lumen.css","path":"css/themes/lumen.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/paper.css","path":"css/themes/paper.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/sandstone.css","path":"css/themes/sandstone.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/united.css","path":"css/themes/united.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/darkly.css","path":"css/themes/darkly.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/slate.css","path":"css/themes/slate.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/readable.css","path":"css/themes/readable.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/spacelab.css","path":"css/themes/spacelab.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/yeti.css","path":"css/themes/yeti.css","modified":0,"renderable":1},{"_id":"themes/freemind/source/css/themes/superhero.css","path":"css/themes/superhero.css","modified":0,"renderable":1},{"_id":"source/myimages/WX20180214-100208.png","path":"myimages/WX20180214-100208.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/freemind/LICENSE","hash":"a708d11fd1944ab4b94b39a8c83c75f362a170d7","modified":1487049928000},{"_id":"themes/freemind/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1487049928000},{"_id":"themes/freemind/README.md","hash":"fc438aeda935681c9a0cd5017b24e70bd293277f","modified":1487049928000},{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1518503521000},{"_id":"themes/freemind/_config.yml","hash":"f3792f07044841445878677047178cbcc99f177e","modified":1519375334000},{"_id":"source/favicon.png","hash":"89bb16182e4c7515238924d9dfad38224a351b9f","modified":1487050941000},{"_id":"source/404.html","hash":"6d60562747e31ce6c7d4d831e3e4574a62850847","modified":1487050941000},{"_id":"themes/freemind/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1487049890000},{"_id":"themes/freemind/.git/packed-refs","hash":"2854adea6083a04956828e51d2cc668c7122c9b3","modified":1487049928000},{"_id":"themes/freemind/.git/config","hash":"214ce6785f08058c37a95f57e7046cc3007266ea","modified":1487049928000},{"_id":"themes/freemind/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1487049928000},{"_id":"themes/freemind/.git/index","hash":"e45ce7c577add5db963094cff95f3421a98c27f2","modified":1559191983893},{"_id":"themes/freemind/languages/pt-BR.yml","hash":"5909ce04246e958746c2d75a0dfd47076f8d0132","modified":1487049928000},{"_id":"themes/freemind/languages/zh-CN.yml","hash":"9e5faa5a1c3d3ee297ea58a8e43e6cf243f0ac53","modified":1487049928000},{"_id":"themes/freemind/languages/default.yml","hash":"b3cc8dec105b2f8a9f378593a008e1927c1500a6","modified":1487049928000},{"_id":"themes/freemind/languages/zh-TW.yml","hash":"44f8887b925454e7144c8c1bb9c8ca194cec969c","modified":1487049928000},{"_id":"themes/freemind/layout/archive.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1487049928000},{"_id":"themes/freemind/layout/categories.ejs","hash":"4702d93c9f437436138fb348ece828fe93f5b292","modified":1487049928000},{"_id":"themes/freemind/layout/index.ejs","hash":"2beec802d9dadb9369ffc7511304b1cc1feb96b0","modified":1487049928000},{"_id":"themes/freemind/layout/layout.ejs","hash":"288577e8d379364126679ae8466bee90b62bbda8","modified":1487049928000},{"_id":"themes/freemind/layout/page.ejs","hash":"21612a42b29cb20f106bc2716c598e69db142750","modified":1487049928000},{"_id":"themes/freemind/layout/post.ejs","hash":"dd2ad444d8a916a4f3fbcfb6e1b5f19890429ec4","modified":1487049928000},{"_id":"themes/freemind/layout/tags.ejs","hash":"67f650c3fac6c80548607f0369bfebacf56aba08","modified":1487049928000},{"_id":"source/categories/index.html","hash":"814d0f20ac2938bab4ad65a44fee43ef96381068","modified":1487050941000},{"_id":"source/_posts/17年要读的书和学习的技能.md","hash":"5a5bdc0bfd018fa855da17c2d0f32c67fec79061","modified":1489756063000},{"_id":"source/_posts/3-2UVa1586.md","hash":"484817b8ca0ed39442c1d496b692808cb7aae5c3","modified":1487146047000},{"_id":"source/_posts/1-100素数判断pyhon程序.md","hash":"4b3284df0d709865f398945a805100d94ad51a57","modified":1487146037000},{"_id":"source/_posts/Deep-MNIST-for-Experts.md","hash":"dc9d322d660b33e94fea824a70873d2dd55dbd36","modified":1487146050000},{"_id":"source/_posts/EchoServer服务器.md","hash":"ab5b04b7ed12d46d0fc7b810b87f97af54c1bd79","modified":1490346937000},{"_id":"source/_posts/A-Beginner-s-Guide-To-Understanding-Convolutional-Neural-Networks.md","hash":"9b463908283714c6b1400906b25c05736b2d27a1","modified":1493119167000},{"_id":"source/_posts/DeepLearningCnn.md","hash":"0916022d6e2dc46e5cb89d5af0058d2b895b0594","modified":1492693776000},{"_id":"source/_posts/2020READBOOKS.md","hash":"d9217fe040f6c3424b50045bfd43961a49c44325","modified":1588681626878},{"_id":"source/_posts/GitSyncWithForkedRep.md","hash":"31b49439103b4f2c77fdf2ab36d51b7195f9c3d7","modified":1527751794000},{"_id":"source/_posts/Google-面试宝典.md","hash":"36bae54c08400d9971b83bd9546f4f0598c05eae","modified":1487146056000},{"_id":"source/_posts/GitKeepSameWithUpStream.md","hash":"56db313eb5e4f7144d59d7a0e0ad41358dee1c13","modified":1518491618000},{"_id":"source/_posts/Install-Caffe-on-CentOS.md","hash":"587ba8cc17f542eff317c3d49842fc864f7f62d5","modified":1487146061000},{"_id":"source/_posts/Homebrew-config-for-mac.md","hash":"3ca0cb3ad62cb0c1eff5d6b87c4c084970813141","modified":1487146058000},{"_id":"source/_posts/Install-cuda9-0-cudnn7-0-tensorflow1-5-onUbuntu16-04-GTX1080TI.md","hash":"ed7c3a4f75d0e9dd8502488928070338e41c8a99","modified":1519354564000},{"_id":"source/_posts/FpInScala读书笔记.md","hash":"9de08bfc198480d31745cce7be0eb3e161becb4c","modified":1564064827494},{"_id":"source/_posts/JVM性能监控.md","hash":"a15752f227d1085c1b333ed077085c3df2436235","modified":1532681910734},{"_id":"source/_posts/JVMGC.md","hash":"6dfc8418f09f239ded3ac7110dbe904182a5bd99","modified":1533216074735},{"_id":"source/_posts/LDA现行判别分析.md","hash":"ee41d3d8a097d6c0718a6fa85d110d00d34174b5","modified":1521698801000},{"_id":"source/_posts/ExactlyOnce.md","hash":"00ab226a81bcb0397b7e1edb8a955411d5c50cd2","modified":1563522669816},{"_id":"source/_posts/Latex.md","hash":"9463e18a16befdfeac84e7ec6681f6393e094813","modified":1519378403000},{"_id":"source/_posts/DebugSparkWithIntelliy.md","hash":"3625eb5cf98f02b956e8a07dc087502b45258efa","modified":1575598998429},{"_id":"source/_posts/MAC访问你DOCKER容器中的WEB页面.md","hash":"59341e902d8de01a31e9f6d71d4c33e735529214","modified":1487146066000},{"_id":"source/_posts/MergeSort.md","hash":"a0eb834a919c6dffb24886ff5cb55c864354cc41","modified":1487146069000},{"_id":"source/_posts/ReinforcementLearning.md","hash":"388c9d0af914ae91866f796ab0123c9d1e49f5d8","modified":1530773358000},{"_id":"source/_posts/LearningFlink.md","hash":"942579d903d140e987f882a7f73b0b54db8558c0","modified":1487146063000},{"_id":"source/_posts/LeetCode.md","hash":"e9fc17b2d8c35b5560b95df980a8361e22634ff3","modified":1587524742254},{"_id":"source/_posts/SPARK的宽依赖和窄依赖.md","hash":"3b5cc73ebb4e8b5faa233806b80f20de3f4c650a","modified":1487146072000},{"_id":"source/_posts/JavaComments.md","hash":"26f89c22b823879de6e8fe18c7089d49f38a9ff2","modified":1569318677103},{"_id":"source/_posts/Save-DataFrame-into-a-partitioned-table-of-HIVE.md","hash":"7c062b9378afb78130a9ff082c3e0c9337e89d40","modified":1487146074000},{"_id":"source/_posts/Scala-call-by-name-call-by-value.md","hash":"2ed720c2c577e04e9e3433ed3bbb810f13937d66","modified":1487146077000},{"_id":"source/_posts/ScalaList是线程安全的吗？.md","hash":"5eaef5e2b647cca2f096ccb4cfb9e66e0e32dc9c","modified":1554799487561},{"_id":"source/_posts/Scala并发编程读书笔记.md","hash":"48034f5325985a60163d8a38c1d7101cc8662e6f","modified":1556001449667},{"_id":"source/_posts/Spark-Streaming-Programming-Guide.md","hash":"0c65a89d394b325dec2f950c184ce56187bf14bb","modified":1487146085000},{"_id":"source/_posts/ScalaList.md","hash":"383209fd8be0a7538dcb91abcf9dc2ccbcd209f1","modified":1487146080000},{"_id":"source/_posts/Spark-2-0-Introduction.md","hash":"46577608df353b0c76938659de6698bbfd1ae8be","modified":1487146083000},{"_id":"source/_posts/ReleasePackageToSonatypeRepo.md","hash":"298fc28eacbd0ba85c29a2d07642e354fde8f7ff","modified":1576057228944},{"_id":"source/_posts/Spark-Window-Operation.md","hash":"b429c363e97798400c5b81e6b789f2d609d76b3f","modified":1487146088000},{"_id":"source/_posts/SparkDataFrameLikeSql.md","hash":"ae3873064e71c55a12010cf0ecadfbd37ac1b55c","modified":1487146090000},{"_id":"source/_posts/UVa1225.md","hash":"18899a3ebd92858334aa27961b390ea14be814df","modified":1487146099000},{"_id":"source/_posts/SparkParseJson.md","hash":"50d74a2349a51e8874d5cfe9791aaa3467db9eb4","modified":1489656762000},{"_id":"source/_posts/SparkStreamLearning.md","hash":"c84819286bb7a7455bfa7b392be299c21d3bb1bf","modified":1487146096000},{"_id":"source/_posts/SparkPassFunctions.md","hash":"3cc7a9ee1e38e0f58971abf857330237b6e60042","modified":1487146093000},{"_id":"source/_posts/UVa455.md","hash":"6ec1f759c34a52abb3d389bdc1dca32424ea064a","modified":1487146102000},{"_id":"source/_posts/UpperBound.md","hash":"983876b0ff5e0b8012719e8529a93aea86852b1d","modified":1505725863000},{"_id":"source/_posts/ScalaTest.md","hash":"ad55c3c1e2505b4290c6b7ddd8d70118ad6ea819","modified":1565084482950},{"_id":"source/_posts/arthas技巧.md","hash":"2cd73649c7a4ebfef6c9ccf161edb093539160a8","modified":1591255444416},{"_id":"source/_posts/code-highlight.md","hash":"98c51a0b047a016cbf541f249ca6934f1faa2024","modified":1487050941000},{"_id":"source/_posts/SciPyLearn.md","hash":"5d236a0e07308ff14a72a72bcf72474faded16ee","modified":1576759094371},{"_id":"source/_posts/arthas.md","hash":"62aad09b48fbbe0c6e5b162911396d50582e7a8e","modified":1591197960930},{"_id":"source/_posts/install-tensorflow.md","hash":"c0f70c0ef97acc9bf3b842d9db30cd39329d84bc","modified":1487146110000},{"_id":"source/_posts/lorem-ipsum.md","hash":"8e69ca7bbbda232e6978453dfef2073b944f2a5b","modified":1487146118000},{"_id":"source/_posts/qna-cn.md","hash":"7c365b07de5671469dcdc130a7e0a5976dbae448","modified":1487146202000},{"_id":"source/_posts/gradel2maven.md","hash":"1d96fb0933133b406b14a5997aa37523110f47cd","modified":1567587519211},{"_id":"source/_posts/qna.md","hash":"1245502fe4d56e15044d1a11da437f7acce1b989","modified":1487146202000},{"_id":"source/_posts/save-spark-rdd-into-Mysql.md","hash":"10c52b712c97ea573d68a576b4c4904f86ec9957","modified":1487146130000},{"_id":"source/_posts/scala隐式转换.md","hash":"d4bca9e810d2ec0ba13477011ba09398200a423b","modified":1504859278000},{"_id":"source/_posts/simplified-chinese-test.md","hash":"51063ca6f24f644a59bdfde460e81cb9a347cef3","modified":1487050941000},{"_id":"source/_posts/SpringLearn.md","hash":"ce350b9576ecee50dba66db9433ccdfba0398656","modified":1588940273456},{"_id":"source/_posts/reflction-on-data-develop-ahout-4-years.md","hash":"f270c0035fe46d742b19a6e6984cf89e9f5cc220","modified":1559192105268},{"_id":"source/_posts/tag-plugins-cn.md","hash":"eb9ad21ebfa2c0aebddb5b0c94e34a5bbd8cf5e7","modified":1487050941000},{"_id":"source/_posts/tag-plugins.md","hash":"81e4f699aaa9cb3d9d74152faf6743f3061263f9","modified":1487050941000},{"_id":"source/_posts/test.md","hash":"2bdd2e1e648e356b16e1920d11550a46cf120e88","modified":1493038783000},{"_id":"source/_posts/traditional-chinese-test.md","hash":"78d8fe275ef3a82a4f912090333f895f0c5496de","modified":1487146023000},{"_id":"source/_posts/vim使用技巧.md","hash":"5b585ec385e122ffdecd27e319fb5d9157bceaeb","modified":1492690601000},{"_id":"source/_posts/关于支持向量机的几个问题.md","hash":"bf5cae9021845d2f3af9df1751cbd304a7e27a18","modified":1520423536000},{"_id":"source/_posts/函数式编程.md","hash":"be8253124c1d7ae6dd64736c80cd8100fd0fbd19","modified":1505038314000},{"_id":"source/_posts/是现成安全的吗？.md","hash":"603ac469367f9f3daf350615346301803debca52","modified":1554799369470},{"_id":"source/_posts/perf.md","hash":"7012495abb507df7486cbc469e01968e687e49fb","modified":1586927285689},{"_id":"source/_posts/如何判断一个项目或者一个需求的价值.md","hash":"cc0de25ed39660f4d66d02dd471be3e36e4a0e02","modified":1569561097679},{"_id":"source/_posts/机器学习相关材料.md","hash":"0248f6b3a7477596111c41c640a8e93610090c8e","modified":1492678144000},{"_id":"source/_posts/深度学习中的几个经典问题.md","hash":"a0b45a0dd056ff5f5ccca604238bc0f24694021b","modified":1493188210000},{"_id":"source/_posts/读书清单.md","hash":"a49dbc05da0f861ff57254341dd7c0a208771c43","modified":1570865495524},{"_id":"source/_posts/systemtap.md","hash":"0827e0b45565315a40cc40a19d3000b1c7e704c0","modified":1586315236727},{"_id":"source/_posts/过拟合的原因.md","hash":"54adf90db7b96087e76e80914e636b906d3d102a","modified":1487146029000},{"_id":"source/_posts/通俗语言解释Monad-1.md","hash":"a10df1cf9123d6c9b4124e840bb8001429935c92","modified":1564047517787},{"_id":"source/_posts/聊聊Scala判等.md","hash":"d77f2f1231140c87c2509751427bcd1706f08d48","modified":1562163596089},{"_id":"source/_posts/通俗语言解释Monad.md","hash":"fcc3263a1ec59eb0fe43b1503026b81cb7e95429","modified":1564047492138},{"_id":"source/_posts/基础概率分布.md","hash":"c33e6587d20520bb6951625b534d947f83bfca0e","modified":1561713300459},{"_id":"source/tags/index.html","hash":"e270b084f584c48cd3b6234106fed51b3fc2a811","modified":1487050941000},{"_id":"source/_posts/财务造假.md","hash":"b2def58a28691330b131b2e6159db95b7698549c","modified":1573618924116},{"_id":"source/about/index.md","hash":"7406f44b74ae5fccf8111b732c9d4ca36a544b9c","modified":1487053229000},{"_id":"source/about/index.html","hash":"f34264d73c8ba7acb37d50c993fb6b95b7d17012","modified":1487053089000},{"_id":"themes/freemind/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1487049890000},{"_id":"source/myimages/WX20180213-150211.png","hash":"62391187f44288461bf87c88e7cede768db910f0","modified":1518505358000},{"_id":"themes/freemind/.git/logs/HEAD","hash":"4b14a3922b76812f18ad74b6ab20d7183c309714","modified":1487049928000},{"_id":"source/myimages/WX20180214-095916.png","hash":"efbeba0ab62e6e3d24d671dc7c0f28019d0cbcab","modified":1518573805000},{"_id":"themes/freemind/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1487049890000},{"_id":"themes/freemind/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1487049890000},{"_id":"themes/freemind/layout/_partial/after_footer.ejs","hash":"95db6c8dd058503987061c0f1e42e00c5611d422","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/footer.ejs","hash":"b4b55c57c4172931af355565ba404dc7dd367c21","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/article.ejs","hash":"6c9873fd160e4689c861b779e9639a78b6e9f86d","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/index_pagination.ejs","hash":"bf4552d1eccce17865cacc717592bbd2bed7c573","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/navigation.ejs","hash":"f1fa4aefb27ef8f90b47b36a8d1d9aede8fdcaf1","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/index.ejs","hash":"7f4b8d82522cc6034b8584230462cdc70d0b0567","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/head.ejs","hash":"acf773ec06100b0b63ea5600a38c4b07490e8f4a","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/archive.ejs","hash":"5e4a76e39e8f01ad8e93b09c263785413a9a21ab","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/search.ejs","hash":"a7c526c07a8af040ba285dc63f267004ce211dce","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/sidebar.ejs","hash":"862ff700568ec5a00f222131b353475d0a3f2a9c","modified":1487049928000},{"_id":"themes/freemind/layout/_widget/links.ejs","hash":"c0452a56e4513efe03867734f5fbcb6715f9a852","modified":1487049928000},{"_id":"themes/freemind/layout/_widget/recent_posts.ejs","hash":"8d1018d6b4b9c83a58efc11a2ceef86a2bbbeb17","modified":1487049928000},{"_id":"themes/freemind/layout/_widget/category.ejs","hash":"9582012806de184f419a2230aa52ca20915a4115","modified":1487049928000},{"_id":"themes/freemind/layout/_widget/search.ejs","hash":"620dd8a93a9f0fca63f6f0b520cf192ce7b5a645","modified":1487049928000},{"_id":"themes/freemind/layout/_widget/tagcloud.ejs","hash":"2bb6f4c3b2c10bc107f2d216bda34339ca045338","modified":1487049928000},{"_id":"themes/freemind/source/css/highlight.css","hash":"98a031dd0991929ec23098db9dfde15ae662f031","modified":1487049928000},{"_id":"themes/freemind/source/css/font-awesome.css","hash":"6df51eee1e75e450cb9cd71e925e6aa9ac2d6a9d","modified":1487049928000},{"_id":"themes/freemind/source/css/google-fonts.css","hash":"91e629d0a0a531e920252788ed8863c26608c2b2","modified":1487049928000},{"_id":"themes/freemind/source/css/responsive.css","hash":"25136a75af5957a669d5c4782da8b8fa95f8fc55","modified":1487049928000},{"_id":"themes/freemind/source/css/style.css","hash":"dcb70853f408cbf2821e3f0b47aba0c362bdf439","modified":1487049928000},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1487049928000},{"_id":"themes/freemind/source/img/github-sprite.png","hash":"4d7ee33beaaebf002ba57a172d159e46194ae481","modified":1487049928000},{"_id":"themes/freemind/source/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1487049928000},{"_id":"themes/freemind/source/img/grid-18px-masked.png","hash":"1379b689836f9fcccd88aa729c4034d6b36e1f3c","modified":1487049928000},{"_id":"themes/freemind/source/img/glyphicons-halflings-white.png","hash":"a25c4705320fd63c33790e666872910e702b9bf6","modified":1487049928000},{"_id":"themes/freemind/source/img/glyphicons-halflings.png","hash":"84f613631b07d4fe22acbab50e551c0fe04bd78b","modified":1487049928000},{"_id":"themes/freemind/source/js/bootstrap.min.js","hash":"6c264e0e0026ab5ece49350c6a8812398e696cbb","modified":1487049928000},{"_id":"themes/freemind/source/js/gallery.js","hash":"d19f1b1cc5b75e21ca1d643b6dae9490ead28b55","modified":1487049928000},{"_id":"themes/freemind/source/js/jquery.imagesloaded.min.js","hash":"3eb6381d2ed4b706020e4be5aff024aab4bcabc5","modified":1487049928000},{"_id":"themes/freemind/source/js/main.js","hash":"d78290344d95646172e488e0af2dade9740288f8","modified":1487049928000},{"_id":"themes/freemind/source/img/grid-baseline-20px.png","hash":"43b8d0c9b39f5ce07ecfde036fd13f835c129238","modified":1487049928000},{"_id":"themes/freemind/source/js/search.js","hash":"901b18b539a0cc6c2b90f93e79faf43e590fe3fd","modified":1487049928000},{"_id":"source/images/qna/qna.jpg","hash":"4c952c45fad44bce7a8891b058dd60525c5b2ccf","modified":1487050941000},{"_id":"source/images/tag-plugins/plugins.jpg","hash":"20fba2f464b64d8949c52951f9ba38d79ccbbb05","modified":1487050941000},{"_id":"source/images/404.png","hash":"12830f90f6ac9161380d68002fbffedab98c4bcb","modified":1487050941000},{"_id":"source/images/lorem-ipsum/lorem-ipsum.jpg","hash":"c79f19e85266dc418c28e52ee171e194bcc91711","modified":1487050941000},{"_id":"source/myimages/WX20180302-140428.png","hash":"2cd01383d44914719fa4b3af2469d15a7fa32d3a","modified":1519970670000},{"_id":"themes/freemind/.git/objects/pack/pack-6c991ffecabeab00115673b5b599cb715702f6eb.idx","hash":"02dff3e09f21bbb799aa301a3793eed6d208b17d","modified":1487049928000},{"_id":"themes/freemind/.git/refs/heads/master","hash":"fb335a3c0c13f80db37b3190e3ae0ef44c6c30cf","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/common.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487049928000},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1487049928000},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1487049928000},{"_id":"themes/freemind/source/fonts/FontAwesome.otf","hash":"6270a4a561a69fef5f5cc18cdf9efc256ec2ccbe","modified":1487049928000},{"_id":"source/images/xinjing/pusa2.jpg","hash":"b1b19d13c532bc0312dcdd7d0f5dbcffd5c312ee","modified":1487050941000},{"_id":"themes/freemind/layout/_partial/post/category.ejs","hash":"54c22e9df09949f59298b21bb2fd55b01fa68845","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/analytics.ejs","hash":"31a0a3e5bc616b847c1ed82293fb3a3fc97054be","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/bdshare.ejs","hash":"24c91ac17714ea39120a18633c3611b15464e5ab","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/entry.ejs","hash":"290ede180aeebcc5b5e6c3c4e22f2528e0c606d8","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/jiathis.ejs","hash":"6fbf47f67e6f18fe4fea7fff6b564d29512469b5","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/meta.ejs","hash":"d37b3981e0cbb1a13db6d0dc884b6938bbeeed1b","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/comment_footer.ejs","hash":"fefc355eb4d61d08ffca7f6439fecb146696265e","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/share.ejs","hash":"24c04b319f1b19e887c42db961b90a7e0ab26fdc","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/tag.ejs","hash":"ca231a24b4d17206991da3468842dd8610d94080","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/slogan.ejs","hash":"f82820a4af877570074895927f3bddc3b4b6a4fa","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/comment.ejs","hash":"85864ed25f79e2e900909c226770fb9aa47f3e5c","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/title_top.ejs","hash":"de37bbb4b36fcb9d66a3d6efdd40a668087d75c2","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/pagination.ejs","hash":"3336c168120c33e63cbfefc2c4f24c2562282d38","modified":1487049928000},{"_id":"themes/freemind/layout/_partial/post/title.ejs","hash":"edfa78ed7a845d15bb43eca6268115704ec8072e","modified":1487049928000},{"_id":"source/myimages/WX20180213-143853.png","hash":"273870c007d7d9dd15ab07d30e6ddc58a384535b","modified":1518505358000},{"_id":"themes/freemind/source/css/themes/default.css","hash":"32f758d295c7037f247d300f2481b5d7d4f3b100","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/LKf8nhXsWg5ybwEGXk8UBQ.woff","hash":"f401d51152681048c06187c5d3919b1407b899c5","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/0XxGQsSc1g4rdRdjJKZrNBsxEYwM7FgeyaSgU71cLG0.woff","hash":"33225e85c33279e7b4f0c5c65ff93bec740dd59c","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/2UX7WLTfW3W8TclTUvlFyQ.woff","hash":"87deb174af2e2beebb9f09d618a5159ca299a3d0","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/PIPMHY90P7jtyjpXuZ2cLD8E0i7KZn-EPnyo3HZu7kw.woff","hash":"18dc51e642b4df958098d3bbc6d3ba0237ef6150","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/cj2hUnSRBhwmSPr9kS5899kZXW4sYc4BjuAIFc1SXII.woff","hash":"17a484b92c0dacc8e8b4f0d38ccc1db400819d1d","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/UyYrYy3ltEffJV9QueSi4RdbPw3QSf9R-kE0EsQUn2A.woff","hash":"d9f913d09bb3c25749daf8e7ab829c850a842929","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/lILlYDvubYemzYzN7GbLkHhCUOGz7vYGh680lGh-uXM.woff","hash":"e6c9f1e5a6a966a8f7250201356f351890a48921","modified":1487049928000},{"_id":"themes/freemind/source/js/jquery-2.0.3.min.js","hash":"28daf1b2a995cc4de81154a9a9ebdbb98f7c9997","modified":1487049928000},{"_id":"source/myimages/WX20180213-145246.png","hash":"417e12c098b34fcfa46189bf7f5184df6bf2208b","modified":1518505358000},{"_id":"themes/freemind/.git/logs/refs/heads/master","hash":"4b14a3922b76812f18ad74b6ab20d7183c309714","modified":1487049928000},{"_id":"themes/freemind/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1487049928000},{"_id":"themes/freemind/source/fonts/google-fonts/0AKsP294HTD-nvJgucYTaIbN6UDyHWBl620a-IRfuBk.woff","hash":"1d9bb14c006d39d7eb0812a85567c7431f899b8d","modified":1487049928000},{"_id":"source/images/xinjing/pusa1.jpg","hash":"dfd001736d24d052613aebbd17704df59fecd22a","modified":1487050941000},{"_id":"themes/freemind/source/css/themes/cerulean.css","hash":"7fee0903cce12483ae3f37d330ef693826a5a61f","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/cyborg.css","hash":"4320dbfd9543f6ef1cc703d83d85c6652f9272d0","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/cosmo.css","hash":"bcb36ab2b547571fa4125e05e1074abba6bd5670","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/bootstrap.css","hash":"11197c2fc2925b34cc98a3f4ec67ffdd9f36a760","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/flatly.css","hash":"a95865761e69d0daf75660e24d9f5f316482ea55","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/journal.css","hash":"b77cda6baedc3852c64f5664206356b3057b4781","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/simplex.css","hash":"b8165c48cf72e54c1f8ae1a550a04a64e6ce1929","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/lumen.css","hash":"5c23c4a98aec86b8483040e0ca602d3a4574f32c","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/paper.css","hash":"1ae57ddb500a85b8ca8e7d2897e55cb2ba4cf1bc","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/sandstone.css","hash":"5878440ffa7e1656214bafd8b7f39d736219807a","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/united.css","hash":"857151fa534842d0f8e862b2067f22905a1b3382","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/darkly.css","hash":"581ff4339a616fe26b4dc1b6c1d1ad7946b83de6","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/slate.css","hash":"3859265e9fcdb579f40a2ef7a5bd8dbead2d13ca","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/readable.css","hash":"af59c50f83bba69a4fef7d0ac32e309c903b4511","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/spacelab.css","hash":"fa4efbf50ca392c25e9b6395d6221696ec6573b6","modified":1487049928000},{"_id":"themes/freemind/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1487049928000},{"_id":"themes/freemind/.git/logs/refs/remotes/origin/HEAD","hash":"4b14a3922b76812f18ad74b6ab20d7183c309714","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/yeti.css","hash":"7cb64c45bed521321e0a4a57e05e3d1c87721f16","modified":1487049928000},{"_id":"themes/freemind/source/css/themes/superhero.css","hash":"cc4ce979e1def77b7c9b250d97d0baf3e0a3f845","modified":1487049928000},{"_id":"source/myimages/WX20180214-100208.png","hash":"bf0c7335110de2a2f39045c65ef2bc01473884cd","modified":1518573805000},{"_id":"themes/freemind/.git/objects/pack/pack-6c991ffecabeab00115673b5b599cb715702f6eb.pack","hash":"bfc9167c6bea5599c2626127adb2a1125a4da66f","modified":1487049928000}],"Category":[{"name":"C/C++","_id":"ckb0g1el60005bnavjedujziy"},{"name":"Python","_id":"ckb0g1elb000abnavzlrgxskm"},{"name":"tensorflow","_id":"ckb0g1elg000gbnavqclyt6z8"},{"name":"学习","_id":"ckb0g1elj000nbnavlssnpye1"},{"name":"Linux","_id":"ckb0g1elq0011bnavcziwi8i1"},{"name":"Spark","_id":"ckb0g1em4001ubnav9uwgvvvq"},{"name":"Scala","_id":"ckb0g1em80027bnavhb5xh63j"},{"name":"Demo","_id":"ckb0g1emp003gbnavhejiqnoz"},{"name":"Test","_id":"ckb0g1ems003pbnavvijxpyzi"},{"name":"Docs","_id":"ckb0g1emv003ybnavafrpl8zy"},{"name":"VIM","_id":"ckb0g1en5004rbnavxiam9l9c"},{"name":"MachineLearning","_id":"ckb0g1enb0056bnavzu4dnio6"}],"Data":[],"Page":[{"layout":"false","_content":"\n<!DOCTYPE HTML>\n<html>\n  <head>\n\t<meta charset=\"utf-8\">\n\t<title>404 | hexo-theme-freemind</title>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<meta property=\"og:site_name\" content=\"hexo-theme-freemind\"/>\n\t<meta property=\"og:image\" content=\"undefined\"/>\n\t<link href=\"favicon.png\" rel=\"icon\">\n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/themes/bootstrap.css\" media=\"screen\" type=\"text/css\">  \n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/style.css\" media=\"screen\" type=\"text/css\">  \n\t<script src=\"/hexo-theme-freemind/js/jquery-2.0.3.min.js\"></script>\n  </head>\n\n  <body>\n\t<nav id=\"main-nav\" class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n\t  <div class=\"container\">\n\t\t<button type=\"button\" class=\"navbar-header navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n\t\t  <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n\t\t</button>\n\t\t<a class=\"navbar-brand\" href=\"/hexo-theme-freemind/\">Freemind</a>\n\t\t<div class=\"collapse navbar-collapse nav-menu\">\n\t\t  <ul class=\"nav navbar-nav\">\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/archives\" title=\"All the articles.\">\n\t\t\t\t<i class=\"fa fa-archive\"></i>Archives\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/categories\" title=\"All the categories.\">\n\t\t\t\t<i class=\"fa fa-folder\"></i>Categories\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/tags\" title=\"All the tags.\">\n\t\t\t\t<i class=\"fa fa-tags\"></i>Tags\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/about\" title=\"About me.\">\n\t\t\t\t<i class=\"fa fa-user\"></i>About\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t  </ul>\n\t\t</div>\n\t  </div>\n\t</nav>\n\n\t<div class=\"clearfix\"></div>\n\n    <div class=\"container\">\n  \t  <div class=\"content\">\n    \t<div class=\"page-header\">\t\t\n\t\t  <h1>OMG, failed to find this article! </h1>\n\t\t</div>\n\t\t\n\t\t<div class=\"row-fluid page\">\n\t\t  <div style=\"text-align: center\">\n\t\t\t<div class=\"spell-img\">\n\t\t\t  <img src=\"/hexo-theme-freemind/images/404.png\"></img>\n\t\t\t</div>\n\t\t\t<input type=\"text\" id=\"local-search-input\" name=\"q\" results=\"0\" placeholder=\"Don't worry, search articles here!\" class=\"st-search-input st-default-search-input form-control\" style=\"margin-bottom:1em\"/>\n\t\t  </div>\n\t\t  <div id=\"local-search-result\"></div>\n\t\t</div>\n\t  </div>\n    </div> <!-- container -->\t\n\n\t<div class=\"container-narrow\">\n\t  <footer> <p>\n\t\t  &copy; 2014 Joseph Pan\n\t\t  \n\t\t  with help from <a href=\"http://zespia.tw/hexo/\" target=\"_blank\">Hexo</a> and <a href=\"http://getbootstrap.com/\" target=\"_blank\">Twitter Bootstrap</a>. Theme by <a href=\"http://github.com/wzpan/hexo-theme-freemind/\">Freemind</a>.\t\t  \n\t  </p> </footer>\n\t</div> <!-- container-narrow -->\n\n\t<script src=\"/hexo-theme-freemind/js/bootstrap.min.js\"></script>\n\t<script src=\"/hexo-theme-freemind/js/search.js\"></script> \n\t<script type=\"text/javascript\">      \n     var path = \"/hexo-theme-freemind/search.xml\";\n     searchFunc(path, 'local-search-input', 'local-search-result');\n   </script>\n  </body>\t\n</html>\n\n","source":"404.html","raw":"---\nlayout: false\n---\n\n<!DOCTYPE HTML>\n<html>\n  <head>\n\t<meta charset=\"utf-8\">\n\t<title>404 | hexo-theme-freemind</title>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<meta property=\"og:site_name\" content=\"hexo-theme-freemind\"/>\n\t<meta property=\"og:image\" content=\"undefined\"/>\n\t<link href=\"favicon.png\" rel=\"icon\">\n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/themes/bootstrap.css\" media=\"screen\" type=\"text/css\">  \n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/style.css\" media=\"screen\" type=\"text/css\">  \n\t<script src=\"/hexo-theme-freemind/js/jquery-2.0.3.min.js\"></script>\n  </head>\n\n  <body>\n\t<nav id=\"main-nav\" class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n\t  <div class=\"container\">\n\t\t<button type=\"button\" class=\"navbar-header navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n\t\t  <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n\t\t</button>\n\t\t<a class=\"navbar-brand\" href=\"/hexo-theme-freemind/\">Freemind</a>\n\t\t<div class=\"collapse navbar-collapse nav-menu\">\n\t\t  <ul class=\"nav navbar-nav\">\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/archives\" title=\"All the articles.\">\n\t\t\t\t<i class=\"fa fa-archive\"></i>Archives\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/categories\" title=\"All the categories.\">\n\t\t\t\t<i class=\"fa fa-folder\"></i>Categories\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/tags\" title=\"All the tags.\">\n\t\t\t\t<i class=\"fa fa-tags\"></i>Tags\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/about\" title=\"About me.\">\n\t\t\t\t<i class=\"fa fa-user\"></i>About\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t  </ul>\n\t\t</div>\n\t  </div>\n\t</nav>\n\n\t<div class=\"clearfix\"></div>\n\n    <div class=\"container\">\n  \t  <div class=\"content\">\n    \t<div class=\"page-header\">\t\t\n\t\t  <h1>OMG, failed to find this article! </h1>\n\t\t</div>\n\t\t\n\t\t<div class=\"row-fluid page\">\n\t\t  <div style=\"text-align: center\">\n\t\t\t<div class=\"spell-img\">\n\t\t\t  <img src=\"/hexo-theme-freemind/images/404.png\"></img>\n\t\t\t</div>\n\t\t\t<input type=\"text\" id=\"local-search-input\" name=\"q\" results=\"0\" placeholder=\"Don't worry, search articles here!\" class=\"st-search-input st-default-search-input form-control\" style=\"margin-bottom:1em\"/>\n\t\t  </div>\n\t\t  <div id=\"local-search-result\"></div>\n\t\t</div>\n\t  </div>\n    </div> <!-- container -->\t\n\n\t<div class=\"container-narrow\">\n\t  <footer> <p>\n\t\t  &copy; 2014 Joseph Pan\n\t\t  \n\t\t  with help from <a href=\"http://zespia.tw/hexo/\" target=\"_blank\">Hexo</a> and <a href=\"http://getbootstrap.com/\" target=\"_blank\">Twitter Bootstrap</a>. Theme by <a href=\"http://github.com/wzpan/hexo-theme-freemind/\">Freemind</a>.\t\t  \n\t  </p> </footer>\n\t</div> <!-- container-narrow -->\n\n\t<script src=\"/hexo-theme-freemind/js/bootstrap.min.js\"></script>\n\t<script src=\"/hexo-theme-freemind/js/search.js\"></script> \n\t<script type=\"text/javascript\">      \n     var path = \"/hexo-theme-freemind/search.xml\";\n     searchFunc(path, 'local-search-input', 'local-search-result');\n   </script>\n  </body>\t\n</html>\n\n","date":"2019-05-29T04:26:45.023Z","updated":"2017-02-14T05:42:21.000Z","path":"404.html","title":"","comments":1,"_id":"ckb0g1ejc0000bnavww8l21mb","content":"\n<!DOCTYPE HTML>\n<html>\n  <head>\n\t<!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"utf-8\">\n\t<title>404 | hexo-theme-freemind</title>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<meta property=\"og:site_name\" content=\"hexo-theme-freemind\">\n\t<meta property=\"og:image\" content=\"undefined\">\n\t<link href=\"favicon.png\" rel=\"icon\">\n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/themes/bootstrap.css\" media=\"screen\" type=\"text/css\">  \n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/style.css\" media=\"screen\" type=\"text/css\">  \n\t<script src=\"/hexo-theme-freemind/js/jquery-2.0.3.min.js\"></script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n  </head>\n\n  <body>\n\t<!-- hexo-inject:begin --><!-- hexo-inject:end --><nav id=\"main-nav\" class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n\t  <div class=\"container\">\n\t\t<button type=\"button\" class=\"navbar-header navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n\t\t  <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n\t\t</button>\n\t\t<a class=\"navbar-brand\" href=\"/hexo-theme-freemind/\">Freemind</a>\n\t\t<div class=\"collapse navbar-collapse nav-menu\">\n\t\t  <ul class=\"nav navbar-nav\">\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/archives\" title=\"All the articles.\">\n\t\t\t\t<i class=\"fa fa-archive\"></i>Archives\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/categories\" title=\"All the categories.\">\n\t\t\t\t<i class=\"fa fa-folder\"></i>Categories\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/tags\" title=\"All the tags.\">\n\t\t\t\t<i class=\"fa fa-tags\"></i>Tags\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/about\" title=\"About me.\">\n\t\t\t\t<i class=\"fa fa-user\"></i>About\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t  </ul>\n\t\t</div>\n\t  </div>\n\t</nav>\n\n\t<div class=\"clearfix\"></div>\n\n    <div class=\"container\">\n  \t  <div class=\"content\">\n    \t<div class=\"page-header\">\t\t\n\t\t  <h1>OMG, failed to find this article! </h1>\n\t\t</div>\n\t\t\n\t\t<div class=\"row-fluid page\">\n\t\t  <div style=\"text-align: center\">\n\t\t\t<div class=\"spell-img\">\n\t\t\t  <img src=\"/hexo-theme-freemind/images/404.png\">\n\t\t\t</div>\n\t\t\t<input type=\"text\" id=\"local-search-input\" name=\"q\" results=\"0\" placeholder=\"Don&apos;t worry, search articles here!\" class=\"st-search-input st-default-search-input form-control\" style=\"margin-bottom:1em\">\n\t\t  </div>\n\t\t  <div id=\"local-search-result\"></div>\n\t\t</div>\n\t  </div>\n    </div> <!-- container -->\t\n\n\t<div class=\"container-narrow\">\n\t  <footer> <p>\n\t\t  &#xA9; 2014 Joseph Pan\n\t\t  \n\t\t  with help from <a href=\"http://zespia.tw/hexo/\" target=\"_blank\">Hexo</a> and <a href=\"http://getbootstrap.com/\" target=\"_blank\">Twitter Bootstrap</a>. Theme by <a href=\"http://github.com/wzpan/hexo-theme-freemind/\" target=\"_blank\" rel=\"external\">Freemind</a>.\t\t  \n\t  </p> </footer>\n\t</div> <!-- container-narrow -->\n\n\t<script src=\"/hexo-theme-freemind/js/bootstrap.min.js\"></script>\n\t<script src=\"/hexo-theme-freemind/js/search.js\"></script> \n\t<script type=\"text/javascript\">      \n     var path = \"/hexo-theme-freemind/search.xml\";\n     searchFunc(path, 'local-search-input', 'local-search-result');\n   </script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n  </body>\t\n</html>\n\n","excerpt":"","more":"\n<!DOCTYPE HTML>\n<html>\n  <head>\n\t<!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"utf-8\">\n\t<title>404 | hexo-theme-freemind</title>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n\t<meta property=\"og:site_name\" content=\"hexo-theme-freemind\"/>\n\t<meta property=\"og:image\" content=\"undefined\"/>\n\t<link href=\"favicon.png\" rel=\"icon\">\n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/themes/bootstrap.css\" media=\"screen\" type=\"text/css\">  \n\t<link rel=\"stylesheet\" href=\"/hexo-theme-freemind/css/style.css\" media=\"screen\" type=\"text/css\">  \n\t<script src=\"/hexo-theme-freemind/js/jquery-2.0.3.min.js\"></script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n  </head>\n\n  <body>\n\t<!-- hexo-inject:begin --><!-- hexo-inject:end --><nav id=\"main-nav\" class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n\t  <div class=\"container\">\n\t\t<button type=\"button\" class=\"navbar-header navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n\t\t  <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n\t\t</button>\n\t\t<a class=\"navbar-brand\" href=\"/hexo-theme-freemind/\">Freemind</a>\n\t\t<div class=\"collapse navbar-collapse nav-menu\">\n\t\t  <ul class=\"nav navbar-nav\">\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/archives\" title=\"All the articles.\">\n\t\t\t\t<i class=\"fa fa-archive\"></i>Archives\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/categories\" title=\"All the categories.\">\n\t\t\t\t<i class=\"fa fa-folder\"></i>Categories\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/tags\" title=\"All the tags.\">\n\t\t\t\t<i class=\"fa fa-tags\"></i>Tags\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t\t<li>\n\t\t\t  <a href=\"/hexo-theme-freemind/about\" title=\"About me.\">\n\t\t\t\t<i class=\"fa fa-user\"></i>About\n\t\t\t  </a>\n\t\t\t</li>\n\t\t\t\n\t\t  </ul>\n\t\t</div>\n\t  </div>\n\t</nav>\n\n\t<div class=\"clearfix\"></div>\n\n    <div class=\"container\">\n  \t  <div class=\"content\">\n    \t<div class=\"page-header\">\t\t\n\t\t  <h1>OMG, failed to find this article! </h1>\n\t\t</div>\n\t\t\n\t\t<div class=\"row-fluid page\">\n\t\t  <div style=\"text-align: center\">\n\t\t\t<div class=\"spell-img\">\n\t\t\t  <img src=\"/hexo-theme-freemind/images/404.png\"></img>\n\t\t\t</div>\n\t\t\t<input type=\"text\" id=\"local-search-input\" name=\"q\" results=\"0\" placeholder=\"Don't worry, search articles here!\" class=\"st-search-input st-default-search-input form-control\" style=\"margin-bottom:1em\"/>\n\t\t  </div>\n\t\t  <div id=\"local-search-result\"></div>\n\t\t</div>\n\t  </div>\n    </div> <!-- container -->\t\n\n\t<div class=\"container-narrow\">\n\t  <footer> <p>\n\t\t  &copy; 2014 Joseph Pan\n\t\t  \n\t\t  with help from <a href=\"http://zespia.tw/hexo/\" target=\"_blank\">Hexo</a> and <a href=\"http://getbootstrap.com/\" target=\"_blank\">Twitter Bootstrap</a>. Theme by <a href=\"http://github.com/wzpan/hexo-theme-freemind/\">Freemind</a>.\t\t  \n\t  </p> </footer>\n\t</div> <!-- container-narrow -->\n\n\t<script src=\"/hexo-theme-freemind/js/bootstrap.min.js\"></script>\n\t<script src=\"/hexo-theme-freemind/js/search.js\"></script> \n\t<script type=\"text/javascript\">      \n     var path = \"/hexo-theme-freemind/search.xml\";\n     searchFunc(path, 'local-search-input', 'local-search-result');\n   </script><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n  </body>\t\n</html>\n\n"},{"title":"Categories","layout":"categories","_content":"","source":"categories/index.html","raw":"title: Categories\nlayout: categories\n---\n","date":"2019-05-29T04:26:45.063Z","updated":"2017-02-14T05:42:21.000Z","path":"categories/index.html","comments":1,"_id":"ckb0g1ekx0001bnav59nj02an","content":"","excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.html","raw":"title: Tags\nlayout: tags\n---\n","date":"2019-05-29T04:26:45.061Z","updated":"2017-02-14T05:42:21.000Z","path":"tags/index.html","comments":1,"_id":"ckb0g1el50003bnav9rgbfesx","content":"","excerpt":"","more":""},{"title":"About","layout":"page","_content":"\n\n北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。\n","source":"about/index.html","raw":"title: About\nlayout: page\n---\n\n\n北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。\n","date":"2019-05-29T04:26:45.029Z","updated":"2017-02-14T06:18:09.000Z","path":"about/index.html","comments":1,"_id":"ckb0g1enu0065bnavp0gnaob3","content":"\n\n&#x5317;&#x51A5;&#x6709;&#x9C7C;&#xFF0C;&#x5176;&#x540D;&#x4E3A;&#x9CB2;&#x3002;&#x9CB2;&#x4E4B;&#x5927;&#xFF0C;&#x4E0D;&#x77E5;&#x5176;&#x51E0;&#x5343;&#x91CC;&#x4E5F;&#xFF1B;&#x5316;&#x800C;&#x4E3A;&#x9E1F;&#xFF0C;&#x5176;&#x540D;&#x4E3A;&#x9E4F;&#x3002;&#x9E4F;&#x4E4B;&#x80CC;&#xFF0C;&#x4E0D;&#x77E5;&#x5176;&#x51E0;&#x5343;&#x91CC;&#x4E5F;&#xFF1B;&#x6012;&#x800C;&#x98DE;&#xFF0C;&#x5176;&#x7FFC;&#x82E5;&#x5782;&#x5929;&#x4E4B;&#x4E91;&#x3002;\n","excerpt":"","more":"\n\n北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。\n"},{"title":"about","date":"2017-02-14T05:28:23.000Z","_content":"\n北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-02-14 13:28:23\n---\n\n北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。\n","updated":"2017-02-14T06:20:29.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckb0g1env0066bnavn4bwkk0f","content":"<p>&#x5317;&#x51A5;&#x6709;&#x9C7C;&#xFF0C;&#x5176;&#x540D;&#x4E3A;&#x9CB2;&#x3002;&#x9CB2;&#x4E4B;&#x5927;&#xFF0C;&#x4E0D;&#x77E5;&#x5176;&#x51E0;&#x5343;&#x91CC;&#x4E5F;&#xFF1B;&#x5316;&#x800C;&#x4E3A;&#x9E1F;&#xFF0C;&#x5176;&#x540D;&#x4E3A;&#x9E4F;&#x3002;&#x9E4F;&#x4E4B;&#x80CC;&#xFF0C;&#x4E0D;&#x77E5;&#x5176;&#x51E0;&#x5343;&#x91CC;&#x4E5F;&#xFF1B;&#x6012;&#x800C;&#x98DE;&#xFF0C;&#x5176;&#x7FFC;&#x82E5;&#x5782;&#x5929;&#x4E4B;&#x4E91;&#x3002;</p>\n","excerpt":"","more":"<p>北冥有鱼，其名为鲲。鲲之大，不知其几千里也；化而为鸟，其名为鹏。鹏之背，不知其几千里也；怒而飞，其翼若垂天之云。</p>\n"}],"Post":[{"title":"3_2UVa1586","date":"2016-12-20T16:11:06.000Z","toc":true,"_content":"# Molar Mass ACM/ICPC sroul 2007, UVa1586\n```\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\n#include <ctype.h>\n\n/* \n * ===  FUNCTION  ======================================================================\n *         Name:  main\n *  Description:  \n * =====================================================================================\n */\n\n/* \n * ===  FUNCTION  ======================================================================\n *         Name:  get_g\n *  Description:  \n * =====================================================================================\n */\nfloat get_g ( char a )\n{\n    switch(a){\n        case 'C':\n            return 12.01;\n            break;\n        case 'H':\n            return 1.008;\n            break;\n        case 'O':\n            return 16.00;\n            break;\n        case 'N':\n            return 14.01;\n            break;\n        default:\n            return -1.0;\n    }\n}\t\t\nint main ( int argc, char *argv[] ) {\n    char buf[101]={}; \n    int flag = 0;\n    float sum = 0.0;\n    int i = 0 ;\n    int j = 0;\n    int count = 0;\n\n    while( (scanf(\"%s\", buf)!=EOF) ){\n        flag = 0;\n        for (i = 0; buf[i]!='\\0'; i++) {\n            count = 0;\n            for( j=i+1;isdigit(buf[j])&&buf[j];j++ ){\n                count = count * 10 + (buf[j]-'0');\n            }\n            if (count==0) {\n                count=1;\n            }\n            if (buf[i]!='C'\n                    && buf[i]!='N'\n                    && buf[i]!='O'\n                    && buf[i]!='H'\n                    ) {\n                flag = 1;\n            }\n            sum += count * get_g(buf[i]);\n            i=j-1;\n        }\n        if (!flag){\n            printf ( \"sum is %f\\n\",sum );\n        }else{\n//            printf ( \"input error\\n\" );\n        }\n    }\n    return EXIT_SUCCESS;\n}\t\t\t\t/* ----------  end of function main  ---------- */\n```\n","source":"_posts/3-2UVa1586.md","raw":"---\ntitle: 3_2UVa1586\ndate: 2016-12-21 00:11:06\ntags: 竞赛\ncategories: C/C++\ntoc: true\n---\n# Molar Mass ACM/ICPC sroul 2007, UVa1586\n```\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\n#include <ctype.h>\n\n/* \n * ===  FUNCTION  ======================================================================\n *         Name:  main\n *  Description:  \n * =====================================================================================\n */\n\n/* \n * ===  FUNCTION  ======================================================================\n *         Name:  get_g\n *  Description:  \n * =====================================================================================\n */\nfloat get_g ( char a )\n{\n    switch(a){\n        case 'C':\n            return 12.01;\n            break;\n        case 'H':\n            return 1.008;\n            break;\n        case 'O':\n            return 16.00;\n            break;\n        case 'N':\n            return 14.01;\n            break;\n        default:\n            return -1.0;\n    }\n}\t\t\nint main ( int argc, char *argv[] ) {\n    char buf[101]={}; \n    int flag = 0;\n    float sum = 0.0;\n    int i = 0 ;\n    int j = 0;\n    int count = 0;\n\n    while( (scanf(\"%s\", buf)!=EOF) ){\n        flag = 0;\n        for (i = 0; buf[i]!='\\0'; i++) {\n            count = 0;\n            for( j=i+1;isdigit(buf[j])&&buf[j];j++ ){\n                count = count * 10 + (buf[j]-'0');\n            }\n            if (count==0) {\n                count=1;\n            }\n            if (buf[i]!='C'\n                    && buf[i]!='N'\n                    && buf[i]!='O'\n                    && buf[i]!='H'\n                    ) {\n                flag = 1;\n            }\n            sum += count * get_g(buf[i]);\n            i=j-1;\n        }\n        if (!flag){\n            printf ( \"sum is %f\\n\",sum );\n        }else{\n//            printf ( \"input error\\n\" );\n        }\n    }\n    return EXIT_SUCCESS;\n}\t\t\t\t/* ----------  end of function main  ---------- */\n```\n","slug":"3-2UVa1586","published":1,"updated":"2017-02-15T08:07:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ekz0002bnavuj9itnc7","content":"<h1 id=\"Molar-Mass-ACM-ICPC-sroul-2007-UVa1586\"><a href=\"#Molar-Mass-ACM-ICPC-sroul-2007-UVa1586\" class=\"headerlink\" title=\"Molar Mass ACM/ICPC sroul 2007, UVa1586\"></a>Molar Mass ACM/ICPC sroul 2007, UVa1586</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">#include &lt;ctype.h&gt;</div><div class=\"line\"></div><div class=\"line\">/* </div><div class=\"line\"> * ===  FUNCTION  ======================================================================</div><div class=\"line\"> *         Name:  main</div><div class=\"line\"> *  Description:  </div><div class=\"line\"> * =====================================================================================</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">/* </div><div class=\"line\"> * ===  FUNCTION  ======================================================================</div><div class=\"line\"> *         Name:  get_g</div><div class=\"line\"> *  Description:  </div><div class=\"line\"> * =====================================================================================</div><div class=\"line\"> */</div><div class=\"line\">float get_g ( char a )</div><div class=\"line\">{</div><div class=\"line\">    switch(a){</div><div class=\"line\">        case &apos;C&apos;:</div><div class=\"line\">            return 12.01;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;H&apos;:</div><div class=\"line\">            return 1.008;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;O&apos;:</div><div class=\"line\">            return 16.00;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;N&apos;:</div><div class=\"line\">            return 14.01;</div><div class=\"line\">            break;</div><div class=\"line\">        default:</div><div class=\"line\">            return -1.0;</div><div class=\"line\">    }</div><div class=\"line\">}\t\t</div><div class=\"line\">int main ( int argc, char *argv[] ) {</div><div class=\"line\">    char buf[101]={}; </div><div class=\"line\">    int flag = 0;</div><div class=\"line\">    float sum = 0.0;</div><div class=\"line\">    int i = 0 ;</div><div class=\"line\">    int j = 0;</div><div class=\"line\">    int count = 0;</div><div class=\"line\"></div><div class=\"line\">    while( (scanf(&quot;%s&quot;, buf)!=EOF) ){</div><div class=\"line\">        flag = 0;</div><div class=\"line\">        for (i = 0; buf[i]!=&apos;\\0&apos;; i++) {</div><div class=\"line\">            count = 0;</div><div class=\"line\">            for( j=i+1;isdigit(buf[j])&amp;&amp;buf[j];j++ ){</div><div class=\"line\">                count = count * 10 + (buf[j]-&apos;0&apos;);</div><div class=\"line\">            }</div><div class=\"line\">            if (count==0) {</div><div class=\"line\">                count=1;</div><div class=\"line\">            }</div><div class=\"line\">            if (buf[i]!=&apos;C&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;N&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;O&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;H&apos;</div><div class=\"line\">                    ) {</div><div class=\"line\">                flag = 1;</div><div class=\"line\">            }</div><div class=\"line\">            sum += count * get_g(buf[i]);</div><div class=\"line\">            i=j-1;</div><div class=\"line\">        }</div><div class=\"line\">        if (!flag){</div><div class=\"line\">            printf ( &quot;sum is %f\\n&quot;,sum );</div><div class=\"line\">        }else{</div><div class=\"line\">//            printf ( &quot;input error\\n&quot; );</div><div class=\"line\">        }</div><div class=\"line\">    }</div><div class=\"line\">    return EXIT_SUCCESS;</div><div class=\"line\">}\t\t\t\t/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"Molar-Mass-ACM-ICPC-sroul-2007-UVa1586\"><a href=\"#Molar-Mass-ACM-ICPC-sroul-2007-UVa1586\" class=\"headerlink\" title=\"Molar Mass ACM/ICPC sroul 2007, UVa1586\"></a>Molar Mass ACM/ICPC sroul 2007, UVa1586</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">#include &lt;ctype.h&gt;</div><div class=\"line\"></div><div class=\"line\">/* </div><div class=\"line\"> * ===  FUNCTION  ======================================================================</div><div class=\"line\"> *         Name:  main</div><div class=\"line\"> *  Description:  </div><div class=\"line\"> * =====================================================================================</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\">/* </div><div class=\"line\"> * ===  FUNCTION  ======================================================================</div><div class=\"line\"> *         Name:  get_g</div><div class=\"line\"> *  Description:  </div><div class=\"line\"> * =====================================================================================</div><div class=\"line\"> */</div><div class=\"line\">float get_g ( char a )</div><div class=\"line\">&#123;</div><div class=\"line\">    switch(a)&#123;</div><div class=\"line\">        case &apos;C&apos;:</div><div class=\"line\">            return 12.01;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;H&apos;:</div><div class=\"line\">            return 1.008;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;O&apos;:</div><div class=\"line\">            return 16.00;</div><div class=\"line\">            break;</div><div class=\"line\">        case &apos;N&apos;:</div><div class=\"line\">            return 14.01;</div><div class=\"line\">            break;</div><div class=\"line\">        default:</div><div class=\"line\">            return -1.0;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;\t\t</div><div class=\"line\">int main ( int argc, char *argv[] ) &#123;</div><div class=\"line\">    char buf[101]=&#123;&#125;; </div><div class=\"line\">    int flag = 0;</div><div class=\"line\">    float sum = 0.0;</div><div class=\"line\">    int i = 0 ;</div><div class=\"line\">    int j = 0;</div><div class=\"line\">    int count = 0;</div><div class=\"line\"></div><div class=\"line\">    while( (scanf(&quot;%s&quot;, buf)!=EOF) )&#123;</div><div class=\"line\">        flag = 0;</div><div class=\"line\">        for (i = 0; buf[i]!=&apos;\\0&apos;; i++) &#123;</div><div class=\"line\">            count = 0;</div><div class=\"line\">            for( j=i+1;isdigit(buf[j])&amp;&amp;buf[j];j++ )&#123;</div><div class=\"line\">                count = count * 10 + (buf[j]-&apos;0&apos;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (count==0) &#123;</div><div class=\"line\">                count=1;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (buf[i]!=&apos;C&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;N&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;O&apos;</div><div class=\"line\">                    &amp;&amp; buf[i]!=&apos;H&apos;</div><div class=\"line\">                    ) &#123;</div><div class=\"line\">                flag = 1;</div><div class=\"line\">            &#125;</div><div class=\"line\">            sum += count * get_g(buf[i]);</div><div class=\"line\">            i=j-1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!flag)&#123;</div><div class=\"line\">            printf ( &quot;sum is %f\\n&quot;,sum );</div><div class=\"line\">        &#125;else&#123;</div><div class=\"line\">//            printf ( &quot;input error\\n&quot; );</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return EXIT_SUCCESS;</div><div class=\"line\">&#125;\t\t\t\t/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>\n"},{"title":"1-100素数判断pyhon程序","date":"2016-04-21T10:08:04.000Z","toc":true,"_content":"\n\n求取1-100的所有素数，采用函数式编程\n```python\ndef issu(x):\n    result=map(lambda y:x%y,range(2,x))\n    if  len(result)!=0 and 0 not in result:\n        return 1\n    else:\n        return 0\n\n\nprint filter(issu,range(1,101))\n\n```\n答案为\n**[3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]**\n","source":"_posts/1-100素数判断pyhon程序.md","raw":"---\ntitle: 1-100素数判断pyhon程序\ndate: 2016-04-21 18:08:04\ntags: Python\ncategories: Python\ntoc: true\n---\n\n\n求取1-100的所有素数，采用函数式编程\n```python\ndef issu(x):\n    result=map(lambda y:x%y,range(2,x))\n    if  len(result)!=0 and 0 not in result:\n        return 1\n    else:\n        return 0\n\n\nprint filter(issu,range(1,101))\n\n```\n答案为\n**[3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]**\n","slug":"1-100素数判断pyhon程序","published":1,"updated":"2017-02-15T08:07:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1el50004bnavi08qxa5i","content":"<p>&#x6C42;&#x53D6;1-100&#x7684;&#x6240;&#x6709;&#x7D20;&#x6570;&#xFF0C;&#x91C7;&#x7528;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">issu</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    result=map(<span class=\"keyword\">lambda</span> y:x%y,range(<span class=\"number\">2</span>,x))</div><div class=\"line\">    <span class=\"keyword\">if</span>  len(result)!=<span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">0</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> result:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> filter(issu,range(<span class=\"number\">1</span>,<span class=\"number\">101</span>))</div></pre></td></tr></table></figure></p>\n<p>&#x7B54;&#x6848;&#x4E3A;<br><strong>[3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</strong></p>\n","excerpt":"","more":"<p>求取1-100的所有素数，采用函数式编程<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">issu</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    result=map(<span class=\"keyword\">lambda</span> y:x%y,range(<span class=\"number\">2</span>,x))</div><div class=\"line\">    <span class=\"keyword\">if</span>  len(result)!=<span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">0</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> result:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> filter(issu,range(<span class=\"number\">1</span>,<span class=\"number\">101</span>))</div></pre></td></tr></table></figure></p>\n<p>答案为<br><strong>[3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]</strong></p>\n"},{"title":"Deep MNIST for Experts","date":"2017-01-04T15:30:16.000Z","toc":true,"_content":"\n\n```\n\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n\nimport tensorflow as tf\nsess = tf.InteractiveSession()\n\n\n#None 表示这里可能存在很多个样本, 784=28*28表示共有784个像素点\n#y_表示与x对应的label, 由于采用的是one_hot编码的所以是10维\nx = tf.placeholder(tf.float32, shape=[None, 784])\ny_ = tf.placeholder(tf.float32, shape=[None, 10])\n\n\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\n\nsess.run(tf.global_variables_initializer())\n# 假设 有X个样本，那么 (X*784) * (784*10) = (X*10) \ny = tf.matmul(x,W) + b\n\n\ncross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))\n\n```\n","source":"_posts/Deep-MNIST-for-Experts.md","raw":"---\ntitle: Deep MNIST for Experts\ndate: 2017-01-04 23:30:16\ntags: tensorflow\ncategories: tensorflow\ntoc: true\n---\n\n\n```\n\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n\nimport tensorflow as tf\nsess = tf.InteractiveSession()\n\n\n#None 表示这里可能存在很多个样本, 784=28*28表示共有784个像素点\n#y_表示与x对应的label, 由于采用的是one_hot编码的所以是10维\nx = tf.placeholder(tf.float32, shape=[None, 784])\ny_ = tf.placeholder(tf.float32, shape=[None, 10])\n\n\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\n\nsess.run(tf.global_variables_initializer())\n# 假设 有X个样本，那么 (X*784) * (784*10) = (X*10) \ny = tf.matmul(x,W) + b\n\n\ncross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))\n\n```\n","slug":"Deep-MNIST-for-Experts","published":1,"updated":"2017-02-15T08:07:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1el90007bnav5pab3ocv","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">from tensorflow.examples.tutorials.mnist import input_data</div><div class=\"line\">mnist = input_data.read_data_sets(&apos;MNIST_data&apos;, one_hot=True)</div><div class=\"line\"></div><div class=\"line\">import tensorflow as tf</div><div class=\"line\">sess = tf.InteractiveSession()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">#None &#x8868;&#x793A;&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5F88;&#x591A;&#x4E2A;&#x6837;&#x672C;, 784=28*28&#x8868;&#x793A;&#x5171;&#x6709;784&#x4E2A;&#x50CF;&#x7D20;&#x70B9;</div><div class=\"line\">#y_&#x8868;&#x793A;&#x4E0E;x&#x5BF9;&#x5E94;&#x7684;label, &#x7531;&#x4E8E;&#x91C7;&#x7528;&#x7684;&#x662F;one_hot&#x7F16;&#x7801;&#x7684;&#x6240;&#x4EE5;&#x662F;10&#x7EF4;</div><div class=\"line\">x = tf.placeholder(tf.float32, shape=[None, 784])</div><div class=\"line\">y_ = tf.placeholder(tf.float32, shape=[None, 10])</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">W = tf.Variable(tf.zeros([784,10]))</div><div class=\"line\">b = tf.Variable(tf.zeros([10]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">sess.run(tf.global_variables_initializer())</div><div class=\"line\"># &#x5047;&#x8BBE; &#x6709;X&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x90A3;&#x4E48; (X*784) * (784*10) = (X*10) </div><div class=\"line\">y = tf.matmul(x,W) + b</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">from tensorflow.examples.tutorials.mnist import input_data</div><div class=\"line\">mnist = input_data.read_data_sets(&apos;MNIST_data&apos;, one_hot=True)</div><div class=\"line\"></div><div class=\"line\">import tensorflow as tf</div><div class=\"line\">sess = tf.InteractiveSession()</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">#None 表示这里可能存在很多个样本, 784=28*28表示共有784个像素点</div><div class=\"line\">#y_表示与x对应的label, 由于采用的是one_hot编码的所以是10维</div><div class=\"line\">x = tf.placeholder(tf.float32, shape=[None, 784])</div><div class=\"line\">y_ = tf.placeholder(tf.float32, shape=[None, 10])</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">W = tf.Variable(tf.zeros([784,10]))</div><div class=\"line\">b = tf.Variable(tf.zeros([10]))</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">sess.run(tf.global_variables_initializer())</div><div class=\"line\"># 假设 有X个样本，那么 (X*784) * (784*10) = (X*10) </div><div class=\"line\">y = tf.matmul(x,W) + b</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(y, y_))</div></pre></td></tr></table></figure>\n"},{"title":"EchoServer服务器","date":"2017-02-15T04:03:06.000Z","toc":true,"_content":"\n# EchoServer服务器设计\n## 提纲\n\n-   最简单的EchoServer\n-   采用兼容API的EchoServer\n-   并发服务器设计之多进程模型\n-   并发服务器设计之多线程模型\n-   并发服务器设计之IO多路复用模型\n\n## 最简单的EchoServer\n### socket \n```\n#include <sys/socket.h>\nint socket(int domain, int type, int protocol);\nReturns file descriptor on success, or –1 on error\n```\n\ndomain 可以是AF_UNIX、AF_INET、AF_INET6中的一种，分别表示通过内核、IPV4连接的主机、IPV6连接的主机进行通讯，Unix域(AF_INET)只能在相同的主机上进行通讯。上面各种域对这样不同的地址结构。\ntype 可以是SOCK_STREAM、SOCK_DGRAM或者SOCK_RAW中的一种。\n\n### bind\n\n```\n#include <sys/socket.h>\nint bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\nReturns 0 on success, or –1 on error\n```\nsockfd是通过socket调用创建的socket文件描述符， struct sockaddr 是通用地址结构，因为socket()中创建的域类型可能有不同的种类，这里需要能够接受不同的地址类型比如(sockaddr_un,sockaddr_in,sockaddr_in6)。\n\n\n### listen\n流式的SOCKET分为主动被动两种，简单来讲connect操作的SOCKET成为主动的大家，而通过listen操作的SOCKET可以被动的接入。\n```\nnclude <sys/socket.h>\nint listen(int sockfd, int backlog);\nReturns 0 on success, or –1 on error\n```\nbacklog 的主要作用是控制内核记录未决连接的数量。**未决连接**是客户端已经发生connect操作，但是服务端因为忙于其他处理而尚未accept操作。\n\n### accept\n```\n#include <sys/socket.h>\nint accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);\nReturns file descriptor on success, or –1 on error\n```\n\naccept系统调用会接受一个接入连接，如果在调用accept()时候不存在未决连接，那么则该调用会阻塞到有连接请求为止。\n\n\n### 最简单EchoServer服务器的示例代码 \n\n```\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <stdio.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <sys/shm.h>\n\n#define MYPORT  8887\n#define QUEUE   20\n#define BUFFER_SIZE 1024\n\nint main()\n{\n    ///定义sockfd\n    int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);\n    ///定义sockaddr_in\n    struct sockaddr_in server_sockaddr;\n    server_sockaddr.sin_family = AF_INET;\n    server_sockaddr.sin_port = htons(MYPORT);\n    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    ///bind，成功返回0，出错返回-1\n    if(bind(server_sockfd,(struct sockaddr *)&server_sockaddr,sizeof(server_sockaddr))==-1)\n    {\n        perror(\"bind\");\n        exit(1);\n    }\n    ///listen，成功返回0，出错返回-1\n    if(listen(server_sockfd,QUEUE) == -1)\n    {\n        perror(\"listen\");\n        exit(1);\n    }\n    ///客户端套接字\n    char buffer[BUFFER_SIZE];\n    struct sockaddr_in client_addr;\n    socklen_t length = sizeof(client_addr);\n    ///成功返回非负描述字，出错返回-1\n    int conn = accept(server_sockfd, (struct sockaddr*)&client_addr, &length);\n    if(conn<0)\n    {\n        perror(\"connect\");\n        exit(1);\n    }\n    while(1)\n    {\n        memset(buffer,0,sizeof(buffer));\n        int len = recv(conn, buffer, sizeof(buffer),0);\n        if(strcmp(buffer,\"exit\\n\")==0)\n            break;\n        fputs(buffer, stdout);\n        send(conn, buffer, len, 0);\n    }\n    close(conn);\n    close(server_sockfd);\n    return 0;\n}\n```\n\n## 稍微复杂一点的EchoServer\n\n网上大部分的网络编程服务器教程或者文章给出的最简单的示例，基本上都和上面的代码差不多。上面的代码可以进一步完善。这些改进主要是采用名称来替代IP地址和端口号。（下面的代码，来自于《Linux/Unix系统编程手册》）。\n```\n#define _BSD_SOURCE             /* To get definitions of NI_MAXHOST and NI_MAXSERV from <netdb.h> */\n#include <netdb.h>\n#include \"is_seqnum.h\"\n#define BACKLOG 50\nint main(int argc, char *argv[])\n{\n    uint32_t seqNum;\n    char reqLenStr[INT_LEN];            /* Length of requested sequence */\n    char seqNumStr[INT_LEN];            /* Start of granted sequence */\n    struct sockaddr_storage claddr;\n    int lfd, cfd, optval, reqLen;\n    socklen_t addrlen;\n    struct addrinfo hints;\n    struct addrinfo *result, *rp;\n#define ADDRSTRLEN (NI_MAXHOST + NI_MAXSERV + 10)\n    char addrStr[ADDRSTRLEN];\n    char host[NI_MAXHOST];\n    char service[NI_MAXSERV];\n\n    if (argc > 1 && strcmp(argv[1], \"--help\") == 0)\n        usageErr(\"%s [init-seq-num]\\n\", argv[0]);\n\n    seqNum = (argc > 1) ? getInt(argv[1], 0, \"init-seq-num\") : 0;\n\n    /* Ignore the SIGPIPE signal, so that we find out about broken connection errors via a failure from write(). */\n\n    if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)    errExit(\"signal\");\n\n    /* Call getaddrinfo() to obtain a list of addresses that we can try binding to */\n\n    memset(&hints, 0, sizeof(struct addrinfo));\n    hints.ai_canonname = NULL;\n    hints.ai_addr = NULL;\n    hints.ai_next = NULL;\n    hints.ai_socktype = SOCK_STREAM;\n    hints.ai_family = AF_UNSPEC;        /* Allows IPv4 or IPv6 */\n    // 这里指定了AI_PASSIVE 创建的socket会被绑定在通配地址上, 结果就是当服务程序运行在多宿主机的情况下\n    // ，服务器可以处理发送到任意一个网络地址的请求。\n    hints.ai_flags = AI_PASSIVE | AI_NUMERICSERV;\n                        /* Wildcard IP address; service name is numeric */\n\n    if (getaddrinfo(NULL, PORT_NUM, &hints, &result) != 0)\n        errExit(\"getaddrinfo\");\n\n    /* Walk through returned list until we find an address structure\n       that can be used to successfully create and bind a socket */\n\n    optval = 1;\n    for (rp = result; rp != NULL; rp = rp->ai_next) {\n        lfd = socket(rp->ai_family, rp->ai_socktype, rp->ai_protocol);\n        if (lfd == -1)\n            continue;                   /* On error, try next address */\n\n        if (setsockopt(lfd, SOL_SOCKET, SO_REUSEADDR, &optval, sizeof(optval))\n                == -1)\n             errExit(\"setsockopt\");\n\n        if (bind(lfd, rp->ai_addr, rp->ai_addrlen) == 0)\n            break;                      /* Success */\n\n        /* bind() failed: close this socket and try next address */\n        close(lfd);\n    }\n\n    if (rp == NULL)\n        fatal(\"Could not bind socket to any address\");\n\n    if (listen(lfd, BACKLOG) == -1)\n        errExit(\"listen\");\n\n    /* freeaddrinfo的作用是释放getaddrinfo为result动态分配的内存 */\n    freeaddrinfo(result);\n\n    for (;;) {                  /* Handle clients iteratively */\n\n        /* Accept a client connection, obtaining client's address */\n\n        addrlen = sizeof(struct sockaddr_storage);\n        cfd = accept(lfd, (struct sockaddr *) &claddr, &addrlen);\n        if (cfd == -1) {\n            errMsg(\"accept\");\n            continue;\n        }\n\n        if (getnameinfo((struct sockaddr *) &claddr, addrlen,\n                    host, NI_MAXHOST, service, NI_MAXSERV, 0) == 0)\n            snprintf(addrStr, ADDRSTRLEN, \"(%s, %s)\", host, service);\n        else\n            snprintf(addrStr, ADDRSTRLEN, \"(?UNKNOWN?)\");\n        printf(\"Connection from %s\\n\", addrStr);\n\n        /* Read client request, send sequence number back */\n\n        if (readLine(cfd, reqLenStr, INT_LEN) <= 0) {\n            close(cfd);\n            continue;                   /* Failed read; skip request */\n        }\n\n        reqLen = atoi(reqLenStr);\n        if (reqLen <= 0) {              /* Watch for misbehaving clients */\n            close(cfd);\n            continue;                   /* Bad request; skip it */\n        }\n\n        snprintf(seqNumStr, INT_LEN, \"%d\\n\", seqNum);\n        if (write(cfd, seqNumStr, strlen(seqNumStr)) != strlen(seqNumStr))\n            fprintf(stderr, \"Error on write\");\n\n        seqNum += reqLen;               /* Update sequence number */\n\n        if (close(cfd) == -1)           /* Close connection */\n            errMsg(\"close\");\n    }\n}\n```\n\n### getaddrinfo系统调用解析\n\n```\n#include <sys/socket.h>\n#include <netdb.h>\nint getaddrinfo(const char *host, const char *service,\nconst struct addrinfo *hints, struct addrinfo **result);\nReturns 0 on success, or nonzero on error\n```\n-   host可以是主机名称或者字符串形式的IP地址\n-   service可以是服务名称或者端口号\n-   hints参数规定了result参数返回的socket地址的标准。\n-   result参数是getaddrinfo自动分配的addrinfo链表。\n\n```\n    struct addrinfo {\n    int ai_flags; /* Input flags (AI_* constants) */\n    int ai_family; /* Address family */\n    int ai_socktype; /* Type: SOCK_STREAM, SOCK_DGRAM */\n    int ai_protocol; /* Socket protocol */\n    size_t ai_addrlen; /* Size of structure pointed to by ai_addr */\n    char *ai_canonname; /* Canonical name of host */\n    struct sockaddr *ai_addr; /* Pointer to socket address structure */\n    struct addrinfo *ai_next; /* Next structure in linked list */\n    };\n```\n\nhints参数只能设置 ai_flags，ai_family, ai_socktype, ai_protocol四个字段。hints.ai_family可以指定AF_INET或者AF_INET6, 或者设置为AF_UNSPEC. hints.ai_socktype指定socket类型，可以为SOCK_STREAM或者SOCK_DGRAM，如果设置为0则表示可以接受任何类型的socket. hints.ai_flags控制getaddrinfo的行为。AI_PASSIVE表示返回被动方式的地址结构。此时host设置为NULL，通过result返回的socket地址结构将会包含通配IP地址（即INADDR_DAY或者IN6ADDR_ANY_INIT）。如果没有设置AI_PASSIVE则返回的地址结构将会将可以被用为connect() 和sendto()。\n\nSO_REUSEADDR 是TCP服务器一般情况下都要设置这个选项。这里仅仅关注其最简单的一种用途：避免当服务器重启的时候，尝试将套接字关联在当前TCP节点相关联的端口上的时候出现EADDRRINUSE（地址已使用）的错误。\n\n\n\n\n\n\n\n##  并发服务器设计之多进程模型\n```\n\n```\n##  并发服务器设计之多线程模型\n```\n\n```\n##  并发服务器设计之其他模型(异步IO/协程模型)\n```\n\n```\n##  其他\n```\n\n```\n","source":"_posts/EchoServer服务器.md","raw":"---\ntitle: EchoServer服务器\ndate: 2017-02-15 12:03:06\ntags: Socket\ncategories: C/C++\ntoc: true\n---\n\n# EchoServer服务器设计\n## 提纲\n\n-   最简单的EchoServer\n-   采用兼容API的EchoServer\n-   并发服务器设计之多进程模型\n-   并发服务器设计之多线程模型\n-   并发服务器设计之IO多路复用模型\n\n## 最简单的EchoServer\n### socket \n```\n#include <sys/socket.h>\nint socket(int domain, int type, int protocol);\nReturns file descriptor on success, or –1 on error\n```\n\ndomain 可以是AF_UNIX、AF_INET、AF_INET6中的一种，分别表示通过内核、IPV4连接的主机、IPV6连接的主机进行通讯，Unix域(AF_INET)只能在相同的主机上进行通讯。上面各种域对这样不同的地址结构。\ntype 可以是SOCK_STREAM、SOCK_DGRAM或者SOCK_RAW中的一种。\n\n### bind\n\n```\n#include <sys/socket.h>\nint bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\nReturns 0 on success, or –1 on error\n```\nsockfd是通过socket调用创建的socket文件描述符， struct sockaddr 是通用地址结构，因为socket()中创建的域类型可能有不同的种类，这里需要能够接受不同的地址类型比如(sockaddr_un,sockaddr_in,sockaddr_in6)。\n\n\n### listen\n流式的SOCKET分为主动被动两种，简单来讲connect操作的SOCKET成为主动的大家，而通过listen操作的SOCKET可以被动的接入。\n```\nnclude <sys/socket.h>\nint listen(int sockfd, int backlog);\nReturns 0 on success, or –1 on error\n```\nbacklog 的主要作用是控制内核记录未决连接的数量。**未决连接**是客户端已经发生connect操作，但是服务端因为忙于其他处理而尚未accept操作。\n\n### accept\n```\n#include <sys/socket.h>\nint accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);\nReturns file descriptor on success, or –1 on error\n```\n\naccept系统调用会接受一个接入连接，如果在调用accept()时候不存在未决连接，那么则该调用会阻塞到有连接请求为止。\n\n\n### 最简单EchoServer服务器的示例代码 \n\n```\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <stdio.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <sys/shm.h>\n\n#define MYPORT  8887\n#define QUEUE   20\n#define BUFFER_SIZE 1024\n\nint main()\n{\n    ///定义sockfd\n    int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);\n    ///定义sockaddr_in\n    struct sockaddr_in server_sockaddr;\n    server_sockaddr.sin_family = AF_INET;\n    server_sockaddr.sin_port = htons(MYPORT);\n    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    ///bind，成功返回0，出错返回-1\n    if(bind(server_sockfd,(struct sockaddr *)&server_sockaddr,sizeof(server_sockaddr))==-1)\n    {\n        perror(\"bind\");\n        exit(1);\n    }\n    ///listen，成功返回0，出错返回-1\n    if(listen(server_sockfd,QUEUE) == -1)\n    {\n        perror(\"listen\");\n        exit(1);\n    }\n    ///客户端套接字\n    char buffer[BUFFER_SIZE];\n    struct sockaddr_in client_addr;\n    socklen_t length = sizeof(client_addr);\n    ///成功返回非负描述字，出错返回-1\n    int conn = accept(server_sockfd, (struct sockaddr*)&client_addr, &length);\n    if(conn<0)\n    {\n        perror(\"connect\");\n        exit(1);\n    }\n    while(1)\n    {\n        memset(buffer,0,sizeof(buffer));\n        int len = recv(conn, buffer, sizeof(buffer),0);\n        if(strcmp(buffer,\"exit\\n\")==0)\n            break;\n        fputs(buffer, stdout);\n        send(conn, buffer, len, 0);\n    }\n    close(conn);\n    close(server_sockfd);\n    return 0;\n}\n```\n\n## 稍微复杂一点的EchoServer\n\n网上大部分的网络编程服务器教程或者文章给出的最简单的示例，基本上都和上面的代码差不多。上面的代码可以进一步完善。这些改进主要是采用名称来替代IP地址和端口号。（下面的代码，来自于《Linux/Unix系统编程手册》）。\n```\n#define _BSD_SOURCE             /* To get definitions of NI_MAXHOST and NI_MAXSERV from <netdb.h> */\n#include <netdb.h>\n#include \"is_seqnum.h\"\n#define BACKLOG 50\nint main(int argc, char *argv[])\n{\n    uint32_t seqNum;\n    char reqLenStr[INT_LEN];            /* Length of requested sequence */\n    char seqNumStr[INT_LEN];            /* Start of granted sequence */\n    struct sockaddr_storage claddr;\n    int lfd, cfd, optval, reqLen;\n    socklen_t addrlen;\n    struct addrinfo hints;\n    struct addrinfo *result, *rp;\n#define ADDRSTRLEN (NI_MAXHOST + NI_MAXSERV + 10)\n    char addrStr[ADDRSTRLEN];\n    char host[NI_MAXHOST];\n    char service[NI_MAXSERV];\n\n    if (argc > 1 && strcmp(argv[1], \"--help\") == 0)\n        usageErr(\"%s [init-seq-num]\\n\", argv[0]);\n\n    seqNum = (argc > 1) ? getInt(argv[1], 0, \"init-seq-num\") : 0;\n\n    /* Ignore the SIGPIPE signal, so that we find out about broken connection errors via a failure from write(). */\n\n    if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)    errExit(\"signal\");\n\n    /* Call getaddrinfo() to obtain a list of addresses that we can try binding to */\n\n    memset(&hints, 0, sizeof(struct addrinfo));\n    hints.ai_canonname = NULL;\n    hints.ai_addr = NULL;\n    hints.ai_next = NULL;\n    hints.ai_socktype = SOCK_STREAM;\n    hints.ai_family = AF_UNSPEC;        /* Allows IPv4 or IPv6 */\n    // 这里指定了AI_PASSIVE 创建的socket会被绑定在通配地址上, 结果就是当服务程序运行在多宿主机的情况下\n    // ，服务器可以处理发送到任意一个网络地址的请求。\n    hints.ai_flags = AI_PASSIVE | AI_NUMERICSERV;\n                        /* Wildcard IP address; service name is numeric */\n\n    if (getaddrinfo(NULL, PORT_NUM, &hints, &result) != 0)\n        errExit(\"getaddrinfo\");\n\n    /* Walk through returned list until we find an address structure\n       that can be used to successfully create and bind a socket */\n\n    optval = 1;\n    for (rp = result; rp != NULL; rp = rp->ai_next) {\n        lfd = socket(rp->ai_family, rp->ai_socktype, rp->ai_protocol);\n        if (lfd == -1)\n            continue;                   /* On error, try next address */\n\n        if (setsockopt(lfd, SOL_SOCKET, SO_REUSEADDR, &optval, sizeof(optval))\n                == -1)\n             errExit(\"setsockopt\");\n\n        if (bind(lfd, rp->ai_addr, rp->ai_addrlen) == 0)\n            break;                      /* Success */\n\n        /* bind() failed: close this socket and try next address */\n        close(lfd);\n    }\n\n    if (rp == NULL)\n        fatal(\"Could not bind socket to any address\");\n\n    if (listen(lfd, BACKLOG) == -1)\n        errExit(\"listen\");\n\n    /* freeaddrinfo的作用是释放getaddrinfo为result动态分配的内存 */\n    freeaddrinfo(result);\n\n    for (;;) {                  /* Handle clients iteratively */\n\n        /* Accept a client connection, obtaining client's address */\n\n        addrlen = sizeof(struct sockaddr_storage);\n        cfd = accept(lfd, (struct sockaddr *) &claddr, &addrlen);\n        if (cfd == -1) {\n            errMsg(\"accept\");\n            continue;\n        }\n\n        if (getnameinfo((struct sockaddr *) &claddr, addrlen,\n                    host, NI_MAXHOST, service, NI_MAXSERV, 0) == 0)\n            snprintf(addrStr, ADDRSTRLEN, \"(%s, %s)\", host, service);\n        else\n            snprintf(addrStr, ADDRSTRLEN, \"(?UNKNOWN?)\");\n        printf(\"Connection from %s\\n\", addrStr);\n\n        /* Read client request, send sequence number back */\n\n        if (readLine(cfd, reqLenStr, INT_LEN) <= 0) {\n            close(cfd);\n            continue;                   /* Failed read; skip request */\n        }\n\n        reqLen = atoi(reqLenStr);\n        if (reqLen <= 0) {              /* Watch for misbehaving clients */\n            close(cfd);\n            continue;                   /* Bad request; skip it */\n        }\n\n        snprintf(seqNumStr, INT_LEN, \"%d\\n\", seqNum);\n        if (write(cfd, seqNumStr, strlen(seqNumStr)) != strlen(seqNumStr))\n            fprintf(stderr, \"Error on write\");\n\n        seqNum += reqLen;               /* Update sequence number */\n\n        if (close(cfd) == -1)           /* Close connection */\n            errMsg(\"close\");\n    }\n}\n```\n\n### getaddrinfo系统调用解析\n\n```\n#include <sys/socket.h>\n#include <netdb.h>\nint getaddrinfo(const char *host, const char *service,\nconst struct addrinfo *hints, struct addrinfo **result);\nReturns 0 on success, or nonzero on error\n```\n-   host可以是主机名称或者字符串形式的IP地址\n-   service可以是服务名称或者端口号\n-   hints参数规定了result参数返回的socket地址的标准。\n-   result参数是getaddrinfo自动分配的addrinfo链表。\n\n```\n    struct addrinfo {\n    int ai_flags; /* Input flags (AI_* constants) */\n    int ai_family; /* Address family */\n    int ai_socktype; /* Type: SOCK_STREAM, SOCK_DGRAM */\n    int ai_protocol; /* Socket protocol */\n    size_t ai_addrlen; /* Size of structure pointed to by ai_addr */\n    char *ai_canonname; /* Canonical name of host */\n    struct sockaddr *ai_addr; /* Pointer to socket address structure */\n    struct addrinfo *ai_next; /* Next structure in linked list */\n    };\n```\n\nhints参数只能设置 ai_flags，ai_family, ai_socktype, ai_protocol四个字段。hints.ai_family可以指定AF_INET或者AF_INET6, 或者设置为AF_UNSPEC. hints.ai_socktype指定socket类型，可以为SOCK_STREAM或者SOCK_DGRAM，如果设置为0则表示可以接受任何类型的socket. hints.ai_flags控制getaddrinfo的行为。AI_PASSIVE表示返回被动方式的地址结构。此时host设置为NULL，通过result返回的socket地址结构将会包含通配IP地址（即INADDR_DAY或者IN6ADDR_ANY_INIT）。如果没有设置AI_PASSIVE则返回的地址结构将会将可以被用为connect() 和sendto()。\n\nSO_REUSEADDR 是TCP服务器一般情况下都要设置这个选项。这里仅仅关注其最简单的一种用途：避免当服务器重启的时候，尝试将套接字关联在当前TCP节点相关联的端口上的时候出现EADDRRINUSE（地址已使用）的错误。\n\n\n\n\n\n\n\n##  并发服务器设计之多进程模型\n```\n\n```\n##  并发服务器设计之多线程模型\n```\n\n```\n##  并发服务器设计之其他模型(异步IO/协程模型)\n```\n\n```\n##  其他\n```\n\n```\n","slug":"EchoServer服务器","published":1,"updated":"2017-03-24T09:15:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ela0008bnav95dqpq7x","content":"<h1 id=\"EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;\"><a href=\"#EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;\" class=\"headerlink\" title=\"EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;\"></a>EchoServer&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;</h1><h2 id=\"&#x63D0;&#x7EB2;\"><a href=\"#&#x63D0;&#x7EB2;\" class=\"headerlink\" title=\"&#x63D0;&#x7EB2;\"></a>&#x63D0;&#x7EB2;</h2><ul>\n<li>&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer</li>\n<li>&#x91C7;&#x7528;&#x517C;&#x5BB9;API&#x7684;EchoServer</li>\n<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;</li>\n<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;</li>\n<li>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;IO&#x591A;&#x8DEF;&#x590D;&#x7528;&#x6A21;&#x578B;</li>\n</ul>\n<h2 id=\"&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer\"><a href=\"#&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer\" class=\"headerlink\" title=\"&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer\"></a>&#x6700;&#x7B80;&#x5355;&#x7684;EchoServer</h2><h3 id=\"socket\"><a href=\"#socket\" class=\"headerlink\" title=\"socket\"></a>socket</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int socket(int domain, int type, int protocol);</div><div class=\"line\">Returns file descriptor on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>\n<p>domain &#x53EF;&#x4EE5;&#x662F;AF_UNIX&#x3001;AF_INET&#x3001;AF_INET6&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x901A;&#x8FC7;&#x5185;&#x6838;&#x3001;IPV4&#x8FDE;&#x63A5;&#x7684;&#x4E3B;&#x673A;&#x3001;IPV6&#x8FDE;&#x63A5;&#x7684;&#x4E3B;&#x673A;&#x8FDB;&#x884C;&#x901A;&#x8BAF;&#xFF0C;Unix&#x57DF;(AF_INET)&#x53EA;&#x80FD;&#x5728;&#x76F8;&#x540C;&#x7684;&#x4E3B;&#x673A;&#x4E0A;&#x8FDB;&#x884C;&#x901A;&#x8BAF;&#x3002;&#x4E0A;&#x9762;&#x5404;&#x79CD;&#x57DF;&#x5BF9;&#x8FD9;&#x6837;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x3002;<br>type &#x53EF;&#x4EE5;&#x662F;SOCK_STREAM&#x3001;SOCK_DGRAM&#x6216;&#x8005;SOCK_RAW&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x3002;</p>\n<h3 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind\"></a>bind</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);</div><div class=\"line\">Returns 0 on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>\n<p>sockfd&#x662F;&#x901A;&#x8FC7;socket&#x8C03;&#x7528;&#x521B;&#x5EFA;&#x7684;socket&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C; struct sockaddr &#x662F;&#x901A;&#x7528;&#x5730;&#x5740;&#x7ED3;&#x6784;&#xFF0C;&#x56E0;&#x4E3A;socket()&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#x57DF;&#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x79CD;&#x7C7B;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x80FD;&#x591F;&#x63A5;&#x53D7;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x5740;&#x7C7B;&#x578B;&#x6BD4;&#x5982;(sockaddr_un,sockaddr_in,sockaddr_in6)&#x3002;</p>\n<h3 id=\"listen\"><a href=\"#listen\" class=\"headerlink\" title=\"listen\"></a>listen</h3><p>&#x6D41;&#x5F0F;&#x7684;SOCKET&#x5206;&#x4E3A;&#x4E3B;&#x52A8;&#x88AB;&#x52A8;&#x4E24;&#x79CD;&#xFF0C;&#x7B80;&#x5355;&#x6765;&#x8BB2;connect&#x64CD;&#x4F5C;&#x7684;SOCKET&#x6210;&#x4E3A;&#x4E3B;&#x52A8;&#x7684;&#x5927;&#x5BB6;&#xFF0C;&#x800C;&#x901A;&#x8FC7;listen&#x64CD;&#x4F5C;&#x7684;SOCKET&#x53EF;&#x4EE5;&#x88AB;&#x52A8;&#x7684;&#x63A5;&#x5165;&#x3002;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">nclude &lt;sys/socket.h&gt;</div><div class=\"line\">int listen(int sockfd, int backlog);</div><div class=\"line\">Returns 0 on success, or &#x2013;1 on error</div></pre></td></tr></table></figure></p>\n<p>backlog &#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x662F;&#x63A7;&#x5236;&#x5185;&#x6838;&#x8BB0;&#x5F55;&#x672A;&#x51B3;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x91CF;&#x3002;<strong>&#x672A;&#x51B3;&#x8FDE;&#x63A5;</strong>&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x5DF2;&#x7ECF;&#x53D1;&#x751F;connect&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x56E0;&#x4E3A;&#x5FD9;&#x4E8E;&#x5176;&#x4ED6;&#x5904;&#x7406;&#x800C;&#x5C1A;&#x672A;accept&#x64CD;&#x4F5C;&#x3002;</p>\n<h3 id=\"accept\"><a href=\"#accept\" class=\"headerlink\" title=\"accept\"></a>accept</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);</div><div class=\"line\">Returns file descriptor on success, or &#x2013;1 on error</div></pre></td></tr></table></figure>\n<p>accept&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x4F1A;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x63A5;&#x5165;&#x8FDE;&#x63A5;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8C03;&#x7528;accept()&#x65F6;&#x5019;&#x4E0D;&#x5B58;&#x5728;&#x672A;&#x51B3;&#x8FDE;&#x63A5;&#xFF0C;&#x90A3;&#x4E48;&#x5219;&#x8BE5;&#x8C03;&#x7528;&#x4F1A;&#x963B;&#x585E;&#x5230;&#x6709;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x4E3A;&#x6B62;&#x3002;</p>\n<h3 id=\"&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;\"><a href=\"#&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;\" class=\"headerlink\" title=\"&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;\"></a>&#x6700;&#x7B80;&#x5355;EchoServer&#x670D;&#x52A1;&#x5668;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/types.h&gt;</div><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;netinet/in.h&gt;</div><div class=\"line\">#include &lt;arpa/inet.h&gt;</div><div class=\"line\">#include &lt;unistd.h&gt;</div><div class=\"line\">#include &lt;string.h&gt;</div><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;fcntl.h&gt;</div><div class=\"line\">#include &lt;sys/shm.h&gt;</div><div class=\"line\"></div><div class=\"line\">#define MYPORT  8887</div><div class=\"line\">#define QUEUE   20</div><div class=\"line\">#define BUFFER_SIZE 1024</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">{</div><div class=\"line\">    ///&#x5B9A;&#x4E49;sockfd</div><div class=\"line\">    int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class=\"line\">    ///&#x5B9A;&#x4E49;sockaddr_in</div><div class=\"line\">    struct sockaddr_in server_sockaddr;</div><div class=\"line\">    server_sockaddr.sin_family = AF_INET;</div><div class=\"line\">    server_sockaddr.sin_port = htons(MYPORT);</div><div class=\"line\">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class=\"line\">    ///bind&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class=\"line\">    if(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class=\"line\">    {</div><div class=\"line\">        perror(&quot;bind&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    }</div><div class=\"line\">    ///listen&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class=\"line\">    if(listen(server_sockfd,QUEUE) == -1)</div><div class=\"line\">    {</div><div class=\"line\">        perror(&quot;listen&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    }</div><div class=\"line\">    ///&#x5BA2;&#x6237;&#x7AEF;&#x5957;&#x63A5;&#x5B57;</div><div class=\"line\">    char buffer[BUFFER_SIZE];</div><div class=\"line\">    struct sockaddr_in client_addr;</div><div class=\"line\">    socklen_t length = sizeof(client_addr);</div><div class=\"line\">    ///&#x6210;&#x529F;&#x8FD4;&#x56DE;&#x975E;&#x8D1F;&#x63CF;&#x8FF0;&#x5B57;&#xFF0C;&#x51FA;&#x9519;&#x8FD4;&#x56DE;-1</div><div class=\"line\">    int conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class=\"line\">    if(conn&lt;0)</div><div class=\"line\">    {</div><div class=\"line\">        perror(&quot;connect&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    }</div><div class=\"line\">    while(1)</div><div class=\"line\">    {</div><div class=\"line\">        memset(buffer,0,sizeof(buffer));</div><div class=\"line\">        int len = recv(conn, buffer, sizeof(buffer),0);</div><div class=\"line\">        if(strcmp(buffer,&quot;exit\\n&quot;)==0)</div><div class=\"line\">            break;</div><div class=\"line\">        fputs(buffer, stdout);</div><div class=\"line\">        send(conn, buffer, len, 0);</div><div class=\"line\">    }</div><div class=\"line\">    close(conn);</div><div class=\"line\">    close(server_sockfd);</div><div class=\"line\">    return 0;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer\"><a href=\"#&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer\" class=\"headerlink\" title=\"&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer\"></a>&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x70B9;&#x7684;EchoServer</h2><p>&#x7F51;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x7684;&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#x6559;&#x7A0B;&#x6216;&#x8005;&#x6587;&#x7AE0;&#x7ED9;&#x51FA;&#x7684;&#x6700;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x548C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5DEE;&#x4E0D;&#x591A;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5B8C;&#x5584;&#x3002;&#x8FD9;&#x4E9B;&#x6539;&#x8FDB;&#x4E3B;&#x8981;&#x662F;&#x91C7;&#x7528;&#x540D;&#x79F0;&#x6765;&#x66FF;&#x4EE3;IP&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;&#x53F7;&#x3002;&#xFF08;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6765;&#x81EA;&#x4E8E;&#x300A;Linux/Unix&#x7CFB;&#x7EDF;&#x7F16;&#x7A0B;&#x624B;&#x518C;&#x300B;&#xFF09;&#x3002;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define _BSD_SOURCE             /* To get definitions of NI_MAXHOST and NI_MAXSERV from &lt;netdb.h&gt; */</div><div class=\"line\">#include &lt;netdb.h&gt;</div><div class=\"line\">#include &quot;is_seqnum.h&quot;</div><div class=\"line\">#define BACKLOG 50</div><div class=\"line\">int main(int argc, char *argv[])</div><div class=\"line\">{</div><div class=\"line\">    uint32_t seqNum;</div><div class=\"line\">    char reqLenStr[INT_LEN];            /* Length of requested sequence */</div><div class=\"line\">    char seqNumStr[INT_LEN];            /* Start of granted sequence */</div><div class=\"line\">    struct sockaddr_storage claddr;</div><div class=\"line\">    int lfd, cfd, optval, reqLen;</div><div class=\"line\">    socklen_t addrlen;</div><div class=\"line\">    struct addrinfo hints;</div><div class=\"line\">    struct addrinfo *result, *rp;</div><div class=\"line\">#define ADDRSTRLEN (NI_MAXHOST + NI_MAXSERV + 10)</div><div class=\"line\">    char addrStr[ADDRSTRLEN];</div><div class=\"line\">    char host[NI_MAXHOST];</div><div class=\"line\">    char service[NI_MAXSERV];</div><div class=\"line\"></div><div class=\"line\">    if (argc &gt; 1 &amp;&amp; strcmp(argv[1], &quot;--help&quot;) == 0)</div><div class=\"line\">        usageErr(&quot;%s [init-seq-num]\\n&quot;, argv[0]);</div><div class=\"line\"></div><div class=\"line\">    seqNum = (argc &gt; 1) ? getInt(argv[1], 0, &quot;init-seq-num&quot;) : 0;</div><div class=\"line\"></div><div class=\"line\">    /* Ignore the SIGPIPE signal, so that we find out about broken connection errors via a failure from write(). */</div><div class=\"line\"></div><div class=\"line\">    if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)    errExit(&quot;signal&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* Call getaddrinfo() to obtain a list of addresses that we can try binding to */</div><div class=\"line\"></div><div class=\"line\">    memset(&amp;hints, 0, sizeof(struct addrinfo));</div><div class=\"line\">    hints.ai_canonname = NULL;</div><div class=\"line\">    hints.ai_addr = NULL;</div><div class=\"line\">    hints.ai_next = NULL;</div><div class=\"line\">    hints.ai_socktype = SOCK_STREAM;</div><div class=\"line\">    hints.ai_family = AF_UNSPEC;        /* Allows IPv4 or IPv6 */</div><div class=\"line\">    // &#x8FD9;&#x91CC;&#x6307;&#x5B9A;&#x4E86;AI_PASSIVE &#x521B;&#x5EFA;&#x7684;socket&#x4F1A;&#x88AB;&#x7ED1;&#x5B9A;&#x5728;&#x901A;&#x914D;&#x5730;&#x5740;&#x4E0A;, &#x7ED3;&#x679C;&#x5C31;&#x662F;&#x5F53;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5728;&#x591A;&#x5BBF;&#x4E3B;&#x673A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;</div><div class=\"line\">    // &#xFF0C;&#x670D;&#x52A1;&#x5668;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x53D1;&#x9001;&#x5230;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x5730;&#x5740;&#x7684;&#x8BF7;&#x6C42;&#x3002;</div><div class=\"line\">    hints.ai_flags = AI_PASSIVE | AI_NUMERICSERV;</div><div class=\"line\">                        /* Wildcard IP address; service name is numeric */</div><div class=\"line\"></div><div class=\"line\">    if (getaddrinfo(NULL, PORT_NUM, &amp;hints, &amp;result) != 0)</div><div class=\"line\">        errExit(&quot;getaddrinfo&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* Walk through returned list until we find an address structure</div><div class=\"line\">       that can be used to successfully create and bind a socket */</div><div class=\"line\"></div><div class=\"line\">    optval = 1;</div><div class=\"line\">    for (rp = result; rp != NULL; rp = rp-&gt;ai_next) {</div><div class=\"line\">        lfd = socket(rp-&gt;ai_family, rp-&gt;ai_socktype, rp-&gt;ai_protocol);</div><div class=\"line\">        if (lfd == -1)</div><div class=\"line\">            continue;                   /* On error, try next address */</div><div class=\"line\"></div><div class=\"line\">        if (setsockopt(lfd, SOL_SOCKET, SO_REUSEADDR, &amp;optval, sizeof(optval))</div><div class=\"line\">                == -1)</div><div class=\"line\">             errExit(&quot;setsockopt&quot;);</div><div class=\"line\"></div><div class=\"line\">        if (bind(lfd, rp-&gt;ai_addr, rp-&gt;ai_addrlen) == 0)</div><div class=\"line\">            break;                      /* Success */</div><div class=\"line\"></div><div class=\"line\">        /* bind() failed: close this socket and try next address */</div><div class=\"line\">        close(lfd);</div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">    if (rp == NULL)</div><div class=\"line\">        fatal(&quot;Could not bind socket to any address&quot;);</div><div class=\"line\"></div><div class=\"line\">    if (listen(lfd, BACKLOG) == -1)</div><div class=\"line\">        errExit(&quot;listen&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* freeaddrinfo&#x7684;&#x4F5C;&#x7528;&#x662F;&#x91CA;&#x653E;getaddrinfo&#x4E3A;result&#x52A8;&#x6001;&#x5206;&#x914D;&#x7684;&#x5185;&#x5B58; */</div><div class=\"line\">    freeaddrinfo(result);</div><div class=\"line\"></div><div class=\"line\">    for (;;) {                  /* Handle clients iteratively */</div><div class=\"line\"></div><div class=\"line\">        /* Accept a client connection, obtaining client&apos;s address */</div><div class=\"line\"></div><div class=\"line\">        addrlen = sizeof(struct sockaddr_storage);</div><div class=\"line\">        cfd = accept(lfd, (struct sockaddr *) &amp;claddr, &amp;addrlen);</div><div class=\"line\">        if (cfd == -1) {</div><div class=\"line\">            errMsg(&quot;accept&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        }</div><div class=\"line\"></div><div class=\"line\">        if (getnameinfo((struct sockaddr *) &amp;claddr, addrlen,</div><div class=\"line\">                    host, NI_MAXHOST, service, NI_MAXSERV, 0) == 0)</div><div class=\"line\">            snprintf(addrStr, ADDRSTRLEN, &quot;(%s, %s)&quot;, host, service);</div><div class=\"line\">        else</div><div class=\"line\">            snprintf(addrStr, ADDRSTRLEN, &quot;(?UNKNOWN?)&quot;);</div><div class=\"line\">        printf(&quot;Connection from %s\\n&quot;, addrStr);</div><div class=\"line\"></div><div class=\"line\">        /* Read client request, send sequence number back */</div><div class=\"line\"></div><div class=\"line\">        if (readLine(cfd, reqLenStr, INT_LEN) &lt;= 0) {</div><div class=\"line\">            close(cfd);</div><div class=\"line\">            continue;                   /* Failed read; skip request */</div><div class=\"line\">        }</div><div class=\"line\"></div><div class=\"line\">        reqLen = atoi(reqLenStr);</div><div class=\"line\">        if (reqLen &lt;= 0) {              /* Watch for misbehaving clients */</div><div class=\"line\">            close(cfd);</div><div class=\"line\">            continue;                   /* Bad request; skip it */</div><div class=\"line\">        }</div><div class=\"line\"></div><div class=\"line\">        snprintf(seqNumStr, INT_LEN, &quot;%d\\n&quot;, seqNum);</div><div class=\"line\">        if (write(cfd, seqNumStr, strlen(seqNumStr)) != strlen(seqNumStr))</div><div class=\"line\">            fprintf(stderr, &quot;Error on write&quot;);</div><div class=\"line\"></div><div class=\"line\">        seqNum += reqLen;               /* Update sequence number */</div><div class=\"line\"></div><div class=\"line\">        if (close(cfd) == -1)           /* Close connection */</div><div class=\"line\">            errMsg(&quot;close&quot;);</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure></p>\n<h3 id=\"getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;\"><a href=\"#getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;\" class=\"headerlink\" title=\"getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;\"></a>getaddrinfo&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x89E3;&#x6790;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">#include &lt;netdb.h&gt;</div><div class=\"line\">int getaddrinfo(const char *host, const char *service,</div><div class=\"line\">const struct addrinfo *hints, struct addrinfo **result);</div><div class=\"line\">Returns 0 on success, or nonzero on error</div></pre></td></tr></table></figure>\n<ul>\n<li>host&#x53EF;&#x4EE5;&#x662F;&#x4E3B;&#x673A;&#x540D;&#x79F0;&#x6216;&#x8005;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;&#x7684;IP&#x5730;&#x5740;</li>\n<li>service&#x53EF;&#x4EE5;&#x662F;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x6216;&#x8005;&#x7AEF;&#x53E3;&#x53F7;</li>\n<li>hints&#x53C2;&#x6570;&#x89C4;&#x5B9A;&#x4E86;result&#x53C2;&#x6570;&#x8FD4;&#x56DE;&#x7684;socket&#x5730;&#x5740;&#x7684;&#x6807;&#x51C6;&#x3002;</li>\n<li>result&#x53C2;&#x6570;&#x662F;getaddrinfo&#x81EA;&#x52A8;&#x5206;&#x914D;&#x7684;addrinfo&#x94FE;&#x8868;&#x3002;</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">struct addrinfo {</div><div class=\"line\">int ai_flags; /* Input flags (AI_* constants) */</div><div class=\"line\">int ai_family; /* Address family */</div><div class=\"line\">int ai_socktype; /* Type: SOCK_STREAM, SOCK_DGRAM */</div><div class=\"line\">int ai_protocol; /* Socket protocol */</div><div class=\"line\">size_t ai_addrlen; /* Size of structure pointed to by ai_addr */</div><div class=\"line\">char *ai_canonname; /* Canonical name of host */</div><div class=\"line\">struct sockaddr *ai_addr; /* Pointer to socket address structure */</div><div class=\"line\">struct addrinfo *ai_next; /* Next structure in linked list */</div><div class=\"line\">};</div></pre></td></tr></table></figure>\n<p>hints&#x53C2;&#x6570;&#x53EA;&#x80FD;&#x8BBE;&#x7F6E; ai_flags&#xFF0C;ai_family, ai_socktype, ai_protocol&#x56DB;&#x4E2A;&#x5B57;&#x6BB5;&#x3002;hints.ai_family&#x53EF;&#x4EE5;&#x6307;&#x5B9A;AF_INET&#x6216;&#x8005;AF_INET6, &#x6216;&#x8005;&#x8BBE;&#x7F6E;&#x4E3A;AF_UNSPEC. hints.ai_socktype&#x6307;&#x5B9A;socket&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;SOCK_STREAM&#x6216;&#x8005;SOCK_DGRAM&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A;0&#x5219;&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;socket. hints.ai_flags&#x63A7;&#x5236;getaddrinfo&#x7684;&#x884C;&#x4E3A;&#x3002;AI_PASSIVE&#x8868;&#x793A;&#x8FD4;&#x56DE;&#x88AB;&#x52A8;&#x65B9;&#x5F0F;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x3002;&#x6B64;&#x65F6;host&#x8BBE;&#x7F6E;&#x4E3A;NULL&#xFF0C;&#x901A;&#x8FC7;result&#x8FD4;&#x56DE;&#x7684;socket&#x5730;&#x5740;&#x7ED3;&#x6784;&#x5C06;&#x4F1A;&#x5305;&#x542B;&#x901A;&#x914D;IP&#x5730;&#x5740;&#xFF08;&#x5373;INADDR_DAY&#x6216;&#x8005;IN6ADDR_ANY_INIT&#xFF09;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;AI_PASSIVE&#x5219;&#x8FD4;&#x56DE;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x5C06;&#x4F1A;&#x5C06;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x4E3A;connect() &#x548C;sendto()&#x3002;</p>\n<p>SO_REUSEADDR &#x662F;TCP&#x670D;&#x52A1;&#x5668;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x8981;&#x8BBE;&#x7F6E;&#x8FD9;&#x4E2A;&#x9009;&#x9879;&#x3002;&#x8FD9;&#x91CC;&#x4EC5;&#x4EC5;&#x5173;&#x6CE8;&#x5176;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#x7528;&#x9014;&#xFF1A;&#x907F;&#x514D;&#x5F53;&#x670D;&#x52A1;&#x5668;&#x91CD;&#x542F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C1D;&#x8BD5;&#x5C06;&#x5957;&#x63A5;&#x5B57;&#x5173;&#x8054;&#x5728;&#x5F53;&#x524D;TCP&#x8282;&#x70B9;&#x76F8;&#x5173;&#x8054;&#x7684;&#x7AEF;&#x53E3;&#x4E0A;&#x7684;&#x65F6;&#x5019;&#x51FA;&#x73B0;EADDRRINUSE&#xFF08;&#x5730;&#x5740;&#x5DF2;&#x4F7F;&#x7528;&#xFF09;&#x7684;&#x9519;&#x8BEF;&#x3002;</p>\n<h2 id=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;\"><a href=\"#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;\" class=\"headerlink\" title=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;\"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;\"><a href=\"#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;\" class=\"headerlink\" title=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;\"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;-&#x5F02;&#x6B65;IO-&#x534F;&#x7A0B;&#x6A21;&#x578B;\"><a href=\"#&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;-&#x5F02;&#x6B65;IO-&#x534F;&#x7A0B;&#x6A21;&#x578B;\" class=\"headerlink\" title=\"&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;(&#x5F02;&#x6B65;IO/&#x534F;&#x7A0B;&#x6A21;&#x578B;)\"></a>&#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x8BBE;&#x8BA1;&#x4E4B;&#x5176;&#x4ED6;&#x6A21;&#x578B;(&#x5F02;&#x6B65;IO/&#x534F;&#x7A0B;&#x6A21;&#x578B;)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"&#x5176;&#x4ED6;\"><a href=\"#&#x5176;&#x4ED6;\" class=\"headerlink\" title=\"&#x5176;&#x4ED6;\"></a>&#x5176;&#x4ED6;</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"EchoServer服务器设计\"><a href=\"#EchoServer服务器设计\" class=\"headerlink\" title=\"EchoServer服务器设计\"></a>EchoServer服务器设计</h1><h2 id=\"提纲\"><a href=\"#提纲\" class=\"headerlink\" title=\"提纲\"></a>提纲</h2><ul>\n<li>最简单的EchoServer</li>\n<li>采用兼容API的EchoServer</li>\n<li>并发服务器设计之多进程模型</li>\n<li>并发服务器设计之多线程模型</li>\n<li>并发服务器设计之IO多路复用模型</li>\n</ul>\n<h2 id=\"最简单的EchoServer\"><a href=\"#最简单的EchoServer\" class=\"headerlink\" title=\"最简单的EchoServer\"></a>最简单的EchoServer</h2><h3 id=\"socket\"><a href=\"#socket\" class=\"headerlink\" title=\"socket\"></a>socket</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int socket(int domain, int type, int protocol);</div><div class=\"line\">Returns file descriptor on success, or –1 on error</div></pre></td></tr></table></figure>\n<p>domain 可以是AF_UNIX、AF_INET、AF_INET6中的一种，分别表示通过内核、IPV4连接的主机、IPV6连接的主机进行通讯，Unix域(AF_INET)只能在相同的主机上进行通讯。上面各种域对这样不同的地址结构。<br>type 可以是SOCK_STREAM、SOCK_DGRAM或者SOCK_RAW中的一种。</p>\n<h3 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind\"></a>bind</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);</div><div class=\"line\">Returns 0 on success, or –1 on error</div></pre></td></tr></table></figure>\n<p>sockfd是通过socket调用创建的socket文件描述符， struct sockaddr 是通用地址结构，因为socket()中创建的域类型可能有不同的种类，这里需要能够接受不同的地址类型比如(sockaddr_un,sockaddr_in,sockaddr_in6)。</p>\n<h3 id=\"listen\"><a href=\"#listen\" class=\"headerlink\" title=\"listen\"></a>listen</h3><p>流式的SOCKET分为主动被动两种，简单来讲connect操作的SOCKET成为主动的大家，而通过listen操作的SOCKET可以被动的接入。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">nclude &lt;sys/socket.h&gt;</div><div class=\"line\">int listen(int sockfd, int backlog);</div><div class=\"line\">Returns 0 on success, or –1 on error</div></pre></td></tr></table></figure></p>\n<p>backlog 的主要作用是控制内核记录未决连接的数量。<strong>未决连接</strong>是客户端已经发生connect操作，但是服务端因为忙于其他处理而尚未accept操作。</p>\n<h3 id=\"accept\"><a href=\"#accept\" class=\"headerlink\" title=\"accept\"></a>accept</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);</div><div class=\"line\">Returns file descriptor on success, or –1 on error</div></pre></td></tr></table></figure>\n<p>accept系统调用会接受一个接入连接，如果在调用accept()时候不存在未决连接，那么则该调用会阻塞到有连接请求为止。</p>\n<h3 id=\"最简单EchoServer服务器的示例代码\"><a href=\"#最简单EchoServer服务器的示例代码\" class=\"headerlink\" title=\"最简单EchoServer服务器的示例代码\"></a>最简单EchoServer服务器的示例代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/types.h&gt;</div><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;netinet/in.h&gt;</div><div class=\"line\">#include &lt;arpa/inet.h&gt;</div><div class=\"line\">#include &lt;unistd.h&gt;</div><div class=\"line\">#include &lt;string.h&gt;</div><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;fcntl.h&gt;</div><div class=\"line\">#include &lt;sys/shm.h&gt;</div><div class=\"line\"></div><div class=\"line\">#define MYPORT  8887</div><div class=\"line\">#define QUEUE   20</div><div class=\"line\">#define BUFFER_SIZE 1024</div><div class=\"line\"></div><div class=\"line\">int main()</div><div class=\"line\">&#123;</div><div class=\"line\">    ///定义sockfd</div><div class=\"line\">    int server_sockfd = socket(AF_INET,SOCK_STREAM, 0);</div><div class=\"line\">    ///定义sockaddr_in</div><div class=\"line\">    struct sockaddr_in server_sockaddr;</div><div class=\"line\">    server_sockaddr.sin_family = AF_INET;</div><div class=\"line\">    server_sockaddr.sin_port = htons(MYPORT);</div><div class=\"line\">    server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY);</div><div class=\"line\">    ///bind，成功返回0，出错返回-1</div><div class=\"line\">    if(bind(server_sockfd,(struct sockaddr *)&amp;server_sockaddr,sizeof(server_sockaddr))==-1)</div><div class=\"line\">    &#123;</div><div class=\"line\">        perror(&quot;bind&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    ///listen，成功返回0，出错返回-1</div><div class=\"line\">    if(listen(server_sockfd,QUEUE) == -1)</div><div class=\"line\">    &#123;</div><div class=\"line\">        perror(&quot;listen&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    ///客户端套接字</div><div class=\"line\">    char buffer[BUFFER_SIZE];</div><div class=\"line\">    struct sockaddr_in client_addr;</div><div class=\"line\">    socklen_t length = sizeof(client_addr);</div><div class=\"line\">    ///成功返回非负描述字，出错返回-1</div><div class=\"line\">    int conn = accept(server_sockfd, (struct sockaddr*)&amp;client_addr, &amp;length);</div><div class=\"line\">    if(conn&lt;0)</div><div class=\"line\">    &#123;</div><div class=\"line\">        perror(&quot;connect&quot;);</div><div class=\"line\">        exit(1);</div><div class=\"line\">    &#125;</div><div class=\"line\">    while(1)</div><div class=\"line\">    &#123;</div><div class=\"line\">        memset(buffer,0,sizeof(buffer));</div><div class=\"line\">        int len = recv(conn, buffer, sizeof(buffer),0);</div><div class=\"line\">        if(strcmp(buffer,&quot;exit\\n&quot;)==0)</div><div class=\"line\">            break;</div><div class=\"line\">        fputs(buffer, stdout);</div><div class=\"line\">        send(conn, buffer, len, 0);</div><div class=\"line\">    &#125;</div><div class=\"line\">    close(conn);</div><div class=\"line\">    close(server_sockfd);</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"稍微复杂一点的EchoServer\"><a href=\"#稍微复杂一点的EchoServer\" class=\"headerlink\" title=\"稍微复杂一点的EchoServer\"></a>稍微复杂一点的EchoServer</h2><p>网上大部分的网络编程服务器教程或者文章给出的最简单的示例，基本上都和上面的代码差不多。上面的代码可以进一步完善。这些改进主要是采用名称来替代IP地址和端口号。（下面的代码，来自于《Linux/Unix系统编程手册》）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define _BSD_SOURCE             /* To get definitions of NI_MAXHOST and NI_MAXSERV from &lt;netdb.h&gt; */</div><div class=\"line\">#include &lt;netdb.h&gt;</div><div class=\"line\">#include &quot;is_seqnum.h&quot;</div><div class=\"line\">#define BACKLOG 50</div><div class=\"line\">int main(int argc, char *argv[])</div><div class=\"line\">&#123;</div><div class=\"line\">    uint32_t seqNum;</div><div class=\"line\">    char reqLenStr[INT_LEN];            /* Length of requested sequence */</div><div class=\"line\">    char seqNumStr[INT_LEN];            /* Start of granted sequence */</div><div class=\"line\">    struct sockaddr_storage claddr;</div><div class=\"line\">    int lfd, cfd, optval, reqLen;</div><div class=\"line\">    socklen_t addrlen;</div><div class=\"line\">    struct addrinfo hints;</div><div class=\"line\">    struct addrinfo *result, *rp;</div><div class=\"line\">#define ADDRSTRLEN (NI_MAXHOST + NI_MAXSERV + 10)</div><div class=\"line\">    char addrStr[ADDRSTRLEN];</div><div class=\"line\">    char host[NI_MAXHOST];</div><div class=\"line\">    char service[NI_MAXSERV];</div><div class=\"line\"></div><div class=\"line\">    if (argc &gt; 1 &amp;&amp; strcmp(argv[1], &quot;--help&quot;) == 0)</div><div class=\"line\">        usageErr(&quot;%s [init-seq-num]\\n&quot;, argv[0]);</div><div class=\"line\"></div><div class=\"line\">    seqNum = (argc &gt; 1) ? getInt(argv[1], 0, &quot;init-seq-num&quot;) : 0;</div><div class=\"line\"></div><div class=\"line\">    /* Ignore the SIGPIPE signal, so that we find out about broken connection errors via a failure from write(). */</div><div class=\"line\"></div><div class=\"line\">    if (signal(SIGPIPE, SIG_IGN) == SIG_ERR)    errExit(&quot;signal&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* Call getaddrinfo() to obtain a list of addresses that we can try binding to */</div><div class=\"line\"></div><div class=\"line\">    memset(&amp;hints, 0, sizeof(struct addrinfo));</div><div class=\"line\">    hints.ai_canonname = NULL;</div><div class=\"line\">    hints.ai_addr = NULL;</div><div class=\"line\">    hints.ai_next = NULL;</div><div class=\"line\">    hints.ai_socktype = SOCK_STREAM;</div><div class=\"line\">    hints.ai_family = AF_UNSPEC;        /* Allows IPv4 or IPv6 */</div><div class=\"line\">    // 这里指定了AI_PASSIVE 创建的socket会被绑定在通配地址上, 结果就是当服务程序运行在多宿主机的情况下</div><div class=\"line\">    // ，服务器可以处理发送到任意一个网络地址的请求。</div><div class=\"line\">    hints.ai_flags = AI_PASSIVE | AI_NUMERICSERV;</div><div class=\"line\">                        /* Wildcard IP address; service name is numeric */</div><div class=\"line\"></div><div class=\"line\">    if (getaddrinfo(NULL, PORT_NUM, &amp;hints, &amp;result) != 0)</div><div class=\"line\">        errExit(&quot;getaddrinfo&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* Walk through returned list until we find an address structure</div><div class=\"line\">       that can be used to successfully create and bind a socket */</div><div class=\"line\"></div><div class=\"line\">    optval = 1;</div><div class=\"line\">    for (rp = result; rp != NULL; rp = rp-&gt;ai_next) &#123;</div><div class=\"line\">        lfd = socket(rp-&gt;ai_family, rp-&gt;ai_socktype, rp-&gt;ai_protocol);</div><div class=\"line\">        if (lfd == -1)</div><div class=\"line\">            continue;                   /* On error, try next address */</div><div class=\"line\"></div><div class=\"line\">        if (setsockopt(lfd, SOL_SOCKET, SO_REUSEADDR, &amp;optval, sizeof(optval))</div><div class=\"line\">                == -1)</div><div class=\"line\">             errExit(&quot;setsockopt&quot;);</div><div class=\"line\"></div><div class=\"line\">        if (bind(lfd, rp-&gt;ai_addr, rp-&gt;ai_addrlen) == 0)</div><div class=\"line\">            break;                      /* Success */</div><div class=\"line\"></div><div class=\"line\">        /* bind() failed: close this socket and try next address */</div><div class=\"line\">        close(lfd);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if (rp == NULL)</div><div class=\"line\">        fatal(&quot;Could not bind socket to any address&quot;);</div><div class=\"line\"></div><div class=\"line\">    if (listen(lfd, BACKLOG) == -1)</div><div class=\"line\">        errExit(&quot;listen&quot;);</div><div class=\"line\"></div><div class=\"line\">    /* freeaddrinfo的作用是释放getaddrinfo为result动态分配的内存 */</div><div class=\"line\">    freeaddrinfo(result);</div><div class=\"line\"></div><div class=\"line\">    for (;;) &#123;                  /* Handle clients iteratively */</div><div class=\"line\"></div><div class=\"line\">        /* Accept a client connection, obtaining client&apos;s address */</div><div class=\"line\"></div><div class=\"line\">        addrlen = sizeof(struct sockaddr_storage);</div><div class=\"line\">        cfd = accept(lfd, (struct sockaddr *) &amp;claddr, &amp;addrlen);</div><div class=\"line\">        if (cfd == -1) &#123;</div><div class=\"line\">            errMsg(&quot;accept&quot;);</div><div class=\"line\">            continue;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        if (getnameinfo((struct sockaddr *) &amp;claddr, addrlen,</div><div class=\"line\">                    host, NI_MAXHOST, service, NI_MAXSERV, 0) == 0)</div><div class=\"line\">            snprintf(addrStr, ADDRSTRLEN, &quot;(%s, %s)&quot;, host, service);</div><div class=\"line\">        else</div><div class=\"line\">            snprintf(addrStr, ADDRSTRLEN, &quot;(?UNKNOWN?)&quot;);</div><div class=\"line\">        printf(&quot;Connection from %s\\n&quot;, addrStr);</div><div class=\"line\"></div><div class=\"line\">        /* Read client request, send sequence number back */</div><div class=\"line\"></div><div class=\"line\">        if (readLine(cfd, reqLenStr, INT_LEN) &lt;= 0) &#123;</div><div class=\"line\">            close(cfd);</div><div class=\"line\">            continue;                   /* Failed read; skip request */</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        reqLen = atoi(reqLenStr);</div><div class=\"line\">        if (reqLen &lt;= 0) &#123;              /* Watch for misbehaving clients */</div><div class=\"line\">            close(cfd);</div><div class=\"line\">            continue;                   /* Bad request; skip it */</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        snprintf(seqNumStr, INT_LEN, &quot;%d\\n&quot;, seqNum);</div><div class=\"line\">        if (write(cfd, seqNumStr, strlen(seqNumStr)) != strlen(seqNumStr))</div><div class=\"line\">            fprintf(stderr, &quot;Error on write&quot;);</div><div class=\"line\"></div><div class=\"line\">        seqNum += reqLen;               /* Update sequence number */</div><div class=\"line\"></div><div class=\"line\">        if (close(cfd) == -1)           /* Close connection */</div><div class=\"line\">            errMsg(&quot;close&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"getaddrinfo系统调用解析\"><a href=\"#getaddrinfo系统调用解析\" class=\"headerlink\" title=\"getaddrinfo系统调用解析\"></a>getaddrinfo系统调用解析</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;sys/socket.h&gt;</div><div class=\"line\">#include &lt;netdb.h&gt;</div><div class=\"line\">int getaddrinfo(const char *host, const char *service,</div><div class=\"line\">const struct addrinfo *hints, struct addrinfo **result);</div><div class=\"line\">Returns 0 on success, or nonzero on error</div></pre></td></tr></table></figure>\n<ul>\n<li>host可以是主机名称或者字符串形式的IP地址</li>\n<li>service可以是服务名称或者端口号</li>\n<li>hints参数规定了result参数返回的socket地址的标准。</li>\n<li>result参数是getaddrinfo自动分配的addrinfo链表。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">struct addrinfo &#123;</div><div class=\"line\">int ai_flags; /* Input flags (AI_* constants) */</div><div class=\"line\">int ai_family; /* Address family */</div><div class=\"line\">int ai_socktype; /* Type: SOCK_STREAM, SOCK_DGRAM */</div><div class=\"line\">int ai_protocol; /* Socket protocol */</div><div class=\"line\">size_t ai_addrlen; /* Size of structure pointed to by ai_addr */</div><div class=\"line\">char *ai_canonname; /* Canonical name of host */</div><div class=\"line\">struct sockaddr *ai_addr; /* Pointer to socket address structure */</div><div class=\"line\">struct addrinfo *ai_next; /* Next structure in linked list */</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>hints参数只能设置 ai_flags，ai_family, ai_socktype, ai_protocol四个字段。hints.ai_family可以指定AF_INET或者AF_INET6, 或者设置为AF_UNSPEC. hints.ai_socktype指定socket类型，可以为SOCK_STREAM或者SOCK_DGRAM，如果设置为0则表示可以接受任何类型的socket. hints.ai_flags控制getaddrinfo的行为。AI_PASSIVE表示返回被动方式的地址结构。此时host设置为NULL，通过result返回的socket地址结构将会包含通配IP地址（即INADDR_DAY或者IN6ADDR_ANY_INIT）。如果没有设置AI_PASSIVE则返回的地址结构将会将可以被用为connect() 和sendto()。</p>\n<p>SO_REUSEADDR 是TCP服务器一般情况下都要设置这个选项。这里仅仅关注其最简单的一种用途：避免当服务器重启的时候，尝试将套接字关联在当前TCP节点相关联的端口上的时候出现EADDRRINUSE（地址已使用）的错误。</p>\n<h2 id=\"并发服务器设计之多进程模型\"><a href=\"#并发服务器设计之多进程模型\" class=\"headerlink\" title=\"并发服务器设计之多进程模型\"></a>并发服务器设计之多进程模型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"并发服务器设计之多线程模型\"><a href=\"#并发服务器设计之多线程模型\" class=\"headerlink\" title=\"并发服务器设计之多线程模型\"></a>并发服务器设计之多线程模型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"并发服务器设计之其他模型-异步IO-协程模型\"><a href=\"#并发服务器设计之其他模型-异步IO-协程模型\" class=\"headerlink\" title=\"并发服务器设计之其他模型(异步IO/协程模型)\"></a>并发服务器设计之其他模型(异步IO/协程模型)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n"},{"title":"A Beginner's Guide To Understanding Convolutional Neural Networks","date":"2017-04-20T13:09:57.000Z","_content":"# A Beginner's Guide To Understanding Convolutional Neural Networks\n\n![](https://adeshpande3.github.io/assets/Cover.png)\n\n## Introduction\n\n>Convolutional neural networks. Sounds like a weird combination of biology and math with a little CS sprinkled in, but these networks have been some of the most influential innovations in the field of computer vision. 2012 was the first year that neural nets grew to prominence as Alex Krizhevsky used them to win that year’s ImageNet competition (basically, the annual Olympics of computer vision), dropping the classification error record from 26% to 15%, an astounding improvement at the time.Ever since then, a host of companies have been using deep learning at the core of their services. Facebook uses neural nets for their automatic tagging algorithms, Google for their photo search, Amazon for their product recommendations, Pinterest for their home feed personalization, and Instagram for their search infrastructure.\n>顾名思义，卷积神经网络结合了生物科学、数学还有一点点的计算机科学，在计算机视觉领域取得的创新性成就让人刮目相看。 2012年，卷神经网络声名鹊起。伴随着Alex Krizhevsky用卷积神经网络在拥有一年一度的“计算机视觉奥运会”之称的ImageNet竞赛上取得了分类错误率从26%降低到15%惊人的成就，卷神经网络（CNN）声名鹊起。从那时起，许多著名的科技公司已经在他们核心业务上采用深层学习技术。 例如，Facebook利用神经网络自动标注，谷歌利用他们进行图片搜索，亚马逊的产品推荐，Pinterest的个性化订阅，以及Instagram的搜索基础服务。\n![](https://adeshpande3.github.io/assets/Companies.png)\n\n>However, the classic, and arguably most popular, use case of these networks is for image processing. Within image processing, let’s take a look at how to use these CNNs for image classification.\n>不过最经典最流行的神经网络的应用还是图像识别。接下来我们会一起看一下CNN在在图像识别领域的应用。\n\n## The Problem Space\n\n>Image classification is the task of taking an input image and outputting a class (a cat, dog, etc) or a probability of classes that best describes the image. For humans, this task of recognition is one of the first skills we learn from the moment we are born and is one that comes naturally and effortlessly as adults. Without even thinking twice, we’re able to quickly and seamlessly identify the environment we are in as well as the objects that surround us. When we see an image or just when we look at the world around us, most of the time we are able to immediately characterize the scene and give each object a label, all without even consciously noticing. \nThese skills of being able to quickly recognize patterns, generalize from prior knowledge, and adapt to different image environments are ones that we do not share with our fellow machines.\n>图像分类旨在根据输入图片输出所属类别(如猫，狗，等）或者从概率的角度判断该图片最有可能属于什么类别。对于人类而言，这是与生具来的能力而且和成人所差无几。想都不用想，人类就可以轻而易举的识别周围的环境和物体。当人类看身边的物体或者场景，人类可以立刻概括周围环境的特征并且给每个物体一个标签，甚至都不需要刻意地去关注。这些迅速识别模式、从先验知识中泛化、和适应不同环境的能力却并不为我们的机器所拥有。\n\n![](https://adeshpande3.github.io/assets/Corgi3.png)\n\n## Inputs and Outputs\n>When a computer sees an image (takes an image as input), it will see an array of pixel values. Depending on the resolution and size of the image, it will see a 32 x 32 x 3 array of numbers (The 3 refers to RGB values). Just to drive home the point, let's say we have a color image in JPG form and its size is 480 x 480. The representative array will be 480 x 480 x 3. Each of these numbers is given a value from 0 to 255 which describes the pixel intensity at that point. These numbers, while meaningless to us when we perform image classification, are the only inputs available to the computer.  The idea is that you give the computer this array of numbers and it will output numbers that describe the probability of the image being a certain class (.80 for cat, .15 for dog, .05 for bird, etc).\n\n>计算机把一幅图片理解为像素值数组，根据解析度和图片的尺寸，一副图片可能会被表示为32 * 32 * 3的多维数组(3表示RGB值)。重申一下，假如存在一副JPG格式大小为480 * 480 的图像。对应的数组的纬度将会是480 * 480 * 3. 每个元素取值范围是0-255, 描述了该像素点的情况。这些数组中的元素对于人类虽然没有什么用处，但是计算机却只能得到这些基本信息。但计算机看到这些数值组成的数组的时候，计算机会输出一些列概率值，分别描述了图片属于对应类别的可能性。\n\n## What We Want the Computer to Do\n>Now that we know the problem as well as the inputs and outputs, let’s think about how to approach this. What we want the computer to do is to be able to differentiate between all the images it’s given and figure out the unique features that make a dog a dog or that make a cat a cat. This is the process that goes on in our minds subconsciously as well. When we look at a picture of a dog, we can classify it as such if the picture has identifiable features such as paws or 4 legs. In a similar way, the computer is able perform image classification by looking for low level features such as edges and curves, and then building up to more abstract concepts through a series of convolutional layers. This is a general overview of what a CNN does. Let’s get into the specifics.\n>既然我们了解了图像识别分类的定义和计算机看到的输入和输出，我们再来想想一下人类如何做到的。 计算机分类图片和识别出类别本质上的特征这样的过程对于人类几乎是不假思索即可完成的。人类看到狗的时候，我们可以轻易的辨别狗的特征，比如爪子和四条腿。类似地，计算机也可以识别到比较低层次地特征比如边缘或者曲线， 然后通过一系列卷积层构建出层次较高的、抽象的特征。这就是CNN的基本思路。下面让我们深入地探究CNN的一些细节。\n\n## Biological Connection\n>But first, a little background. When you first heard of the term convolutional neural networks, you may have thought of something related to neuroscience or biology, and you would be right. Sort of. CNNs do take a biological inspiration from the visual cortex. The visual cortex has small regions of cells that are sensitive to specific regions of the visual field. This idea was expanded upon by a fascinating experiment by Hubel and Wiesel in 1962 (Video) where they showed that some individual neuronal cells in the brain responded (or fired) only in the presence of edges of a certain orientation. For example, some neurons fired when exposed to vertical edges and some when shown horizontal or diagonal edges. Hubel and Wiesel found out that all of these neurons were organized in a columnar architecture and that together, they were able to produce visual perception. This idea of specialized components inside of a system having specific tasks (the neuronal cells in the visual cortex looking for specific characteristics) is one that machines use as well, and is the basis behind CNNs.\n\n## Structure\n>Back to the specifics. A more detailed overview of what CNNs do would be that you take the image, pass it through a series of convolutional, nonlinear, pooling (downsampling), and fully connected layers, and get an output. As we said earlier, the output can be a single class or a probability of classes that best describes the image. Now, the hard part is understanding what each of these layers do. So let’s get into the most important one.\n\n## First Layer – Math Part\n>The first layer in a CNN is always a Convolutional Layer. First thing to make sure you remember is what the input to this conv (I’ll be using that abbreviation a lot) layer is. Like we mentioned before, the input is a 32 x 32 x 3 array of pixel values. Now, the best way to explain a conv layer is to imagine a flashlight that is shining over the top left of the image. Let’s say that the light this flashlight shines covers a 5 x 5 area. And now, let’s imagine this flashlight sliding across all the areas of the input image. In machine learning terms, this flashlight is called a filter(or sometimes referred to as a neuron or a kernel) and the region that it is shining over is called the receptive field. Now this filter is also an array of numbers (the numbers are called weights or parameters). A very important note is that the depth of this filter has to be the same as the depth of the input (this makes sure that the math works out), so the dimensions of this filter is 5 x 5 x 3. Now, let’s take the first position the filter is in for example.  It would be the top left corner. As the filter is sliding, or convolving, around the input image, it is multiplying the values in the filter with the original pixel values of the image (aka computing element wise multiplications). These multiplications are all summed up (mathematically speaking, this would be 75 multiplications in total). So now you have a single number. Remember, this number is just representative of when the filter is at the top left of the image. Now, we repeat this process for every location on the input volume. (Next step would be moving the filter to the right by 1 unit, then right again by 1, and so on). Every unique location on the input volume produces a number. After sliding the filter over all the locations, you will find out that what you’re left with is a 28 x 28 x 1 array of numbers, which we call an activation map or feature map. The reason you get a 28 x 28 array is that there are 784 different locations that a 5 x 5 filter can fit on a 32 x 32 input image. These 784 numbers are mapped to a 28 x 28 array.\n\n![](https://adeshpande3.github.io/assets/ActivationMap.png)\n\n>(Quick Note: Some of the images, including the one above, I used came from this terrific book, [\"Neural Networks and Deep Learning\"](http://neuralnetworksanddeeplearning.com/) by Michael Nielsen. Strongly recommend.)\n\n>Let’s say now we use two 5 x 5 x 3 filters instead of one. Then our output volume would be 28 x 28 x 2. By using more filters, we are able to preserve the spatial dimensions better. Mathematically, this is what’s going on in a convolutional layer.\n\n## First Layer – High Level Perspective\n>However, let’s talk about what this convolution is actually doing from a high level. Each of these filters can be thought of as feature identifiers. When I say features, I’m talking about things like straight edges, simple colors, and curves. Think about the simplest characteristics that all images have in common with each other. Let’s say our first filter is 7 x 7 x 3 and is going to be a curve detector. (In this section, let’s ignore the fact that the filter is 3 units deep and only consider the top depth slice of the filter and the image, for simplicity.)As a curve detector, the filter will have a pixel structure in which there will be higher numerical values along the area that is a shape of a curve (Remember, these filters that we’re talking about as just numbers!).       \n\n![](https://adeshpande3.github.io/assets/Filter.png)\n>Now, let’s go back to visualizing this mathematically. When we have this filter at the top left corner of the input volume, it is computing multiplications between the filter and pixel values at that region. Now let’s take an example of an image that we want to classify, and let’s put our filter at the top left corner.\n\n![](https://adeshpande3.github.io/assets/OriginalAndFilter.png)\n>Remember, what we have to do is multiply the values in the filter with the original pixel values of the\n\n![](https://adeshpande3.github.io/assets/FirstPixelMulitiplication.png)\n>Basically, in the input image, if there is a shape that generally resembles the curve that this filter is representing, then all of the multiplications summed together will result in a large value! Now let’s see what happens when we move our filter.\n\n![](https://adeshpande3.github.io/assets/SecondMultiplication.png)\n>The value is much lower! This is because there wasn’t anything in the image section that responded to the curve detector filter. Remember, the output of this conv layer is an activation map. So, in the simple case of a one filter convolution (and if that filter is a curve detector), the activation map will show the areas in which there at mostly likely to be curves in the picture. In this example, the top left value of our 28 x 28 x 1 activation map will be 6600. This high value means that it is likely that there is some sort of curve in the input volume that caused the filter to activate. The top right value in our activation map will be 0 because there wasn’t anything in the input volume that caused the filter to activate (or more simply said, there wasn’t a curve in that region of the original image). Remember, this is just for one filter. This is just a filter that is going to detect lines that curve outward and to the right. We can have other filters for lines that curve to the left or for straight edges. The more filters, the greater the depth of the activation map, and the more information we have about the input volume.\n\n>Disclaimer: The filter I described in this section was simplistic for the main purpose of describing the math that goes on during a convolution. In the picture below, you’ll see some examples of actual visualizations of the filters of the first conv layer of a trained network. Nonetheless, the main argument remains the same. The filters on the first layer convolve around the input image and “activate” (or compute high values) when the specific feature it is looking for is in the input volume.\n\n![](https://adeshpande3.github.io/assets/FirstLayers.png)\n>(Quick Note: The above image came from Stanford's [CS 231N ](http://cs231n.stanford.edu/) course taught by Andrej Karpathy and Justin Johnson. Recommend for anyone looking for a deeper understanding of CNNs.)\n\n## Going Deeper Through the Network\n> Now in a traditional convolutional neural network architecture, there are other layers that are interspersed between these conv layers. I’d strongly encourage those interested to read up on them and understand their function and effects, but in a general sense, they provide nonlinearities and preservation of dimension that help to improve the robustness of the network and control overfitting. A classic CNN architecture would look like this.\n![](https://adeshpande3.github.io/assets/Table.png)\n>The last layer, however, is an important one and one that we will go into later on. Let’s just take a step back and review what we’ve learned so far. We talked about what the filters in the first conv layer are designed to detect. They detect low level features such as edges and curves. As one would imagine, in order to predict whether an image is a type of object, we need the network to be able to recognize higher level features such as hands or paws or ears. So let’s think about what the output of the network is after the first conv layer. It would be a 28 x 28 x 3 volume (assuming we use three 5 x 5 x 3 filters).  When we go through another conv layer, the output of the first conv layer becomes the input of the 2nd conv layer.  Now, this is a little bit harder to visualize. When we were talking about the first layer, the input was just the original image. However, when we’re talking about the 2nd conv layer, the input is the activation map(s) that result from the first layer. So each layer of the input is basically describing the locations in the original image for where certain low level features appear. Now when you apply a set of filters on top of that (pass it through the 2nd conv layer), the output will be activations that represent higher level features. Types of these features could be semicircles (combination of a curve and straight edge) or squares (combination of several straight edges). As you go through the network and go through more conv layers, you get activation maps that represent more and more complex features. By the end of the network, you may have some filters that activate when there is handwriting in the image, filters that activate when they see pink objects, etc. If you want more information about visualizing filters in ConvNets, Matt Zeiler and Rob Fergus had an excellent research paper discussing the topic. Jason Yosinski also has a video on YouTube that provides a great visual representation. Another interesting thing to note is that as you go deeper into the network, the filters begin to have a larger and larger receptive field, which means that they are able to consider information from a larger area of the original input volume (another way of putting it is that they are more responsive to a larger region of pixel space).\n\n## Fully Connected Layer\n>Now that we can detect these high level features, the icing on the cake is attaching a fully connected layer to the end of the network. This layer basically takes an input volume (whatever the output is of the conv or ReLU or pool layer preceding it) and outputs an N dimensional vector where N is the number of classes that the program has to choose from. For example, if you wanted a digit classification program, N would be 10 since there are 10 digits. Each number in this N dimensional vector represents the probability of a certain class. For example, if the resulting vector for a digit classification program is [0 .1 .1 .75 0 0 0 0 0 .05], then this represents a 10% probability that the image is a 1, a 10% probability that the image is a 2, a 75% probability that the image is a 3, and a 5% probability that the image is a 9 (Side note: There are other ways that you can represent the output, but I am just showing the softmax approach). The way this fully connected layer works is that it looks at the output of the previous layer (which as we remember should represent the activation maps of high level features) and determines which features most correlate to a particular class. For example, if the program is predicting that some image is a dog, it will have high values in the activation maps that represent high level features like a paw or 4 legs, etc. Similarly, if the program is predicting that some image is a bird, it will have high values in the activation maps that represent high level features like wings or a beak, etc. Basically, a FC layer looks at what high level features most strongly correlate to a particular class and has particular weights so that when you compute the products between the weights and the previous layer, you get the correct probabilities for the different classes.\n![](https://adeshpande3.github.io/assets/LeNet.png)\n\n## Training (AKA:What Makes this Stuff Work)\n>Now, this is the one aspect of neural networks that I purposely haven’t mentioned yet and it is probably the most important part. There may be a lot of questions you had while reading. How do the filters in the first conv layer know to look for edges and curves? How does the fully connected layer know what activation maps to look at? How do the filters in each layer know what values to have? The way the computer is able to adjust its filter values (or weights) is through a training process called backpropagation.\n\n>Before we get into backpropagation, we must first take a step back and talk about what a neural network needs in order to work. At the moment we all were born, our minds were fresh. We didn’t know what a cat or dog or bird was. In a similar sort of way, before the CNN starts, the weights or filter values are randomized. The filters don’t know to look for edges and curves. The filters in the higher layers don’t know to look for paws and beaks. As we grew older however, our parents and teachers showed us different pictures and images and gave us a corresponding label. This idea of being given an image and a label is the training process that CNNs go through. Before getting too into it, let’s just say that we have a training set that has thousands of images of dogs, cats, and birds and each of the images has a label of what animal that picture is. Back to backprop.\n\n>So backpropagation can be separated into 4 distinct sections, the forward pass, the loss function, the backward pass, and the weight update. During the forward pass, you take a training image which as we remember is a 32 x 32 x 3 array of numbers and pass it through the whole network. On our first training example, since all of the weights or filter values were randomly initialized, the output will probably be something like [.1 .1 .1 .1 .1 .1 .1 .1 .1 .1], basically an output that doesn’t give preference to any number in particular. The network, with its current weights, isn’t able to look for those low level features or thus isn’t able to make any reasonable conclusion about what the classification might be. This goes to the loss function part of backpropagation. Remember that what we are using right now is training data. This data has both an image and a label. Let’s say for example that the first training image inputted was a 3. The label for the image would be [0 0 0 1 0 0 0 0 0 0]. A loss function can be defined in many different ways but a common one is MSE (mean squared error), which is ½ times (actual - predicted) squared.\n\n![](https://adeshpande3.github.io/assets/Equation.png)\n>Let’s say the variable L is equal to that value. As you can imagine, the loss will be extremely high for the first couple of training images. Now, let’s just think about this intuitively. We want to get to a point where the predicted label (output of the ConvNet) is the same as the training label (This means that our network got its prediction right).In order to get there, we want to minimize the amount of loss we have. Visualizing this as just an optimization problem in calculus, we want to find out which inputs (weights in our case) most directly contributed to the loss (or error) of the network.\n\n![](https://adeshpande3.github.io/assets/Loss.png)\n\n>This is the mathematical equivalent of a dL/dW where W are the weights at a particular layer. Now, what we want to do is perform a backward pass through the network, which is determining which weights contributed most to the loss and finding ways to adjust them so that the loss decreases. Once we compute this derivative, we then go to the last step which is the weight update. This is where we take all the weights of the filters and update them so that they change in the direction of the gradient.\n\n![](https://adeshpande3.github.io/assets/Weight.png)\n\n>The learning rate is a parameter that is chosen by the programmer. A high learning rate means that bigger steps are taken in the weight updates and thus, it may take less time for the model to converge on an optimal set of weights. However, a learning rate that is too high could result in jumps that are too large and not precise enough to reach the optimal point.\n\n![](https://adeshpande3.github.io/assets/HighLR.png)\n>The process of forward pass, loss function, backward pass, and parameter update is generally called one epoch. The program will repeat this process for a fixed number of epochs for each set of training images (commonly called a batch). Once you finish the parameter update on the last training example, hopefully the network should be trained well enough so that the weights of the layers are tuned correctly.\n\n## How Companies Use CNNs\n>Data, data, data. The companies that have lots of this magic 4 letter word are the ones that have an inherent advantage over the rest of the competition. The more training data that you can give to a network, the more training iterations you can make, the more weight updates you can make, and the better tuned to the network is when it goes to production. Facebook (and Instagram) can use all the photos of the billion users it currently has, Pinterest can use information of the 50 billion pins that are on its site, Google can use search data, and Amazon can use data from the millions of products that are bought every day. And now you know the magic behind how they use it.\n\n## Disclaimer  \n>While this post should be a good start to understanding CNNs, it is by no means a comprehensive overview. Things not discussed in this post include the nonlinear and pooling layers as well as hyperparameters of the network such as filter sizes, stride, and padding. Topics like network architecture, batch normalization, vanishing gradients, dropout, initialization techniques, non-convex optimization,biases, choices of loss functions, data augmentation,regularization methods, computational considerations, modifications of backpropagation, and more were also not discussed (yet ).\n\n[Link to Part 2 ](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner's-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/)\n\nDueces. \n","source":"_posts/A-Beginner-s-Guide-To-Understanding-Convolutional-Neural-Networks.md","raw":"---\ntitle: A Beginner's Guide To Understanding Convolutional Neural Networks\ndate: 2017-04-20 21:09:57\ntags: CNN\n---\n# A Beginner's Guide To Understanding Convolutional Neural Networks\n\n![](https://adeshpande3.github.io/assets/Cover.png)\n\n## Introduction\n\n>Convolutional neural networks. Sounds like a weird combination of biology and math with a little CS sprinkled in, but these networks have been some of the most influential innovations in the field of computer vision. 2012 was the first year that neural nets grew to prominence as Alex Krizhevsky used them to win that year’s ImageNet competition (basically, the annual Olympics of computer vision), dropping the classification error record from 26% to 15%, an astounding improvement at the time.Ever since then, a host of companies have been using deep learning at the core of their services. Facebook uses neural nets for their automatic tagging algorithms, Google for their photo search, Amazon for their product recommendations, Pinterest for their home feed personalization, and Instagram for their search infrastructure.\n>顾名思义，卷积神经网络结合了生物科学、数学还有一点点的计算机科学，在计算机视觉领域取得的创新性成就让人刮目相看。 2012年，卷神经网络声名鹊起。伴随着Alex Krizhevsky用卷积神经网络在拥有一年一度的“计算机视觉奥运会”之称的ImageNet竞赛上取得了分类错误率从26%降低到15%惊人的成就，卷神经网络（CNN）声名鹊起。从那时起，许多著名的科技公司已经在他们核心业务上采用深层学习技术。 例如，Facebook利用神经网络自动标注，谷歌利用他们进行图片搜索，亚马逊的产品推荐，Pinterest的个性化订阅，以及Instagram的搜索基础服务。\n![](https://adeshpande3.github.io/assets/Companies.png)\n\n>However, the classic, and arguably most popular, use case of these networks is for image processing. Within image processing, let’s take a look at how to use these CNNs for image classification.\n>不过最经典最流行的神经网络的应用还是图像识别。接下来我们会一起看一下CNN在在图像识别领域的应用。\n\n## The Problem Space\n\n>Image classification is the task of taking an input image and outputting a class (a cat, dog, etc) or a probability of classes that best describes the image. For humans, this task of recognition is one of the first skills we learn from the moment we are born and is one that comes naturally and effortlessly as adults. Without even thinking twice, we’re able to quickly and seamlessly identify the environment we are in as well as the objects that surround us. When we see an image or just when we look at the world around us, most of the time we are able to immediately characterize the scene and give each object a label, all without even consciously noticing. \nThese skills of being able to quickly recognize patterns, generalize from prior knowledge, and adapt to different image environments are ones that we do not share with our fellow machines.\n>图像分类旨在根据输入图片输出所属类别(如猫，狗，等）或者从概率的角度判断该图片最有可能属于什么类别。对于人类而言，这是与生具来的能力而且和成人所差无几。想都不用想，人类就可以轻而易举的识别周围的环境和物体。当人类看身边的物体或者场景，人类可以立刻概括周围环境的特征并且给每个物体一个标签，甚至都不需要刻意地去关注。这些迅速识别模式、从先验知识中泛化、和适应不同环境的能力却并不为我们的机器所拥有。\n\n![](https://adeshpande3.github.io/assets/Corgi3.png)\n\n## Inputs and Outputs\n>When a computer sees an image (takes an image as input), it will see an array of pixel values. Depending on the resolution and size of the image, it will see a 32 x 32 x 3 array of numbers (The 3 refers to RGB values). Just to drive home the point, let's say we have a color image in JPG form and its size is 480 x 480. The representative array will be 480 x 480 x 3. Each of these numbers is given a value from 0 to 255 which describes the pixel intensity at that point. These numbers, while meaningless to us when we perform image classification, are the only inputs available to the computer.  The idea is that you give the computer this array of numbers and it will output numbers that describe the probability of the image being a certain class (.80 for cat, .15 for dog, .05 for bird, etc).\n\n>计算机把一幅图片理解为像素值数组，根据解析度和图片的尺寸，一副图片可能会被表示为32 * 32 * 3的多维数组(3表示RGB值)。重申一下，假如存在一副JPG格式大小为480 * 480 的图像。对应的数组的纬度将会是480 * 480 * 3. 每个元素取值范围是0-255, 描述了该像素点的情况。这些数组中的元素对于人类虽然没有什么用处，但是计算机却只能得到这些基本信息。但计算机看到这些数值组成的数组的时候，计算机会输出一些列概率值，分别描述了图片属于对应类别的可能性。\n\n## What We Want the Computer to Do\n>Now that we know the problem as well as the inputs and outputs, let’s think about how to approach this. What we want the computer to do is to be able to differentiate between all the images it’s given and figure out the unique features that make a dog a dog or that make a cat a cat. This is the process that goes on in our minds subconsciously as well. When we look at a picture of a dog, we can classify it as such if the picture has identifiable features such as paws or 4 legs. In a similar way, the computer is able perform image classification by looking for low level features such as edges and curves, and then building up to more abstract concepts through a series of convolutional layers. This is a general overview of what a CNN does. Let’s get into the specifics.\n>既然我们了解了图像识别分类的定义和计算机看到的输入和输出，我们再来想想一下人类如何做到的。 计算机分类图片和识别出类别本质上的特征这样的过程对于人类几乎是不假思索即可完成的。人类看到狗的时候，我们可以轻易的辨别狗的特征，比如爪子和四条腿。类似地，计算机也可以识别到比较低层次地特征比如边缘或者曲线， 然后通过一系列卷积层构建出层次较高的、抽象的特征。这就是CNN的基本思路。下面让我们深入地探究CNN的一些细节。\n\n## Biological Connection\n>But first, a little background. When you first heard of the term convolutional neural networks, you may have thought of something related to neuroscience or biology, and you would be right. Sort of. CNNs do take a biological inspiration from the visual cortex. The visual cortex has small regions of cells that are sensitive to specific regions of the visual field. This idea was expanded upon by a fascinating experiment by Hubel and Wiesel in 1962 (Video) where they showed that some individual neuronal cells in the brain responded (or fired) only in the presence of edges of a certain orientation. For example, some neurons fired when exposed to vertical edges and some when shown horizontal or diagonal edges. Hubel and Wiesel found out that all of these neurons were organized in a columnar architecture and that together, they were able to produce visual perception. This idea of specialized components inside of a system having specific tasks (the neuronal cells in the visual cortex looking for specific characteristics) is one that machines use as well, and is the basis behind CNNs.\n\n## Structure\n>Back to the specifics. A more detailed overview of what CNNs do would be that you take the image, pass it through a series of convolutional, nonlinear, pooling (downsampling), and fully connected layers, and get an output. As we said earlier, the output can be a single class or a probability of classes that best describes the image. Now, the hard part is understanding what each of these layers do. So let’s get into the most important one.\n\n## First Layer – Math Part\n>The first layer in a CNN is always a Convolutional Layer. First thing to make sure you remember is what the input to this conv (I’ll be using that abbreviation a lot) layer is. Like we mentioned before, the input is a 32 x 32 x 3 array of pixel values. Now, the best way to explain a conv layer is to imagine a flashlight that is shining over the top left of the image. Let’s say that the light this flashlight shines covers a 5 x 5 area. And now, let’s imagine this flashlight sliding across all the areas of the input image. In machine learning terms, this flashlight is called a filter(or sometimes referred to as a neuron or a kernel) and the region that it is shining over is called the receptive field. Now this filter is also an array of numbers (the numbers are called weights or parameters). A very important note is that the depth of this filter has to be the same as the depth of the input (this makes sure that the math works out), so the dimensions of this filter is 5 x 5 x 3. Now, let’s take the first position the filter is in for example.  It would be the top left corner. As the filter is sliding, or convolving, around the input image, it is multiplying the values in the filter with the original pixel values of the image (aka computing element wise multiplications). These multiplications are all summed up (mathematically speaking, this would be 75 multiplications in total). So now you have a single number. Remember, this number is just representative of when the filter is at the top left of the image. Now, we repeat this process for every location on the input volume. (Next step would be moving the filter to the right by 1 unit, then right again by 1, and so on). Every unique location on the input volume produces a number. After sliding the filter over all the locations, you will find out that what you’re left with is a 28 x 28 x 1 array of numbers, which we call an activation map or feature map. The reason you get a 28 x 28 array is that there are 784 different locations that a 5 x 5 filter can fit on a 32 x 32 input image. These 784 numbers are mapped to a 28 x 28 array.\n\n![](https://adeshpande3.github.io/assets/ActivationMap.png)\n\n>(Quick Note: Some of the images, including the one above, I used came from this terrific book, [\"Neural Networks and Deep Learning\"](http://neuralnetworksanddeeplearning.com/) by Michael Nielsen. Strongly recommend.)\n\n>Let’s say now we use two 5 x 5 x 3 filters instead of one. Then our output volume would be 28 x 28 x 2. By using more filters, we are able to preserve the spatial dimensions better. Mathematically, this is what’s going on in a convolutional layer.\n\n## First Layer – High Level Perspective\n>However, let’s talk about what this convolution is actually doing from a high level. Each of these filters can be thought of as feature identifiers. When I say features, I’m talking about things like straight edges, simple colors, and curves. Think about the simplest characteristics that all images have in common with each other. Let’s say our first filter is 7 x 7 x 3 and is going to be a curve detector. (In this section, let’s ignore the fact that the filter is 3 units deep and only consider the top depth slice of the filter and the image, for simplicity.)As a curve detector, the filter will have a pixel structure in which there will be higher numerical values along the area that is a shape of a curve (Remember, these filters that we’re talking about as just numbers!).       \n\n![](https://adeshpande3.github.io/assets/Filter.png)\n>Now, let’s go back to visualizing this mathematically. When we have this filter at the top left corner of the input volume, it is computing multiplications between the filter and pixel values at that region. Now let’s take an example of an image that we want to classify, and let’s put our filter at the top left corner.\n\n![](https://adeshpande3.github.io/assets/OriginalAndFilter.png)\n>Remember, what we have to do is multiply the values in the filter with the original pixel values of the\n\n![](https://adeshpande3.github.io/assets/FirstPixelMulitiplication.png)\n>Basically, in the input image, if there is a shape that generally resembles the curve that this filter is representing, then all of the multiplications summed together will result in a large value! Now let’s see what happens when we move our filter.\n\n![](https://adeshpande3.github.io/assets/SecondMultiplication.png)\n>The value is much lower! This is because there wasn’t anything in the image section that responded to the curve detector filter. Remember, the output of this conv layer is an activation map. So, in the simple case of a one filter convolution (and if that filter is a curve detector), the activation map will show the areas in which there at mostly likely to be curves in the picture. In this example, the top left value of our 28 x 28 x 1 activation map will be 6600. This high value means that it is likely that there is some sort of curve in the input volume that caused the filter to activate. The top right value in our activation map will be 0 because there wasn’t anything in the input volume that caused the filter to activate (or more simply said, there wasn’t a curve in that region of the original image). Remember, this is just for one filter. This is just a filter that is going to detect lines that curve outward and to the right. We can have other filters for lines that curve to the left or for straight edges. The more filters, the greater the depth of the activation map, and the more information we have about the input volume.\n\n>Disclaimer: The filter I described in this section was simplistic for the main purpose of describing the math that goes on during a convolution. In the picture below, you’ll see some examples of actual visualizations of the filters of the first conv layer of a trained network. Nonetheless, the main argument remains the same. The filters on the first layer convolve around the input image and “activate” (or compute high values) when the specific feature it is looking for is in the input volume.\n\n![](https://adeshpande3.github.io/assets/FirstLayers.png)\n>(Quick Note: The above image came from Stanford's [CS 231N ](http://cs231n.stanford.edu/) course taught by Andrej Karpathy and Justin Johnson. Recommend for anyone looking for a deeper understanding of CNNs.)\n\n## Going Deeper Through the Network\n> Now in a traditional convolutional neural network architecture, there are other layers that are interspersed between these conv layers. I’d strongly encourage those interested to read up on them and understand their function and effects, but in a general sense, they provide nonlinearities and preservation of dimension that help to improve the robustness of the network and control overfitting. A classic CNN architecture would look like this.\n![](https://adeshpande3.github.io/assets/Table.png)\n>The last layer, however, is an important one and one that we will go into later on. Let’s just take a step back and review what we’ve learned so far. We talked about what the filters in the first conv layer are designed to detect. They detect low level features such as edges and curves. As one would imagine, in order to predict whether an image is a type of object, we need the network to be able to recognize higher level features such as hands or paws or ears. So let’s think about what the output of the network is after the first conv layer. It would be a 28 x 28 x 3 volume (assuming we use three 5 x 5 x 3 filters).  When we go through another conv layer, the output of the first conv layer becomes the input of the 2nd conv layer.  Now, this is a little bit harder to visualize. When we were talking about the first layer, the input was just the original image. However, when we’re talking about the 2nd conv layer, the input is the activation map(s) that result from the first layer. So each layer of the input is basically describing the locations in the original image for where certain low level features appear. Now when you apply a set of filters on top of that (pass it through the 2nd conv layer), the output will be activations that represent higher level features. Types of these features could be semicircles (combination of a curve and straight edge) or squares (combination of several straight edges). As you go through the network and go through more conv layers, you get activation maps that represent more and more complex features. By the end of the network, you may have some filters that activate when there is handwriting in the image, filters that activate when they see pink objects, etc. If you want more information about visualizing filters in ConvNets, Matt Zeiler and Rob Fergus had an excellent research paper discussing the topic. Jason Yosinski also has a video on YouTube that provides a great visual representation. Another interesting thing to note is that as you go deeper into the network, the filters begin to have a larger and larger receptive field, which means that they are able to consider information from a larger area of the original input volume (another way of putting it is that they are more responsive to a larger region of pixel space).\n\n## Fully Connected Layer\n>Now that we can detect these high level features, the icing on the cake is attaching a fully connected layer to the end of the network. This layer basically takes an input volume (whatever the output is of the conv or ReLU or pool layer preceding it) and outputs an N dimensional vector where N is the number of classes that the program has to choose from. For example, if you wanted a digit classification program, N would be 10 since there are 10 digits. Each number in this N dimensional vector represents the probability of a certain class. For example, if the resulting vector for a digit classification program is [0 .1 .1 .75 0 0 0 0 0 .05], then this represents a 10% probability that the image is a 1, a 10% probability that the image is a 2, a 75% probability that the image is a 3, and a 5% probability that the image is a 9 (Side note: There are other ways that you can represent the output, but I am just showing the softmax approach). The way this fully connected layer works is that it looks at the output of the previous layer (which as we remember should represent the activation maps of high level features) and determines which features most correlate to a particular class. For example, if the program is predicting that some image is a dog, it will have high values in the activation maps that represent high level features like a paw or 4 legs, etc. Similarly, if the program is predicting that some image is a bird, it will have high values in the activation maps that represent high level features like wings or a beak, etc. Basically, a FC layer looks at what high level features most strongly correlate to a particular class and has particular weights so that when you compute the products between the weights and the previous layer, you get the correct probabilities for the different classes.\n![](https://adeshpande3.github.io/assets/LeNet.png)\n\n## Training (AKA:What Makes this Stuff Work)\n>Now, this is the one aspect of neural networks that I purposely haven’t mentioned yet and it is probably the most important part. There may be a lot of questions you had while reading. How do the filters in the first conv layer know to look for edges and curves? How does the fully connected layer know what activation maps to look at? How do the filters in each layer know what values to have? The way the computer is able to adjust its filter values (or weights) is through a training process called backpropagation.\n\n>Before we get into backpropagation, we must first take a step back and talk about what a neural network needs in order to work. At the moment we all were born, our minds were fresh. We didn’t know what a cat or dog or bird was. In a similar sort of way, before the CNN starts, the weights or filter values are randomized. The filters don’t know to look for edges and curves. The filters in the higher layers don’t know to look for paws and beaks. As we grew older however, our parents and teachers showed us different pictures and images and gave us a corresponding label. This idea of being given an image and a label is the training process that CNNs go through. Before getting too into it, let’s just say that we have a training set that has thousands of images of dogs, cats, and birds and each of the images has a label of what animal that picture is. Back to backprop.\n\n>So backpropagation can be separated into 4 distinct sections, the forward pass, the loss function, the backward pass, and the weight update. During the forward pass, you take a training image which as we remember is a 32 x 32 x 3 array of numbers and pass it through the whole network. On our first training example, since all of the weights or filter values were randomly initialized, the output will probably be something like [.1 .1 .1 .1 .1 .1 .1 .1 .1 .1], basically an output that doesn’t give preference to any number in particular. The network, with its current weights, isn’t able to look for those low level features or thus isn’t able to make any reasonable conclusion about what the classification might be. This goes to the loss function part of backpropagation. Remember that what we are using right now is training data. This data has both an image and a label. Let’s say for example that the first training image inputted was a 3. The label for the image would be [0 0 0 1 0 0 0 0 0 0]. A loss function can be defined in many different ways but a common one is MSE (mean squared error), which is ½ times (actual - predicted) squared.\n\n![](https://adeshpande3.github.io/assets/Equation.png)\n>Let’s say the variable L is equal to that value. As you can imagine, the loss will be extremely high for the first couple of training images. Now, let’s just think about this intuitively. We want to get to a point where the predicted label (output of the ConvNet) is the same as the training label (This means that our network got its prediction right).In order to get there, we want to minimize the amount of loss we have. Visualizing this as just an optimization problem in calculus, we want to find out which inputs (weights in our case) most directly contributed to the loss (or error) of the network.\n\n![](https://adeshpande3.github.io/assets/Loss.png)\n\n>This is the mathematical equivalent of a dL/dW where W are the weights at a particular layer. Now, what we want to do is perform a backward pass through the network, which is determining which weights contributed most to the loss and finding ways to adjust them so that the loss decreases. Once we compute this derivative, we then go to the last step which is the weight update. This is where we take all the weights of the filters and update them so that they change in the direction of the gradient.\n\n![](https://adeshpande3.github.io/assets/Weight.png)\n\n>The learning rate is a parameter that is chosen by the programmer. A high learning rate means that bigger steps are taken in the weight updates and thus, it may take less time for the model to converge on an optimal set of weights. However, a learning rate that is too high could result in jumps that are too large and not precise enough to reach the optimal point.\n\n![](https://adeshpande3.github.io/assets/HighLR.png)\n>The process of forward pass, loss function, backward pass, and parameter update is generally called one epoch. The program will repeat this process for a fixed number of epochs for each set of training images (commonly called a batch). Once you finish the parameter update on the last training example, hopefully the network should be trained well enough so that the weights of the layers are tuned correctly.\n\n## How Companies Use CNNs\n>Data, data, data. The companies that have lots of this magic 4 letter word are the ones that have an inherent advantage over the rest of the competition. The more training data that you can give to a network, the more training iterations you can make, the more weight updates you can make, and the better tuned to the network is when it goes to production. Facebook (and Instagram) can use all the photos of the billion users it currently has, Pinterest can use information of the 50 billion pins that are on its site, Google can use search data, and Amazon can use data from the millions of products that are bought every day. And now you know the magic behind how they use it.\n\n## Disclaimer  \n>While this post should be a good start to understanding CNNs, it is by no means a comprehensive overview. Things not discussed in this post include the nonlinear and pooling layers as well as hyperparameters of the network such as filter sizes, stride, and padding. Topics like network architecture, batch normalization, vanishing gradients, dropout, initialization techniques, non-convex optimization,biases, choices of loss functions, data augmentation,regularization methods, computational considerations, modifications of backpropagation, and more were also not discussed (yet ).\n\n[Link to Part 2 ](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner's-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/)\n\nDueces. \n","slug":"A-Beginner-s-Guide-To-Understanding-Convolutional-Neural-Networks","published":1,"updated":"2017-04-25T11:19:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elb0009bnavu1fybung","content":"<h1 id=\"A-Beginner&#x2019;s-Guide-To-Understanding-Convolutional-Neural-Networks\"><a href=\"#A-Beginner&#x2019;s-Guide-To-Understanding-Convolutional-Neural-Networks\" class=\"headerlink\" title=\"A Beginner&#x2019;s Guide To Understanding Convolutional Neural Networks\"></a>A Beginner&#x2019;s Guide To Understanding Convolutional Neural Networks</h1><p><img src=\"https://adeshpande3.github.io/assets/Cover.png\" alt=\"\"></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><blockquote>\n<p>Convolutional neural networks. Sounds like a weird combination of biology and math with a little CS sprinkled in, but these networks have been some of the most influential innovations in the field of computer vision. 2012 was the first year that neural nets grew to prominence as Alex Krizhevsky used them to win that year&#x2019;s ImageNet competition (basically, the annual Olympics of computer vision), dropping the classification error record from 26% to 15%, an astounding improvement at the time.Ever since then, a host of companies have been using deep learning at the core of their services. Facebook uses neural nets for their automatic tagging algorithms, Google for their photo search, Amazon for their product recommendations, Pinterest for their home feed personalization, and Instagram for their search infrastructure.<br>&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7ED3;&#x5408;&#x4E86;&#x751F;&#x7269;&#x79D1;&#x5B66;&#x3001;&#x6570;&#x5B66;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x70B9;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x53D6;&#x5F97;&#x7684;&#x521B;&#x65B0;&#x6027;&#x6210;&#x5C31;&#x8BA9;&#x4EBA;&#x522E;&#x76EE;&#x76F8;&#x770B;&#x3002; 2012&#x5E74;&#xFF0C;&#x5377;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x58F0;&#x540D;&#x9E4A;&#x8D77;&#x3002;&#x4F34;&#x968F;&#x7740;Alex Krizhevsky&#x7528;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5728;&#x62E5;&#x6709;&#x4E00;&#x5E74;&#x4E00;&#x5EA6;&#x7684;&#x201C;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x5965;&#x8FD0;&#x4F1A;&#x201D;&#x4E4B;&#x79F0;&#x7684;ImageNet&#x7ADE;&#x8D5B;&#x4E0A;&#x53D6;&#x5F97;&#x4E86;&#x5206;&#x7C7B;&#x9519;&#x8BEF;&#x7387;&#x4ECE;26%&#x964D;&#x4F4E;&#x5230;15%&#x60CA;&#x4EBA;&#x7684;&#x6210;&#x5C31;&#xFF0C;&#x5377;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF08;CNN&#xFF09;&#x58F0;&#x540D;&#x9E4A;&#x8D77;&#x3002;&#x4ECE;&#x90A3;&#x65F6;&#x8D77;&#xFF0C;&#x8BB8;&#x591A;&#x8457;&#x540D;&#x7684;&#x79D1;&#x6280;&#x516C;&#x53F8;&#x5DF2;&#x7ECF;&#x5728;&#x4ED6;&#x4EEC;&#x6838;&#x5FC3;&#x4E1A;&#x52A1;&#x4E0A;&#x91C7;&#x7528;&#x6DF1;&#x5C42;&#x5B66;&#x4E60;&#x6280;&#x672F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;Facebook&#x5229;&#x7528;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x81EA;&#x52A8;&#x6807;&#x6CE8;&#xFF0C;&#x8C37;&#x6B4C;&#x5229;&#x7528;&#x4ED6;&#x4EEC;&#x8FDB;&#x884C;&#x56FE;&#x7247;&#x641C;&#x7D22;&#xFF0C;&#x4E9A;&#x9A6C;&#x900A;&#x7684;&#x4EA7;&#x54C1;&#x63A8;&#x8350;&#xFF0C;Pinterest&#x7684;&#x4E2A;&#x6027;&#x5316;&#x8BA2;&#x9605;&#xFF0C;&#x4EE5;&#x53CA;Instagram&#x7684;&#x641C;&#x7D22;&#x57FA;&#x7840;&#x670D;&#x52A1;&#x3002;<br><img src=\"https://adeshpande3.github.io/assets/Companies.png\" alt=\"\"></p>\n</blockquote>\n<blockquote>\n<p>However, the classic, and arguably most popular, use case of these networks is for image processing. Within image processing, let&#x2019;s take a look at how to use these CNNs for image classification.<br>&#x4E0D;&#x8FC7;&#x6700;&#x7ECF;&#x5178;&#x6700;&#x6D41;&#x884C;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5E94;&#x7528;&#x8FD8;&#x662F;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x4F1A;&#x4E00;&#x8D77;&#x770B;&#x4E00;&#x4E0B;CNN&#x5728;&#x5728;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x9886;&#x57DF;&#x7684;&#x5E94;&#x7528;&#x3002;</p>\n</blockquote>\n<h2 id=\"The-Problem-Space\"><a href=\"#The-Problem-Space\" class=\"headerlink\" title=\"The Problem Space\"></a>The Problem Space</h2><blockquote>\n<p>Image classification is the task of taking an input image and outputting a class (a cat, dog, etc) or a probability of classes that best describes the image. For humans, this task of recognition is one of the first skills we learn from the moment we are born and is one that comes naturally and effortlessly as adults. Without even thinking twice, we&#x2019;re able to quickly and seamlessly identify the environment we are in as well as the objects that surround us. When we see an image or just when we look at the world around us, most of the time we are able to immediately characterize the scene and give each object a label, all without even consciously noticing.<br>These skills of being able to quickly recognize patterns, generalize from prior knowledge, and adapt to different image environments are ones that we do not share with our fellow machines.<br>&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#x65E8;&#x5728;&#x6839;&#x636E;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x8F93;&#x51FA;&#x6240;&#x5C5E;&#x7C7B;&#x522B;(&#x5982;&#x732B;&#xFF0C;&#x72D7;&#xFF0C;&#x7B49;&#xFF09;&#x6216;&#x8005;&#x4ECE;&#x6982;&#x7387;&#x7684;&#x89D2;&#x5EA6;&#x5224;&#x65AD;&#x8BE5;&#x56FE;&#x7247;&#x6700;&#x6709;&#x53EF;&#x80FD;&#x5C5E;&#x4E8E;&#x4EC0;&#x4E48;&#x7C7B;&#x522B;&#x3002;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x800C;&#x8A00;&#xFF0C;&#x8FD9;&#x662F;&#x4E0E;&#x751F;&#x5177;&#x6765;&#x7684;&#x80FD;&#x529B;&#x800C;&#x4E14;&#x548C;&#x6210;&#x4EBA;&#x6240;&#x5DEE;&#x65E0;&#x51E0;&#x3002;&#x60F3;&#x90FD;&#x4E0D;&#x7528;&#x60F3;&#xFF0C;&#x4EBA;&#x7C7B;&#x5C31;&#x53EF;&#x4EE5;&#x8F7B;&#x800C;&#x6613;&#x4E3E;&#x7684;&#x8BC6;&#x522B;&#x5468;&#x56F4;&#x7684;&#x73AF;&#x5883;&#x548C;&#x7269;&#x4F53;&#x3002;&#x5F53;&#x4EBA;&#x7C7B;&#x770B;&#x8EAB;&#x8FB9;&#x7684;&#x7269;&#x4F53;&#x6216;&#x8005;&#x573A;&#x666F;&#xFF0C;&#x4EBA;&#x7C7B;&#x53EF;&#x4EE5;&#x7ACB;&#x523B;&#x6982;&#x62EC;&#x5468;&#x56F4;&#x73AF;&#x5883;&#x7684;&#x7279;&#x5F81;&#x5E76;&#x4E14;&#x7ED9;&#x6BCF;&#x4E2A;&#x7269;&#x4F53;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x751A;&#x81F3;&#x90FD;&#x4E0D;&#x9700;&#x8981;&#x523B;&#x610F;&#x5730;&#x53BB;&#x5173;&#x6CE8;&#x3002;&#x8FD9;&#x4E9B;&#x8FC5;&#x901F;&#x8BC6;&#x522B;&#x6A21;&#x5F0F;&#x3001;&#x4ECE;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E2D;&#x6CDB;&#x5316;&#x3001;&#x548C;&#x9002;&#x5E94;&#x4E0D;&#x540C;&#x73AF;&#x5883;&#x7684;&#x80FD;&#x529B;&#x5374;&#x5E76;&#x4E0D;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x673A;&#x5668;&#x6240;&#x62E5;&#x6709;&#x3002;</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Corgi3.png\" alt=\"\"></p>\n<h2 id=\"Inputs-and-Outputs\"><a href=\"#Inputs-and-Outputs\" class=\"headerlink\" title=\"Inputs and Outputs\"></a>Inputs and Outputs</h2><blockquote>\n<p>When a computer sees an image (takes an image as input), it will see an array of pixel values. Depending on the resolution and size of the image, it will see a 32 x 32 x 3 array of numbers (The 3 refers to RGB values). Just to drive home the point, let&#x2019;s say we have a color image in JPG form and its size is 480 x 480. The representative array will be 480 x 480 x 3. Each of these numbers is given a value from 0 to 255 which describes the pixel intensity at that point. These numbers, while meaningless to us when we perform image classification, are the only inputs available to the computer.  The idea is that you give the computer this array of numbers and it will output numbers that describe the probability of the image being a certain class (.80 for cat, .15 for dog, .05 for bird, etc).</p>\n</blockquote>\n<blockquote>\n<p>&#x8BA1;&#x7B97;&#x673A;&#x628A;&#x4E00;&#x5E45;&#x56FE;&#x7247;&#x7406;&#x89E3;&#x4E3A;&#x50CF;&#x7D20;&#x503C;&#x6570;&#x7EC4;&#xFF0C;&#x6839;&#x636E;&#x89E3;&#x6790;&#x5EA6;&#x548C;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x4E00;&#x526F;&#x56FE;&#x7247;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x8868;&#x793A;&#x4E3A;32 <em> 32 </em> 3&#x7684;&#x591A;&#x7EF4;&#x6570;&#x7EC4;(3&#x8868;&#x793A;RGB&#x503C;)&#x3002;&#x91CD;&#x7533;&#x4E00;&#x4E0B;&#xFF0C;&#x5047;&#x5982;&#x5B58;&#x5728;&#x4E00;&#x526F;JPG&#x683C;&#x5F0F;&#x5927;&#x5C0F;&#x4E3A;480 <em> 480 &#x7684;&#x56FE;&#x50CF;&#x3002;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x7EAC;&#x5EA6;&#x5C06;&#x4F1A;&#x662F;480 </em> 480 * 3. &#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;0-255, &#x63CF;&#x8FF0;&#x4E86;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x867D;&#x7136;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x5904;&#xFF0C;&#x4F46;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x5374;&#x53EA;&#x80FD;&#x5F97;&#x5230;&#x8FD9;&#x4E9B;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x3002;&#x4F46;&#x8BA1;&#x7B97;&#x673A;&#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x6570;&#x503C;&#x7EC4;&#x6210;&#x7684;&#x6570;&#x7EC4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E9B;&#x5217;&#x6982;&#x7387;&#x503C;&#xFF0C;&#x5206;&#x522B;&#x63CF;&#x8FF0;&#x4E86;&#x56FE;&#x7247;&#x5C5E;&#x4E8E;&#x5BF9;&#x5E94;&#x7C7B;&#x522B;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002;</p>\n</blockquote>\n<h2 id=\"What-We-Want-the-Computer-to-Do\"><a href=\"#What-We-Want-the-Computer-to-Do\" class=\"headerlink\" title=\"What We Want the Computer to Do\"></a>What We Want the Computer to Do</h2><blockquote>\n<p>Now that we know the problem as well as the inputs and outputs, let&#x2019;s think about how to approach this. What we want the computer to do is to be able to differentiate between all the images it&#x2019;s given and figure out the unique features that make a dog a dog or that make a cat a cat. This is the process that goes on in our minds subconsciously as well. When we look at a picture of a dog, we can classify it as such if the picture has identifiable features such as paws or 4 legs. In a similar way, the computer is able perform image classification by looking for low level features such as edges and curves, and then building up to more abstract concepts through a series of convolutional layers. This is a general overview of what a CNN does. Let&#x2019;s get into the specifics.<br>&#x65E2;&#x7136;&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#x4E86;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x5206;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x770B;&#x5230;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x60F3;&#x60F3;&#x4E00;&#x4E0B;&#x4EBA;&#x7C7B;&#x5982;&#x4F55;&#x505A;&#x5230;&#x7684;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x5206;&#x7C7B;&#x56FE;&#x7247;&#x548C;&#x8BC6;&#x522B;&#x51FA;&#x7C7B;&#x522B;&#x672C;&#x8D28;&#x4E0A;&#x7684;&#x7279;&#x5F81;&#x8FD9;&#x6837;&#x7684;&#x8FC7;&#x7A0B;&#x5BF9;&#x4E8E;&#x4EBA;&#x7C7B;&#x51E0;&#x4E4E;&#x662F;&#x4E0D;&#x5047;&#x601D;&#x7D22;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4EBA;&#x7C7B;&#x770B;&#x5230;&#x72D7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x6613;&#x7684;&#x8FA8;&#x522B;&#x72D7;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x722A;&#x5B50;&#x548C;&#x56DB;&#x6761;&#x817F;&#x3002;&#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E5F;&#x53EF;&#x4EE5;&#x8BC6;&#x522B;&#x5230;&#x6BD4;&#x8F83;&#x4F4E;&#x5C42;&#x6B21;&#x5730;&#x7279;&#x5F81;&#x6BD4;&#x5982;&#x8FB9;&#x7F18;&#x6216;&#x8005;&#x66F2;&#x7EBF;&#xFF0C; &#x7136;&#x540E;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x5377;&#x79EF;&#x5C42;&#x6784;&#x5EFA;&#x51FA;&#x5C42;&#x6B21;&#x8F83;&#x9AD8;&#x7684;&#x3001;&#x62BD;&#x8C61;&#x7684;&#x7279;&#x5F81;&#x3002;&#x8FD9;&#x5C31;&#x662F;CNN&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x3002;&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x6DF1;&#x5165;&#x5730;&#x63A2;&#x7A76;CNN&#x7684;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x3002;</p>\n</blockquote>\n<h2 id=\"Biological-Connection\"><a href=\"#Biological-Connection\" class=\"headerlink\" title=\"Biological Connection\"></a>Biological Connection</h2><blockquote>\n<p>But first, a little background. When you first heard of the term convolutional neural networks, you may have thought of something related to neuroscience or biology, and you would be right. Sort of. CNNs do take a biological inspiration from the visual cortex. The visual cortex has small regions of cells that are sensitive to specific regions of the visual field. This idea was expanded upon by a fascinating experiment by Hubel and Wiesel in 1962 (Video) where they showed that some individual neuronal cells in the brain responded (or fired) only in the presence of edges of a certain orientation. For example, some neurons fired when exposed to vertical edges and some when shown horizontal or diagonal edges. Hubel and Wiesel found out that all of these neurons were organized in a columnar architecture and that together, they were able to produce visual perception. This idea of specialized components inside of a system having specific tasks (the neuronal cells in the visual cortex looking for specific characteristics) is one that machines use as well, and is the basis behind CNNs.</p>\n</blockquote>\n<h2 id=\"Structure\"><a href=\"#Structure\" class=\"headerlink\" title=\"Structure\"></a>Structure</h2><blockquote>\n<p>Back to the specifics. A more detailed overview of what CNNs do would be that you take the image, pass it through a series of convolutional, nonlinear, pooling (downsampling), and fully connected layers, and get an output. As we said earlier, the output can be a single class or a probability of classes that best describes the image. Now, the hard part is understanding what each of these layers do. So let&#x2019;s get into the most important one.</p>\n</blockquote>\n<h2 id=\"First-Layer-&#x2013;-Math-Part\"><a href=\"#First-Layer-&#x2013;-Math-Part\" class=\"headerlink\" title=\"First Layer &#x2013; Math Part\"></a>First Layer &#x2013; Math Part</h2><blockquote>\n<p>The first layer in a CNN is always a Convolutional Layer. First thing to make sure you remember is what the input to this conv (I&#x2019;ll be using that abbreviation a lot) layer is. Like we mentioned before, the input is a 32 x 32 x 3 array of pixel values. Now, the best way to explain a conv layer is to imagine a flashlight that is shining over the top left of the image. Let&#x2019;s say that the light this flashlight shines covers a 5 x 5 area. And now, let&#x2019;s imagine this flashlight sliding across all the areas of the input image. In machine learning terms, this flashlight is called a filter(or sometimes referred to as a neuron or a kernel) and the region that it is shining over is called the receptive field. Now this filter is also an array of numbers (the numbers are called weights or parameters). A very important note is that the depth of this filter has to be the same as the depth of the input (this makes sure that the math works out), so the dimensions of this filter is 5 x 5 x 3. Now, let&#x2019;s take the first position the filter is in for example.  It would be the top left corner. As the filter is sliding, or convolving, around the input image, it is multiplying the values in the filter with the original pixel values of the image (aka computing element wise multiplications). These multiplications are all summed up (mathematically speaking, this would be 75 multiplications in total). So now you have a single number. Remember, this number is just representative of when the filter is at the top left of the image. Now, we repeat this process for every location on the input volume. (Next step would be moving the filter to the right by 1 unit, then right again by 1, and so on). Every unique location on the input volume produces a number. After sliding the filter over all the locations, you will find out that what you&#x2019;re left with is a 28 x 28 x 1 array of numbers, which we call an activation map or feature map. The reason you get a 28 x 28 array is that there are 784 different locations that a 5 x 5 filter can fit on a 32 x 32 input image. These 784 numbers are mapped to a 28 x 28 array.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/ActivationMap.png\" alt=\"\"></p>\n<blockquote>\n<p>(Quick Note: Some of the images, including the one above, I used came from this terrific book, <a href=\"http://neuralnetworksanddeeplearning.com/\" target=\"_blank\" rel=\"external\">&#x201C;Neural Networks and Deep Learning&#x201D;</a> by Michael Nielsen. Strongly recommend.)</p>\n</blockquote>\n<blockquote>\n<p>Let&#x2019;s say now we use two 5 x 5 x 3 filters instead of one. Then our output volume would be 28 x 28 x 2. By using more filters, we are able to preserve the spatial dimensions better. Mathematically, this is what&#x2019;s going on in a convolutional layer.</p>\n</blockquote>\n<h2 id=\"First-Layer-&#x2013;-High-Level-Perspective\"><a href=\"#First-Layer-&#x2013;-High-Level-Perspective\" class=\"headerlink\" title=\"First Layer &#x2013; High Level Perspective\"></a>First Layer &#x2013; High Level Perspective</h2><blockquote>\n<p>However, let&#x2019;s talk about what this convolution is actually doing from a high level. Each of these filters can be thought of as feature identifiers. When I say features, I&#x2019;m talking about things like straight edges, simple colors, and curves. Think about the simplest characteristics that all images have in common with each other. Let&#x2019;s say our first filter is 7 x 7 x 3 and is going to be a curve detector. (In this section, let&#x2019;s ignore the fact that the filter is 3 units deep and only consider the top depth slice of the filter and the image, for simplicity.)As a curve detector, the filter will have a pixel structure in which there will be higher numerical values along the area that is a shape of a curve (Remember, these filters that we&#x2019;re talking about as just numbers!).       </p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Filter.png\" alt=\"\"></p>\n<blockquote>\n<p>Now, let&#x2019;s go back to visualizing this mathematically. When we have this filter at the top left corner of the input volume, it is computing multiplications between the filter and pixel values at that region. Now let&#x2019;s take an example of an image that we want to classify, and let&#x2019;s put our filter at the top left corner.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/OriginalAndFilter.png\" alt=\"\"></p>\n<blockquote>\n<p>Remember, what we have to do is multiply the values in the filter with the original pixel values of the</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/FirstPixelMulitiplication.png\" alt=\"\"></p>\n<blockquote>\n<p>Basically, in the input image, if there is a shape that generally resembles the curve that this filter is representing, then all of the multiplications summed together will result in a large value! Now let&#x2019;s see what happens when we move our filter.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/SecondMultiplication.png\" alt=\"\"></p>\n<blockquote>\n<p>The value is much lower! This is because there wasn&#x2019;t anything in the image section that responded to the curve detector filter. Remember, the output of this conv layer is an activation map. So, in the simple case of a one filter convolution (and if that filter is a curve detector), the activation map will show the areas in which there at mostly likely to be curves in the picture. In this example, the top left value of our 28 x 28 x 1 activation map will be 6600. This high value means that it is likely that there is some sort of curve in the input volume that caused the filter to activate. The top right value in our activation map will be 0 because there wasn&#x2019;t anything in the input volume that caused the filter to activate (or more simply said, there wasn&#x2019;t a curve in that region of the original image). Remember, this is just for one filter. This is just a filter that is going to detect lines that curve outward and to the right. We can have other filters for lines that curve to the left or for straight edges. The more filters, the greater the depth of the activation map, and the more information we have about the input volume.</p>\n</blockquote>\n<blockquote>\n<p>Disclaimer: The filter I described in this section was simplistic for the main purpose of describing the math that goes on during a convolution. In the picture below, you&#x2019;ll see some examples of actual visualizations of the filters of the first conv layer of a trained network. Nonetheless, the main argument remains the same. The filters on the first layer convolve around the input image and &#x201C;activate&#x201D; (or compute high values) when the specific feature it is looking for is in the input volume.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/FirstLayers.png\" alt=\"\"></p>\n<blockquote>\n<p>(Quick Note: The above image came from Stanford&#x2019;s <a href=\"http://cs231n.stanford.edu/\" target=\"_blank\" rel=\"external\">CS 231N </a> course taught by Andrej Karpathy and Justin Johnson. Recommend for anyone looking for a deeper understanding of CNNs.)</p>\n</blockquote>\n<h2 id=\"Going-Deeper-Through-the-Network\"><a href=\"#Going-Deeper-Through-the-Network\" class=\"headerlink\" title=\"Going Deeper Through the Network\"></a>Going Deeper Through the Network</h2><blockquote>\n<p>Now in a traditional convolutional neural network architecture, there are other layers that are interspersed between these conv layers. I&#x2019;d strongly encourage those interested to read up on them and understand their function and effects, but in a general sense, they provide nonlinearities and preservation of dimension that help to improve the robustness of the network and control overfitting. A classic CNN architecture would look like this.<br><img src=\"https://adeshpande3.github.io/assets/Table.png\" alt=\"\"><br>The last layer, however, is an important one and one that we will go into later on. Let&#x2019;s just take a step back and review what we&#x2019;ve learned so far. We talked about what the filters in the first conv layer are designed to detect. They detect low level features such as edges and curves. As one would imagine, in order to predict whether an image is a type of object, we need the network to be able to recognize higher level features such as hands or paws or ears. So let&#x2019;s think about what the output of the network is after the first conv layer. It would be a 28 x 28 x 3 volume (assuming we use three 5 x 5 x 3 filters).  When we go through another conv layer, the output of the first conv layer becomes the input of the 2nd conv layer.  Now, this is a little bit harder to visualize. When we were talking about the first layer, the input was just the original image. However, when we&#x2019;re talking about the 2nd conv layer, the input is the activation map(s) that result from the first layer. So each layer of the input is basically describing the locations in the original image for where certain low level features appear. Now when you apply a set of filters on top of that (pass it through the 2nd conv layer), the output will be activations that represent higher level features. Types of these features could be semicircles (combination of a curve and straight edge) or squares (combination of several straight edges). As you go through the network and go through more conv layers, you get activation maps that represent more and more complex features. By the end of the network, you may have some filters that activate when there is handwriting in the image, filters that activate when they see pink objects, etc. If you want more information about visualizing filters in ConvNets, Matt Zeiler and Rob Fergus had an excellent research paper discussing the topic. Jason Yosinski also has a video on YouTube that provides a great visual representation. Another interesting thing to note is that as you go deeper into the network, the filters begin to have a larger and larger receptive field, which means that they are able to consider information from a larger area of the original input volume (another way of putting it is that they are more responsive to a larger region of pixel space).</p>\n</blockquote>\n<h2 id=\"Fully-Connected-Layer\"><a href=\"#Fully-Connected-Layer\" class=\"headerlink\" title=\"Fully Connected Layer\"></a>Fully Connected Layer</h2><blockquote>\n<p>Now that we can detect these high level features, the icing on the cake is attaching a fully connected layer to the end of the network. This layer basically takes an input volume (whatever the output is of the conv or ReLU or pool layer preceding it) and outputs an N dimensional vector where N is the number of classes that the program has to choose from. For example, if you wanted a digit classification program, N would be 10 since there are 10 digits. Each number in this N dimensional vector represents the probability of a certain class. For example, if the resulting vector for a digit classification program is [0 .1 .1 .75 0 0 0 0 0 .05], then this represents a 10% probability that the image is a 1, a 10% probability that the image is a 2, a 75% probability that the image is a 3, and a 5% probability that the image is a 9 (Side note: There are other ways that you can represent the output, but I am just showing the softmax approach). The way this fully connected layer works is that it looks at the output of the previous layer (which as we remember should represent the activation maps of high level features) and determines which features most correlate to a particular class. For example, if the program is predicting that some image is a dog, it will have high values in the activation maps that represent high level features like a paw or 4 legs, etc. Similarly, if the program is predicting that some image is a bird, it will have high values in the activation maps that represent high level features like wings or a beak, etc. Basically, a FC layer looks at what high level features most strongly correlate to a particular class and has particular weights so that when you compute the products between the weights and the previous layer, you get the correct probabilities for the different classes.<br><img src=\"https://adeshpande3.github.io/assets/LeNet.png\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"Training-AKA-What-Makes-this-Stuff-Work\"><a href=\"#Training-AKA-What-Makes-this-Stuff-Work\" class=\"headerlink\" title=\"Training (AKA:What Makes this Stuff Work)\"></a>Training (AKA:What Makes this Stuff Work)</h2><blockquote>\n<p>Now, this is the one aspect of neural networks that I purposely haven&#x2019;t mentioned yet and it is probably the most important part. There may be a lot of questions you had while reading. How do the filters in the first conv layer know to look for edges and curves? How does the fully connected layer know what activation maps to look at? How do the filters in each layer know what values to have? The way the computer is able to adjust its filter values (or weights) is through a training process called backpropagation.</p>\n</blockquote>\n<blockquote>\n<p>Before we get into backpropagation, we must first take a step back and talk about what a neural network needs in order to work. At the moment we all were born, our minds were fresh. We didn&#x2019;t know what a cat or dog or bird was. In a similar sort of way, before the CNN starts, the weights or filter values are randomized. The filters don&#x2019;t know to look for edges and curves. The filters in the higher layers don&#x2019;t know to look for paws and beaks. As we grew older however, our parents and teachers showed us different pictures and images and gave us a corresponding label. This idea of being given an image and a label is the training process that CNNs go through. Before getting too into it, let&#x2019;s just say that we have a training set that has thousands of images of dogs, cats, and birds and each of the images has a label of what animal that picture is. Back to backprop.</p>\n</blockquote>\n<blockquote>\n<p>So backpropagation can be separated into 4 distinct sections, the forward pass, the loss function, the backward pass, and the weight update. During the forward pass, you take a training image which as we remember is a 32 x 32 x 3 array of numbers and pass it through the whole network. On our first training example, since all of the weights or filter values were randomly initialized, the output will probably be something like [.1 .1 .1 .1 .1 .1 .1 .1 .1 .1], basically an output that doesn&#x2019;t give preference to any number in particular. The network, with its current weights, isn&#x2019;t able to look for those low level features or thus isn&#x2019;t able to make any reasonable conclusion about what the classification might be. This goes to the loss function part of backpropagation. Remember that what we are using right now is training data. This data has both an image and a label. Let&#x2019;s say for example that the first training image inputted was a 3. The label for the image would be [0 0 0 1 0 0 0 0 0 0]. A loss function can be defined in many different ways but a common one is MSE (mean squared error), which is &#xBD; times (actual - predicted) squared.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Equation.png\" alt=\"\"></p>\n<blockquote>\n<p>Let&#x2019;s say the variable L is equal to that value. As you can imagine, the loss will be extremely high for the first couple of training images. Now, let&#x2019;s just think about this intuitively. We want to get to a point where the predicted label (output of the ConvNet) is the same as the training label (This means that our network got its prediction right).In order to get there, we want to minimize the amount of loss we have. Visualizing this as just an optimization problem in calculus, we want to find out which inputs (weights in our case) most directly contributed to the loss (or error) of the network.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Loss.png\" alt=\"\"></p>\n<blockquote>\n<p>This is the mathematical equivalent of a dL/dW where W are the weights at a particular layer. Now, what we want to do is perform a backward pass through the network, which is determining which weights contributed most to the loss and finding ways to adjust them so that the loss decreases. Once we compute this derivative, we then go to the last step which is the weight update. This is where we take all the weights of the filters and update them so that they change in the direction of the gradient.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Weight.png\" alt=\"\"></p>\n<blockquote>\n<p>The learning rate is a parameter that is chosen by the programmer. A high learning rate means that bigger steps are taken in the weight updates and thus, it may take less time for the model to converge on an optimal set of weights. However, a learning rate that is too high could result in jumps that are too large and not precise enough to reach the optimal point.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/HighLR.png\" alt=\"\"></p>\n<blockquote>\n<p>The process of forward pass, loss function, backward pass, and parameter update is generally called one epoch. The program will repeat this process for a fixed number of epochs for each set of training images (commonly called a batch). Once you finish the parameter update on the last training example, hopefully the network should be trained well enough so that the weights of the layers are tuned correctly.</p>\n</blockquote>\n<h2 id=\"How-Companies-Use-CNNs\"><a href=\"#How-Companies-Use-CNNs\" class=\"headerlink\" title=\"How Companies Use CNNs\"></a>How Companies Use CNNs</h2><blockquote>\n<p>Data, data, data. The companies that have lots of this magic 4 letter word are the ones that have an inherent advantage over the rest of the competition. The more training data that you can give to a network, the more training iterations you can make, the more weight updates you can make, and the better tuned to the network is when it goes to production. Facebook (and Instagram) can use all the photos of the billion users it currently has, Pinterest can use information of the 50 billion pins that are on its site, Google can use search data, and Amazon can use data from the millions of products that are bought every day. And now you know the magic behind how they use it.</p>\n</blockquote>\n<h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"Disclaimer\"></a>Disclaimer</h2><blockquote>\n<p>While this post should be a good start to understanding CNNs, it is by no means a comprehensive overview. Things not discussed in this post include the nonlinear and pooling layers as well as hyperparameters of the network such as filter sizes, stride, and padding. Topics like network architecture, batch normalization, vanishing gradients, dropout, initialization techniques, non-convex optimization,biases, choices of loss functions, data augmentation,regularization methods, computational considerations, modifications of backpropagation, and more were also not discussed (yet ).</p>\n</blockquote>\n<p><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&apos;s-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/\" target=\"_blank\" rel=\"external\">Link to Part 2 </a></p>\n<p>Dueces. </p>\n","excerpt":"","more":"<h1 id=\"A-Beginner’s-Guide-To-Understanding-Convolutional-Neural-Networks\"><a href=\"#A-Beginner’s-Guide-To-Understanding-Convolutional-Neural-Networks\" class=\"headerlink\" title=\"A Beginner’s Guide To Understanding Convolutional Neural Networks\"></a>A Beginner’s Guide To Understanding Convolutional Neural Networks</h1><p><img src=\"https://adeshpande3.github.io/assets/Cover.png\" alt=\"\"></p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><blockquote>\n<p>Convolutional neural networks. Sounds like a weird combination of biology and math with a little CS sprinkled in, but these networks have been some of the most influential innovations in the field of computer vision. 2012 was the first year that neural nets grew to prominence as Alex Krizhevsky used them to win that year’s ImageNet competition (basically, the annual Olympics of computer vision), dropping the classification error record from 26% to 15%, an astounding improvement at the time.Ever since then, a host of companies have been using deep learning at the core of their services. Facebook uses neural nets for their automatic tagging algorithms, Google for their photo search, Amazon for their product recommendations, Pinterest for their home feed personalization, and Instagram for their search infrastructure.<br>顾名思义，卷积神经网络结合了生物科学、数学还有一点点的计算机科学，在计算机视觉领域取得的创新性成就让人刮目相看。 2012年，卷神经网络声名鹊起。伴随着Alex Krizhevsky用卷积神经网络在拥有一年一度的“计算机视觉奥运会”之称的ImageNet竞赛上取得了分类错误率从26%降低到15%惊人的成就，卷神经网络（CNN）声名鹊起。从那时起，许多著名的科技公司已经在他们核心业务上采用深层学习技术。 例如，Facebook利用神经网络自动标注，谷歌利用他们进行图片搜索，亚马逊的产品推荐，Pinterest的个性化订阅，以及Instagram的搜索基础服务。<br><img src=\"https://adeshpande3.github.io/assets/Companies.png\" alt=\"\"></p>\n</blockquote>\n<blockquote>\n<p>However, the classic, and arguably most popular, use case of these networks is for image processing. Within image processing, let’s take a look at how to use these CNNs for image classification.<br>不过最经典最流行的神经网络的应用还是图像识别。接下来我们会一起看一下CNN在在图像识别领域的应用。</p>\n</blockquote>\n<h2 id=\"The-Problem-Space\"><a href=\"#The-Problem-Space\" class=\"headerlink\" title=\"The Problem Space\"></a>The Problem Space</h2><blockquote>\n<p>Image classification is the task of taking an input image and outputting a class (a cat, dog, etc) or a probability of classes that best describes the image. For humans, this task of recognition is one of the first skills we learn from the moment we are born and is one that comes naturally and effortlessly as adults. Without even thinking twice, we’re able to quickly and seamlessly identify the environment we are in as well as the objects that surround us. When we see an image or just when we look at the world around us, most of the time we are able to immediately characterize the scene and give each object a label, all without even consciously noticing.<br>These skills of being able to quickly recognize patterns, generalize from prior knowledge, and adapt to different image environments are ones that we do not share with our fellow machines.<br>图像分类旨在根据输入图片输出所属类别(如猫，狗，等）或者从概率的角度判断该图片最有可能属于什么类别。对于人类而言，这是与生具来的能力而且和成人所差无几。想都不用想，人类就可以轻而易举的识别周围的环境和物体。当人类看身边的物体或者场景，人类可以立刻概括周围环境的特征并且给每个物体一个标签，甚至都不需要刻意地去关注。这些迅速识别模式、从先验知识中泛化、和适应不同环境的能力却并不为我们的机器所拥有。</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Corgi3.png\" alt=\"\"></p>\n<h2 id=\"Inputs-and-Outputs\"><a href=\"#Inputs-and-Outputs\" class=\"headerlink\" title=\"Inputs and Outputs\"></a>Inputs and Outputs</h2><blockquote>\n<p>When a computer sees an image (takes an image as input), it will see an array of pixel values. Depending on the resolution and size of the image, it will see a 32 x 32 x 3 array of numbers (The 3 refers to RGB values). Just to drive home the point, let’s say we have a color image in JPG form and its size is 480 x 480. The representative array will be 480 x 480 x 3. Each of these numbers is given a value from 0 to 255 which describes the pixel intensity at that point. These numbers, while meaningless to us when we perform image classification, are the only inputs available to the computer.  The idea is that you give the computer this array of numbers and it will output numbers that describe the probability of the image being a certain class (.80 for cat, .15 for dog, .05 for bird, etc).</p>\n</blockquote>\n<blockquote>\n<p>计算机把一幅图片理解为像素值数组，根据解析度和图片的尺寸，一副图片可能会被表示为32 <em> 32 </em> 3的多维数组(3表示RGB值)。重申一下，假如存在一副JPG格式大小为480 <em> 480 的图像。对应的数组的纬度将会是480 </em> 480 * 3. 每个元素取值范围是0-255, 描述了该像素点的情况。这些数组中的元素对于人类虽然没有什么用处，但是计算机却只能得到这些基本信息。但计算机看到这些数值组成的数组的时候，计算机会输出一些列概率值，分别描述了图片属于对应类别的可能性。</p>\n</blockquote>\n<h2 id=\"What-We-Want-the-Computer-to-Do\"><a href=\"#What-We-Want-the-Computer-to-Do\" class=\"headerlink\" title=\"What We Want the Computer to Do\"></a>What We Want the Computer to Do</h2><blockquote>\n<p>Now that we know the problem as well as the inputs and outputs, let’s think about how to approach this. What we want the computer to do is to be able to differentiate between all the images it’s given and figure out the unique features that make a dog a dog or that make a cat a cat. This is the process that goes on in our minds subconsciously as well. When we look at a picture of a dog, we can classify it as such if the picture has identifiable features such as paws or 4 legs. In a similar way, the computer is able perform image classification by looking for low level features such as edges and curves, and then building up to more abstract concepts through a series of convolutional layers. This is a general overview of what a CNN does. Let’s get into the specifics.<br>既然我们了解了图像识别分类的定义和计算机看到的输入和输出，我们再来想想一下人类如何做到的。 计算机分类图片和识别出类别本质上的特征这样的过程对于人类几乎是不假思索即可完成的。人类看到狗的时候，我们可以轻易的辨别狗的特征，比如爪子和四条腿。类似地，计算机也可以识别到比较低层次地特征比如边缘或者曲线， 然后通过一系列卷积层构建出层次较高的、抽象的特征。这就是CNN的基本思路。下面让我们深入地探究CNN的一些细节。</p>\n</blockquote>\n<h2 id=\"Biological-Connection\"><a href=\"#Biological-Connection\" class=\"headerlink\" title=\"Biological Connection\"></a>Biological Connection</h2><blockquote>\n<p>But first, a little background. When you first heard of the term convolutional neural networks, you may have thought of something related to neuroscience or biology, and you would be right. Sort of. CNNs do take a biological inspiration from the visual cortex. The visual cortex has small regions of cells that are sensitive to specific regions of the visual field. This idea was expanded upon by a fascinating experiment by Hubel and Wiesel in 1962 (Video) where they showed that some individual neuronal cells in the brain responded (or fired) only in the presence of edges of a certain orientation. For example, some neurons fired when exposed to vertical edges and some when shown horizontal or diagonal edges. Hubel and Wiesel found out that all of these neurons were organized in a columnar architecture and that together, they were able to produce visual perception. This idea of specialized components inside of a system having specific tasks (the neuronal cells in the visual cortex looking for specific characteristics) is one that machines use as well, and is the basis behind CNNs.</p>\n</blockquote>\n<h2 id=\"Structure\"><a href=\"#Structure\" class=\"headerlink\" title=\"Structure\"></a>Structure</h2><blockquote>\n<p>Back to the specifics. A more detailed overview of what CNNs do would be that you take the image, pass it through a series of convolutional, nonlinear, pooling (downsampling), and fully connected layers, and get an output. As we said earlier, the output can be a single class or a probability of classes that best describes the image. Now, the hard part is understanding what each of these layers do. So let’s get into the most important one.</p>\n</blockquote>\n<h2 id=\"First-Layer-–-Math-Part\"><a href=\"#First-Layer-–-Math-Part\" class=\"headerlink\" title=\"First Layer – Math Part\"></a>First Layer – Math Part</h2><blockquote>\n<p>The first layer in a CNN is always a Convolutional Layer. First thing to make sure you remember is what the input to this conv (I’ll be using that abbreviation a lot) layer is. Like we mentioned before, the input is a 32 x 32 x 3 array of pixel values. Now, the best way to explain a conv layer is to imagine a flashlight that is shining over the top left of the image. Let’s say that the light this flashlight shines covers a 5 x 5 area. And now, let’s imagine this flashlight sliding across all the areas of the input image. In machine learning terms, this flashlight is called a filter(or sometimes referred to as a neuron or a kernel) and the region that it is shining over is called the receptive field. Now this filter is also an array of numbers (the numbers are called weights or parameters). A very important note is that the depth of this filter has to be the same as the depth of the input (this makes sure that the math works out), so the dimensions of this filter is 5 x 5 x 3. Now, let’s take the first position the filter is in for example.  It would be the top left corner. As the filter is sliding, or convolving, around the input image, it is multiplying the values in the filter with the original pixel values of the image (aka computing element wise multiplications). These multiplications are all summed up (mathematically speaking, this would be 75 multiplications in total). So now you have a single number. Remember, this number is just representative of when the filter is at the top left of the image. Now, we repeat this process for every location on the input volume. (Next step would be moving the filter to the right by 1 unit, then right again by 1, and so on). Every unique location on the input volume produces a number. After sliding the filter over all the locations, you will find out that what you’re left with is a 28 x 28 x 1 array of numbers, which we call an activation map or feature map. The reason you get a 28 x 28 array is that there are 784 different locations that a 5 x 5 filter can fit on a 32 x 32 input image. These 784 numbers are mapped to a 28 x 28 array.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/ActivationMap.png\" alt=\"\"></p>\n<blockquote>\n<p>(Quick Note: Some of the images, including the one above, I used came from this terrific book, <a href=\"http://neuralnetworksanddeeplearning.com/\">“Neural Networks and Deep Learning”</a> by Michael Nielsen. Strongly recommend.)</p>\n</blockquote>\n<blockquote>\n<p>Let’s say now we use two 5 x 5 x 3 filters instead of one. Then our output volume would be 28 x 28 x 2. By using more filters, we are able to preserve the spatial dimensions better. Mathematically, this is what’s going on in a convolutional layer.</p>\n</blockquote>\n<h2 id=\"First-Layer-–-High-Level-Perspective\"><a href=\"#First-Layer-–-High-Level-Perspective\" class=\"headerlink\" title=\"First Layer – High Level Perspective\"></a>First Layer – High Level Perspective</h2><blockquote>\n<p>However, let’s talk about what this convolution is actually doing from a high level. Each of these filters can be thought of as feature identifiers. When I say features, I’m talking about things like straight edges, simple colors, and curves. Think about the simplest characteristics that all images have in common with each other. Let’s say our first filter is 7 x 7 x 3 and is going to be a curve detector. (In this section, let’s ignore the fact that the filter is 3 units deep and only consider the top depth slice of the filter and the image, for simplicity.)As a curve detector, the filter will have a pixel structure in which there will be higher numerical values along the area that is a shape of a curve (Remember, these filters that we’re talking about as just numbers!).       </p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Filter.png\" alt=\"\"></p>\n<blockquote>\n<p>Now, let’s go back to visualizing this mathematically. When we have this filter at the top left corner of the input volume, it is computing multiplications between the filter and pixel values at that region. Now let’s take an example of an image that we want to classify, and let’s put our filter at the top left corner.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/OriginalAndFilter.png\" alt=\"\"></p>\n<blockquote>\n<p>Remember, what we have to do is multiply the values in the filter with the original pixel values of the</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/FirstPixelMulitiplication.png\" alt=\"\"></p>\n<blockquote>\n<p>Basically, in the input image, if there is a shape that generally resembles the curve that this filter is representing, then all of the multiplications summed together will result in a large value! Now let’s see what happens when we move our filter.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/SecondMultiplication.png\" alt=\"\"></p>\n<blockquote>\n<p>The value is much lower! This is because there wasn’t anything in the image section that responded to the curve detector filter. Remember, the output of this conv layer is an activation map. So, in the simple case of a one filter convolution (and if that filter is a curve detector), the activation map will show the areas in which there at mostly likely to be curves in the picture. In this example, the top left value of our 28 x 28 x 1 activation map will be 6600. This high value means that it is likely that there is some sort of curve in the input volume that caused the filter to activate. The top right value in our activation map will be 0 because there wasn’t anything in the input volume that caused the filter to activate (or more simply said, there wasn’t a curve in that region of the original image). Remember, this is just for one filter. This is just a filter that is going to detect lines that curve outward and to the right. We can have other filters for lines that curve to the left or for straight edges. The more filters, the greater the depth of the activation map, and the more information we have about the input volume.</p>\n</blockquote>\n<blockquote>\n<p>Disclaimer: The filter I described in this section was simplistic for the main purpose of describing the math that goes on during a convolution. In the picture below, you’ll see some examples of actual visualizations of the filters of the first conv layer of a trained network. Nonetheless, the main argument remains the same. The filters on the first layer convolve around the input image and “activate” (or compute high values) when the specific feature it is looking for is in the input volume.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/FirstLayers.png\" alt=\"\"></p>\n<blockquote>\n<p>(Quick Note: The above image came from Stanford’s <a href=\"http://cs231n.stanford.edu/\">CS 231N </a> course taught by Andrej Karpathy and Justin Johnson. Recommend for anyone looking for a deeper understanding of CNNs.)</p>\n</blockquote>\n<h2 id=\"Going-Deeper-Through-the-Network\"><a href=\"#Going-Deeper-Through-the-Network\" class=\"headerlink\" title=\"Going Deeper Through the Network\"></a>Going Deeper Through the Network</h2><blockquote>\n<p>Now in a traditional convolutional neural network architecture, there are other layers that are interspersed between these conv layers. I’d strongly encourage those interested to read up on them and understand their function and effects, but in a general sense, they provide nonlinearities and preservation of dimension that help to improve the robustness of the network and control overfitting. A classic CNN architecture would look like this.<br><img src=\"https://adeshpande3.github.io/assets/Table.png\" alt=\"\"><br>The last layer, however, is an important one and one that we will go into later on. Let’s just take a step back and review what we’ve learned so far. We talked about what the filters in the first conv layer are designed to detect. They detect low level features such as edges and curves. As one would imagine, in order to predict whether an image is a type of object, we need the network to be able to recognize higher level features such as hands or paws or ears. So let’s think about what the output of the network is after the first conv layer. It would be a 28 x 28 x 3 volume (assuming we use three 5 x 5 x 3 filters).  When we go through another conv layer, the output of the first conv layer becomes the input of the 2nd conv layer.  Now, this is a little bit harder to visualize. When we were talking about the first layer, the input was just the original image. However, when we’re talking about the 2nd conv layer, the input is the activation map(s) that result from the first layer. So each layer of the input is basically describing the locations in the original image for where certain low level features appear. Now when you apply a set of filters on top of that (pass it through the 2nd conv layer), the output will be activations that represent higher level features. Types of these features could be semicircles (combination of a curve and straight edge) or squares (combination of several straight edges). As you go through the network and go through more conv layers, you get activation maps that represent more and more complex features. By the end of the network, you may have some filters that activate when there is handwriting in the image, filters that activate when they see pink objects, etc. If you want more information about visualizing filters in ConvNets, Matt Zeiler and Rob Fergus had an excellent research paper discussing the topic. Jason Yosinski also has a video on YouTube that provides a great visual representation. Another interesting thing to note is that as you go deeper into the network, the filters begin to have a larger and larger receptive field, which means that they are able to consider information from a larger area of the original input volume (another way of putting it is that they are more responsive to a larger region of pixel space).</p>\n</blockquote>\n<h2 id=\"Fully-Connected-Layer\"><a href=\"#Fully-Connected-Layer\" class=\"headerlink\" title=\"Fully Connected Layer\"></a>Fully Connected Layer</h2><blockquote>\n<p>Now that we can detect these high level features, the icing on the cake is attaching a fully connected layer to the end of the network. This layer basically takes an input volume (whatever the output is of the conv or ReLU or pool layer preceding it) and outputs an N dimensional vector where N is the number of classes that the program has to choose from. For example, if you wanted a digit classification program, N would be 10 since there are 10 digits. Each number in this N dimensional vector represents the probability of a certain class. For example, if the resulting vector for a digit classification program is [0 .1 .1 .75 0 0 0 0 0 .05], then this represents a 10% probability that the image is a 1, a 10% probability that the image is a 2, a 75% probability that the image is a 3, and a 5% probability that the image is a 9 (Side note: There are other ways that you can represent the output, but I am just showing the softmax approach). The way this fully connected layer works is that it looks at the output of the previous layer (which as we remember should represent the activation maps of high level features) and determines which features most correlate to a particular class. For example, if the program is predicting that some image is a dog, it will have high values in the activation maps that represent high level features like a paw or 4 legs, etc. Similarly, if the program is predicting that some image is a bird, it will have high values in the activation maps that represent high level features like wings or a beak, etc. Basically, a FC layer looks at what high level features most strongly correlate to a particular class and has particular weights so that when you compute the products between the weights and the previous layer, you get the correct probabilities for the different classes.<br><img src=\"https://adeshpande3.github.io/assets/LeNet.png\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"Training-AKA-What-Makes-this-Stuff-Work\"><a href=\"#Training-AKA-What-Makes-this-Stuff-Work\" class=\"headerlink\" title=\"Training (AKA:What Makes this Stuff Work)\"></a>Training (AKA:What Makes this Stuff Work)</h2><blockquote>\n<p>Now, this is the one aspect of neural networks that I purposely haven’t mentioned yet and it is probably the most important part. There may be a lot of questions you had while reading. How do the filters in the first conv layer know to look for edges and curves? How does the fully connected layer know what activation maps to look at? How do the filters in each layer know what values to have? The way the computer is able to adjust its filter values (or weights) is through a training process called backpropagation.</p>\n</blockquote>\n<blockquote>\n<p>Before we get into backpropagation, we must first take a step back and talk about what a neural network needs in order to work. At the moment we all were born, our minds were fresh. We didn’t know what a cat or dog or bird was. In a similar sort of way, before the CNN starts, the weights or filter values are randomized. The filters don’t know to look for edges and curves. The filters in the higher layers don’t know to look for paws and beaks. As we grew older however, our parents and teachers showed us different pictures and images and gave us a corresponding label. This idea of being given an image and a label is the training process that CNNs go through. Before getting too into it, let’s just say that we have a training set that has thousands of images of dogs, cats, and birds and each of the images has a label of what animal that picture is. Back to backprop.</p>\n</blockquote>\n<blockquote>\n<p>So backpropagation can be separated into 4 distinct sections, the forward pass, the loss function, the backward pass, and the weight update. During the forward pass, you take a training image which as we remember is a 32 x 32 x 3 array of numbers and pass it through the whole network. On our first training example, since all of the weights or filter values were randomly initialized, the output will probably be something like [.1 .1 .1 .1 .1 .1 .1 .1 .1 .1], basically an output that doesn’t give preference to any number in particular. The network, with its current weights, isn’t able to look for those low level features or thus isn’t able to make any reasonable conclusion about what the classification might be. This goes to the loss function part of backpropagation. Remember that what we are using right now is training data. This data has both an image and a label. Let’s say for example that the first training image inputted was a 3. The label for the image would be [0 0 0 1 0 0 0 0 0 0]. A loss function can be defined in many different ways but a common one is MSE (mean squared error), which is ½ times (actual - predicted) squared.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Equation.png\" alt=\"\"></p>\n<blockquote>\n<p>Let’s say the variable L is equal to that value. As you can imagine, the loss will be extremely high for the first couple of training images. Now, let’s just think about this intuitively. We want to get to a point where the predicted label (output of the ConvNet) is the same as the training label (This means that our network got its prediction right).In order to get there, we want to minimize the amount of loss we have. Visualizing this as just an optimization problem in calculus, we want to find out which inputs (weights in our case) most directly contributed to the loss (or error) of the network.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Loss.png\" alt=\"\"></p>\n<blockquote>\n<p>This is the mathematical equivalent of a dL/dW where W are the weights at a particular layer. Now, what we want to do is perform a backward pass through the network, which is determining which weights contributed most to the loss and finding ways to adjust them so that the loss decreases. Once we compute this derivative, we then go to the last step which is the weight update. This is where we take all the weights of the filters and update them so that they change in the direction of the gradient.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/Weight.png\" alt=\"\"></p>\n<blockquote>\n<p>The learning rate is a parameter that is chosen by the programmer. A high learning rate means that bigger steps are taken in the weight updates and thus, it may take less time for the model to converge on an optimal set of weights. However, a learning rate that is too high could result in jumps that are too large and not precise enough to reach the optimal point.</p>\n</blockquote>\n<p><img src=\"https://adeshpande3.github.io/assets/HighLR.png\" alt=\"\"></p>\n<blockquote>\n<p>The process of forward pass, loss function, backward pass, and parameter update is generally called one epoch. The program will repeat this process for a fixed number of epochs for each set of training images (commonly called a batch). Once you finish the parameter update on the last training example, hopefully the network should be trained well enough so that the weights of the layers are tuned correctly.</p>\n</blockquote>\n<h2 id=\"How-Companies-Use-CNNs\"><a href=\"#How-Companies-Use-CNNs\" class=\"headerlink\" title=\"How Companies Use CNNs\"></a>How Companies Use CNNs</h2><blockquote>\n<p>Data, data, data. The companies that have lots of this magic 4 letter word are the ones that have an inherent advantage over the rest of the competition. The more training data that you can give to a network, the more training iterations you can make, the more weight updates you can make, and the better tuned to the network is when it goes to production. Facebook (and Instagram) can use all the photos of the billion users it currently has, Pinterest can use information of the 50 billion pins that are on its site, Google can use search data, and Amazon can use data from the millions of products that are bought every day. And now you know the magic behind how they use it.</p>\n</blockquote>\n<h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"Disclaimer\"></a>Disclaimer</h2><blockquote>\n<p>While this post should be a good start to understanding CNNs, it is by no means a comprehensive overview. Things not discussed in this post include the nonlinear and pooling layers as well as hyperparameters of the network such as filter sizes, stride, and padding. Topics like network architecture, batch normalization, vanishing gradients, dropout, initialization techniques, non-convex optimization,biases, choices of loss functions, data augmentation,regularization methods, computational considerations, modifications of backpropagation, and more were also not discussed (yet ).</p>\n</blockquote>\n<p><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&#39;s-Guide-To-Understanding-Convolutional-Neural-Networks-Part-2/\">Link to Part 2 </a></p>\n<p>Dueces. </p>\n"},{"title":"17年要读的书和学习的技能","date":"2016-12-09T10:14:36.000Z","toc":true,"_content":"# 17年要读的书\n\n|书籍名称|目的        |\n|-------------|-------------|\n|算法艺术与信息学竞赛:算法竞赛入门经典(第2版) |提升算法水平，强化C／C++|\n|算法竞赛入门经典:训练指南 |提高算法，训练思维|\n|自己动手写Java虚拟机 |了解JAVA虚拟机原理，提升Golang编程水平|\n|响应式架构:消息模式Actor实现与Scala、Akka应用集成|学习并发编程、提升Scala编程水平|\n|[深度学习中文版](https://github.com/exacity/deeplearningbook-chinese)|学习深度学习，为该项目贡献代码|\n|Tensorflow实战|学习tensorflow编写神经网络程序|\n|分布式实时处理系统：原理、架构与实现 |深入理解分布式程序开发，提升C／C++实战能力|\n|深度学习：21天实战Caffe|实战深度学习，提升C／C++编程水平|\n\n# 17年要学习的技能\n机器学习方向\n-   DecisionTree\n-   XgBoost\n-   SVM \n-   AdaBoost\n-   PCA\n-   LogisticRegresion\n\nScala\n-   Akka\n-   Actor\n\nGolang\n-   Beego\n-   channel基础\n\n数学基础\n-   线性代数\n-   概率论\n\nSpark\n- Spark mlib\n- streaming(redis/kafka/akka/hbase)\n- structure streaming\n- basic rdd\n","source":"_posts/17年要读的书和学习的技能.md","raw":"---\ntitle: 17年要读的书和学习的技能\ndate: 2016-12-09 18:14:36\ntags:\ncategories: 学习\ntoc: true\n---\n# 17年要读的书\n\n|书籍名称|目的        |\n|-------------|-------------|\n|算法艺术与信息学竞赛:算法竞赛入门经典(第2版) |提升算法水平，强化C／C++|\n|算法竞赛入门经典:训练指南 |提高算法，训练思维|\n|自己动手写Java虚拟机 |了解JAVA虚拟机原理，提升Golang编程水平|\n|响应式架构:消息模式Actor实现与Scala、Akka应用集成|学习并发编程、提升Scala编程水平|\n|[深度学习中文版](https://github.com/exacity/deeplearningbook-chinese)|学习深度学习，为该项目贡献代码|\n|Tensorflow实战|学习tensorflow编写神经网络程序|\n|分布式实时处理系统：原理、架构与实现 |深入理解分布式程序开发，提升C／C++实战能力|\n|深度学习：21天实战Caffe|实战深度学习，提升C／C++编程水平|\n\n# 17年要学习的技能\n机器学习方向\n-   DecisionTree\n-   XgBoost\n-   SVM \n-   AdaBoost\n-   PCA\n-   LogisticRegresion\n\nScala\n-   Akka\n-   Actor\n\nGolang\n-   Beego\n-   channel基础\n\n数学基础\n-   线性代数\n-   概率论\n\nSpark\n- Spark mlib\n- streaming(redis/kafka/akka/hbase)\n- structure streaming\n- basic rdd\n","slug":"17年要读的书和学习的技能","published":1,"updated":"2017-03-17T13:07:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elc000dbnavny8szntm","content":"<h1 id=\"17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;\"><a href=\"#17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;\" class=\"headerlink\" title=\"17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;\"></a>17&#x5E74;&#x8981;&#x8BFB;&#x7684;&#x4E66;</h1><table>\n<thead>\n<tr>\n<th>&#x4E66;&#x7C4D;&#x540D;&#x79F0;</th>\n<th>&#x76EE;&#x7684;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&#x7B97;&#x6CD5;&#x827A;&#x672F;&#x4E0E;&#x4FE1;&#x606F;&#x5B66;&#x7ADE;&#x8D5B;:&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x5165;&#x95E8;&#x7ECF;&#x5178;(&#x7B2C;2&#x7248;)</td>\n<td>&#x63D0;&#x5347;&#x7B97;&#x6CD5;&#x6C34;&#x5E73;&#xFF0C;&#x5F3A;&#x5316;C&#xFF0F;C++</td>\n</tr>\n<tr>\n<td>&#x7B97;&#x6CD5;&#x7ADE;&#x8D5B;&#x5165;&#x95E8;&#x7ECF;&#x5178;:&#x8BAD;&#x7EC3;&#x6307;&#x5357;</td>\n<td>&#x63D0;&#x9AD8;&#x7B97;&#x6CD5;&#xFF0C;&#x8BAD;&#x7EC3;&#x601D;&#x7EF4;</td>\n</tr>\n<tr>\n<td>&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x5199;Java&#x865A;&#x62DF;&#x673A;</td>\n<td>&#x4E86;&#x89E3;JAVA&#x865A;&#x62DF;&#x673A;&#x539F;&#x7406;&#xFF0C;&#x63D0;&#x5347;Golang&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>\n</tr>\n<tr>\n<td>&#x54CD;&#x5E94;&#x5F0F;&#x67B6;&#x6784;:&#x6D88;&#x606F;&#x6A21;&#x5F0F;Actor&#x5B9E;&#x73B0;&#x4E0E;Scala&#x3001;Akka&#x5E94;&#x7528;&#x96C6;&#x6210;</td>\n<td>&#x5B66;&#x4E60;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x3001;&#x63D0;&#x5347;Scala&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/exacity/deeplearningbook-chinese\" target=\"_blank\" rel=\"external\">&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E2D;&#x6587;&#x7248;</a></td>\n<td>&#x5B66;&#x4E60;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x4E3A;&#x8BE5;&#x9879;&#x76EE;&#x8D21;&#x732E;&#x4EE3;&#x7801;</td>\n</tr>\n<tr>\n<td>Tensorflow&#x5B9E;&#x6218;</td>\n<td>&#x5B66;&#x4E60;tensorflow&#x7F16;&#x5199;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7A0B;&#x5E8F;</td>\n</tr>\n<tr>\n<td>&#x5206;&#x5E03;&#x5F0F;&#x5B9E;&#x65F6;&#x5904;&#x7406;&#x7CFB;&#x7EDF;&#xFF1A;&#x539F;&#x7406;&#x3001;&#x67B6;&#x6784;&#x4E0E;&#x5B9E;&#x73B0;</td>\n<td>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5206;&#x5E03;&#x5F0F;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#xFF0C;&#x63D0;&#x5347;C&#xFF0F;C++&#x5B9E;&#x6218;&#x80FD;&#x529B;</td>\n</tr>\n<tr>\n<td>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF1A;21&#x5929;&#x5B9E;&#x6218;Caffe</td>\n<td>&#x5B9E;&#x6218;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x5347;C&#xFF0F;C++&#x7F16;&#x7A0B;&#x6C34;&#x5E73;</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;\"><a href=\"#17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;\" class=\"headerlink\" title=\"17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;\"></a>17&#x5E74;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x6280;&#x80FD;</h1><p>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x65B9;&#x5411;</p>\n<ul>\n<li>DecisionTree</li>\n<li>XgBoost</li>\n<li>SVM </li>\n<li>AdaBoost</li>\n<li>PCA</li>\n<li>LogisticRegresion</li>\n</ul>\n<p>Scala</p>\n<ul>\n<li>Akka</li>\n<li>Actor</li>\n</ul>\n<p>Golang</p>\n<ul>\n<li>Beego</li>\n<li>channel&#x57FA;&#x7840;</li>\n</ul>\n<p>&#x6570;&#x5B66;&#x57FA;&#x7840;</p>\n<ul>\n<li>&#x7EBF;&#x6027;&#x4EE3;&#x6570;</li>\n<li>&#x6982;&#x7387;&#x8BBA;</li>\n</ul>\n<p>Spark</p>\n<ul>\n<li>Spark mlib</li>\n<li>streaming(redis/kafka/akka/hbase)</li>\n<li>structure streaming</li>\n<li>basic rdd</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"17年要读的书\"><a href=\"#17年要读的书\" class=\"headerlink\" title=\"17年要读的书\"></a>17年要读的书</h1><table>\n<thead>\n<tr>\n<th>书籍名称</th>\n<th>目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>算法艺术与信息学竞赛:算法竞赛入门经典(第2版)</td>\n<td>提升算法水平，强化C／C++</td>\n</tr>\n<tr>\n<td>算法竞赛入门经典:训练指南</td>\n<td>提高算法，训练思维</td>\n</tr>\n<tr>\n<td>自己动手写Java虚拟机</td>\n<td>了解JAVA虚拟机原理，提升Golang编程水平</td>\n</tr>\n<tr>\n<td>响应式架构:消息模式Actor实现与Scala、Akka应用集成</td>\n<td>学习并发编程、提升Scala编程水平</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/exacity/deeplearningbook-chinese\">深度学习中文版</a></td>\n<td>学习深度学习，为该项目贡献代码</td>\n</tr>\n<tr>\n<td>Tensorflow实战</td>\n<td>学习tensorflow编写神经网络程序</td>\n</tr>\n<tr>\n<td>分布式实时处理系统：原理、架构与实现</td>\n<td>深入理解分布式程序开发，提升C／C++实战能力</td>\n</tr>\n<tr>\n<td>深度学习：21天实战Caffe</td>\n<td>实战深度学习，提升C／C++编程水平</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"17年要学习的技能\"><a href=\"#17年要学习的技能\" class=\"headerlink\" title=\"17年要学习的技能\"></a>17年要学习的技能</h1><p>机器学习方向</p>\n<ul>\n<li>DecisionTree</li>\n<li>XgBoost</li>\n<li>SVM </li>\n<li>AdaBoost</li>\n<li>PCA</li>\n<li>LogisticRegresion</li>\n</ul>\n<p>Scala</p>\n<ul>\n<li>Akka</li>\n<li>Actor</li>\n</ul>\n<p>Golang</p>\n<ul>\n<li>Beego</li>\n<li>channel基础</li>\n</ul>\n<p>数学基础</p>\n<ul>\n<li>线性代数</li>\n<li>概率论</li>\n</ul>\n<p>Spark</p>\n<ul>\n<li>Spark mlib</li>\n<li>streaming(redis/kafka/akka/hbase)</li>\n<li>structure streaming</li>\n<li>basic rdd</li>\n</ul>\n"},{"title":"DeepLearningCnn","date":"2017-04-18T05:42:04.000Z","_content":"\n\nW 如果初始化不为0 会出现什么样的问题\n\n**symmetry breaking** 什么含义\n**0 gradients** \n","source":"_posts/DeepLearningCnn.md","raw":"---\ntitle: DeepLearningCnn\ndate: 2017-04-18 13:42:04\ntags: tensorflow \n---\n\n\nW 如果初始化不为0 会出现什么样的问题\n\n**symmetry breaking** 什么含义\n**0 gradients** \n","slug":"DeepLearningCnn","published":1,"updated":"2017-04-20T13:09:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elf000fbnavfj2vdkq0","content":"<p>W &#x5982;&#x679C;&#x521D;&#x59CB;&#x5316;&#x4E0D;&#x4E3A;0 &#x4F1A;&#x51FA;&#x73B0;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x95EE;&#x9898;</p>\n<p><strong>symmetry breaking</strong> &#x4EC0;&#x4E48;&#x542B;&#x4E49;<br><strong>0 gradients</strong> </p>\n","excerpt":"","more":"<p>W 如果初始化不为0 会出现什么样的问题</p>\n<p><strong>symmetry breaking</strong> 什么含义<br><strong>0 gradients</strong> </p>\n"},{"title":"2020READBOOKS","date":"2020-04-28T08:24:06.000Z","_content":"\n\n- Flink原理、实战与性能优化\n- Dubbo原理\n- Spring 5 核心原理与30个类手写实战\n","source":"_posts/2020READBOOKS.md","raw":"---\ntitle: 2020READBOOKS\ndate: 2020-04-28 16:24:06\ntags: BOOKS\n---\n\n\n- Flink原理、实战与性能优化\n- Dubbo原理\n- Spring 5 核心原理与30个类手写实战\n","slug":"2020READBOOKS","published":1,"updated":"2020-05-05T12:27:06.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elh000jbnavzugmwbug","content":"<ul>\n<li>Flink&#x539F;&#x7406;&#x3001;&#x5B9E;&#x6218;&#x4E0E;&#x6027;&#x80FD;&#x4F18;&#x5316;</li>\n<li>Dubbo&#x539F;&#x7406;</li>\n<li>Spring 5 &#x6838;&#x5FC3;&#x539F;&#x7406;&#x4E0E;30&#x4E2A;&#x7C7B;&#x624B;&#x5199;&#x5B9E;&#x6218;</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>Flink原理、实战与性能优化</li>\n<li>Dubbo原理</li>\n<li>Spring 5 核心原理与30个类手写实战</li>\n</ul>\n"},{"title":"GitSyncWithForkedRep","date":"2018-05-31T07:28:11.000Z","_content":"\n\nto sync with the repo you've forked , refer the following cammands [cammands](https://help.github.com/articles/syncing-a-fork)\n","source":"_posts/GitSyncWithForkedRep.md","raw":"---\ntitle: GitSyncWithForkedRep\ndate: 2018-05-31 15:28:11\ntags: GIT\n---\n\n\nto sync with the repo you've forked , refer the following cammands [cammands](https://help.github.com/articles/syncing-a-fork)\n","slug":"GitSyncWithForkedRep","published":1,"updated":"2018-05-31T07:29:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1eli000lbnav01v4p9nm","content":"<p>to sync with the repo you&#x2019;ve forked , refer the following cammands <a href=\"https://help.github.com/articles/syncing-a-fork\" target=\"_blank\" rel=\"external\">cammands</a></p>\n","excerpt":"","more":"<p>to sync with the repo you’ve forked , refer the following cammands <a href=\"https://help.github.com/articles/syncing-a-fork\">cammands</a></p>\n"},{"title":"Google 面试宝典","date":"2017-01-04T11:13:16.000Z","toc":true,"_content":"\ngeek.csdn.net/news/detail/107064\n","source":"_posts/Google-面试宝典.md","raw":"---\ntitle: Google 面试宝典\ndate: 2017-01-04 19:13:16\ntags: 基础\ncategories: 学习\ntoc: true\n---\n\ngeek.csdn.net/news/detail/107064\n","slug":"Google-面试宝典","published":1,"updated":"2017-02-15T08:07:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elk000pbnav3ke401di","content":"<p>geek.csdn.net/news/detail/107064</p>\n","excerpt":"","more":"<p>geek.csdn.net/news/detail/107064</p>\n"},{"title":"GitKeepSameWithUpStream","date":"2018-02-13T01:51:39.000Z","_content":"# How to Keep same with upstream \n\n\n## Configuring a remote for a fork\ncheck current remote repository\n```\ngit remote -v\n```\n\nSpecify a new remote upstream repository that will be synced with the fork.\n```\ngit remote add upstream https://github.com/tensorflow/tensorflow.git\n```\n\ncheck again\n```\ngit remote -v\n```\n\n```\ngit fetch upstream\ngit checkout master\ngit merge upstream/master\ngit push origin master\n```\n","source":"_posts/GitKeepSameWithUpStream.md","raw":"---\ntitle: GitKeepSameWithUpStream\ndate: 2018-02-13 09:51:39\ntags: git\n---\n# How to Keep same with upstream \n\n\n## Configuring a remote for a fork\ncheck current remote repository\n```\ngit remote -v\n```\n\nSpecify a new remote upstream repository that will be synced with the fork.\n```\ngit remote add upstream https://github.com/tensorflow/tensorflow.git\n```\n\ncheck again\n```\ngit remote -v\n```\n\n```\ngit fetch upstream\ngit checkout master\ngit merge upstream/master\ngit push origin master\n```\n","slug":"GitKeepSameWithUpStream","published":1,"updated":"2018-02-13T03:13:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ell000rbnavizkwnhhn","content":"<h1 id=\"How-to-Keep-same-with-upstream\"><a href=\"#How-to-Keep-same-with-upstream\" class=\"headerlink\" title=\"How to Keep same with upstream\"></a>How to Keep same with upstream</h1><h2 id=\"Configuring-a-remote-for-a-fork\"><a href=\"#Configuring-a-remote-for-a-fork\" class=\"headerlink\" title=\"Configuring a remote for a fork\"></a>Configuring a remote for a fork</h2><p>check current remote repository<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<p>Specify a new remote upstream repository that will be synced with the fork.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add upstream https://github.com/tensorflow/tensorflow.git</div></pre></td></tr></table></figure></p>\n<p>check again<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git fetch upstream</div><div class=\"line\">git checkout master</div><div class=\"line\">git merge upstream/master</div><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"How-to-Keep-same-with-upstream\"><a href=\"#How-to-Keep-same-with-upstream\" class=\"headerlink\" title=\"How to Keep same with upstream\"></a>How to Keep same with upstream</h1><h2 id=\"Configuring-a-remote-for-a-fork\"><a href=\"#Configuring-a-remote-for-a-fork\" class=\"headerlink\" title=\"Configuring a remote for a fork\"></a>Configuring a remote for a fork</h2><p>check current remote repository<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<p>Specify a new remote upstream repository that will be synced with the fork.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add upstream https://github.com/tensorflow/tensorflow.git</div></pre></td></tr></table></figure></p>\n<p>check again<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git fetch upstream</div><div class=\"line\">git checkout master</div><div class=\"line\">git merge upstream/master</div><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n"},{"title":"Install Caffe on CentOS","date":"2016-11-09T08:07:49.000Z","toc":true,"_content":"尽量不要在CentOS平台上安装Caffe\n","source":"_posts/Install-Caffe-on-CentOS.md","raw":"---\ntitle: Install Caffe on CentOS\ndate: 2016-11-09 16:07:49\ntags:\ntoc: true\n---\n尽量不要在CentOS平台上安装Caffe\n","slug":"Install-Caffe-on-CentOS","published":1,"updated":"2017-02-15T08:07:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elm000ubnavrbf4763d","content":"<p>&#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5728;CentOS&#x5E73;&#x53F0;&#x4E0A;&#x5B89;&#x88C5;Caffe</p>\n","excerpt":"","more":"<p>尽量不要在CentOS平台上安装Caffe</p>\n"},{"title":"Homebrew_config_for_mac","date":"2017-02-11T13:15:07.000Z","toc":true,"_content":"\n\n\nMAC 上面的brew速度非常慢，尝试如下方式可以加速homebrew安装软件的速度\n\n```\n\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\n\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\n\nbrew update\n\n\n```\n","source":"_posts/Homebrew-config-for-mac.md","raw":"---\ntitle: Homebrew_config_for_mac\ndate: 2017-02-11 21:15:07\ntags:\ncategories: Linux\ntoc: true\n---\n\n\n\nMAC 上面的brew速度非常慢，尝试如下方式可以加速homebrew安装软件的速度\n\n```\n\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\n\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\n\nbrew update\n\n\n```\n","slug":"Homebrew-config-for-mac","published":1,"updated":"2017-02-15T08:07:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elm000xbnavan6e3fjk","content":"<p>MAC &#x4E0A;&#x9762;&#x7684;brew&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x6162;&#xFF0C;&#x5C1D;&#x8BD5;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x52A0;&#x901F;homebrew&#x5B89;&#x88C5;&#x8F6F;&#x4EF6;&#x7684;&#x901F;&#x5EA6;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">cd &quot;$(brew --repo)&quot;</div><div class=\"line\">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</div><div class=\"line\"></div><div class=\"line\">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</div><div class=\"line\">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</div><div class=\"line\"></div><div class=\"line\">brew update</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>MAC 上面的brew速度非常慢，尝试如下方式可以加速homebrew安装软件的速度</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">cd &quot;$(brew --repo)&quot;</div><div class=\"line\">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</div><div class=\"line\"></div><div class=\"line\">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</div><div class=\"line\">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</div><div class=\"line\"></div><div class=\"line\">brew update</div></pre></td></tr></table></figure>\n"},{"title":"Install_cuda9.0_cudnn7.0_tensorflow1.5_onUbuntu16.04_GTX1080TI","date":"2018-02-13T03:15:49.000Z","_content":"# How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0 \n\n## 1安装文档阅读\n安装tensorflow首先要登陆tensorflow的官方文档，阅读对应的指导文档[Install On Ubuntu](https://www.tensorflow.org/install/install_linux)\n![安装文档图片](/myimages/WX20180213-143853.png)\n**注意由于文档上面写的是9.0版本，目前nvidia官方的Cuda版本为9.1，最好是采用和tensorflow文档对应的9.0版本，太新的版本可能存在各种未知的问题，在实际安装的过程中，笔者最开始选择9.1版本，遇到各种问题，最终选择和官网一致的版本得以解决。**\n\n## 2按照文档安装Cuda9.0\n\n![Cuda安装文档](/myimages/WX20180213-145246.png)\n**在实际安装过程中，遇到了gcc版本太高的报错，后来仔细对照了图中的系统需要发现，经过验证的版本是Kernel4.4 和gcc-4.3.1, 我解决的方案是下载gcc源代码自行安装，源码安装gcc 的过程可以参照网上参考资料和gcc官方文档，在此不再赘述**\n![安装过程](/myimages/WX20180213-150211.png)\n**图片中截图安装前后都需要进行一定的验证操作，过程请参照官方文档，这里不再赘述**\n\n## 安装cudnn\n首先要注意下载正确的版本的cudnn, **[Download cuDNN v7.0.5 (Dec 5, 2017), for CUDA 9.0](https://developer.nvidia.com/rdp/cudnn-download#a-collapse705-9)**,然后选择阅读对应的安装文档[cuDNN Install Guide](http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v7.0.5/prod/Doc/cuDNN-Installation-Guide.pdf?qO7ppZ7ZUZxNrI9KhtEHSndOL-IiLg4UwcWdFcYc2D2AYPJLJha2jvJp7bJO-Dl4Xa3ONYIKhWtLIHTbyr4tfoXndb53sK7SMtODAEwQlZgbYRsPE3wb2qwAGZH6E1fVW6CO1qeO2u_tZTLKe1zKbRCc10Gi8WpCaeyIlGPhLFuHI0qc8uX2eyEaGwVZfAaFkA)\n![Download cuDNN](/myimages/WX20180214-095916.png)\n![Install&Verify](/myimages/WX20180214-100208.png)\n\n## 安装tensorflow \n之前有过从源码安装Tensorflow的精力，比较复杂，问题比较多，所以不太建议大家选择这种方式，笔者偏好使用Anaconda进行Python开发环境的管理，所以这里讲述Anaconda安装的过程，主要参照Tensorflow安装的官方文档，这里截取出安装tensorflow 的关键步骤。 Ubuntu上安装Anaconda的过程比较简单，不再赘述。\n```\n#首先创建python3.5的环境\nconda create -n tensorflow pip python=3.5\n#激活环境\nsource activate tensorflow\n#安装支持GPU的Tensorflow1.5版本\npip install --ignore-installed https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\n```\n在安装过程中可能会报错，提示缺少某些python的安装包，此时根据提示信息，安装相应的安装包即可。\n在安装完成以后需要验证是否正确安装，在python Shell中输入如下指令即可\n```\n# Python\nimport tensorflow as tf\nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\n```\n## 遇到的问题\n在我安装的过程中，遇到了很多问题，现在简单整理一下，并且给出简单的解决思路。\n1.  安装cuda以后，运行nvidia-smi指令包Library和Driver的冲突错误，解决这个问题，可以先重启电脑，观察是否能够自动解决，如果不能的话，输入dmesg观察一下内核在加载nvidia驱动的时候报错的信息，一般来讲是nvidia客户端和内核驱动的版本不兼容导致的。此时可以删除其中的一个版本在进行观察。 如果还是不能成功的话，建议彻底清除nvidia/cuda/cudnn相关的安装包，可以通过输入指令```sudo apt-get purge nvidia* cuda* libcudnn``` 指令完成，然后重新 操作一遍\n2.  在编译cuda或者cudnn 示例代码验证安装的时候，可能会报错，如果是gcc版本的问题，那么可以通过源码编译并且安装对应版本的gcc来解决，如果是缺少某些库的问题，很大的可能性是LD_LIBRARY_PATH这个环境变量没有正确设置，注意仔细阅读以下cuda和cudnn文档中关于LD_LIBRARY_PATH的配置描述和要求。重新配置一下。\n\n## 总结\n配置环境类的操作在网上总是能够找到很多的资料，但是有些的版本和当前的相比有比较大的差别，因此照搬别人的经验未必会成功。最关键的是阅读官方文档，仔细阅读官方文档可以避免走弯路，遇到问题google或者stackOverflow上面的答案质量往往比较高。\n\n## TODOs\n整个安装过程参考了网上很多文章和帖子，在此表示感谢，由于实际安装的过程中没有保留相关的链接地址，所以在此表示感谢，后续会抽时间将部分了链接添加在这里。\n\n\n","source":"_posts/Install-cuda9-0-cudnn7-0-tensorflow1-5-onUbuntu16-04-GTX1080TI.md","raw":"---\ntitle: Install_cuda9.0_cudnn7.0_tensorflow1.5_onUbuntu16.04_GTX1080TI\ndate: 2018-02-13 11:15:49\ntags: Tensorflow\n---\n# How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0 \n\n## 1安装文档阅读\n安装tensorflow首先要登陆tensorflow的官方文档，阅读对应的指导文档[Install On Ubuntu](https://www.tensorflow.org/install/install_linux)\n![安装文档图片](/myimages/WX20180213-143853.png)\n**注意由于文档上面写的是9.0版本，目前nvidia官方的Cuda版本为9.1，最好是采用和tensorflow文档对应的9.0版本，太新的版本可能存在各种未知的问题，在实际安装的过程中，笔者最开始选择9.1版本，遇到各种问题，最终选择和官网一致的版本得以解决。**\n\n## 2按照文档安装Cuda9.0\n\n![Cuda安装文档](/myimages/WX20180213-145246.png)\n**在实际安装过程中，遇到了gcc版本太高的报错，后来仔细对照了图中的系统需要发现，经过验证的版本是Kernel4.4 和gcc-4.3.1, 我解决的方案是下载gcc源代码自行安装，源码安装gcc 的过程可以参照网上参考资料和gcc官方文档，在此不再赘述**\n![安装过程](/myimages/WX20180213-150211.png)\n**图片中截图安装前后都需要进行一定的验证操作，过程请参照官方文档，这里不再赘述**\n\n## 安装cudnn\n首先要注意下载正确的版本的cudnn, **[Download cuDNN v7.0.5 (Dec 5, 2017), for CUDA 9.0](https://developer.nvidia.com/rdp/cudnn-download#a-collapse705-9)**,然后选择阅读对应的安装文档[cuDNN Install Guide](http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v7.0.5/prod/Doc/cuDNN-Installation-Guide.pdf?qO7ppZ7ZUZxNrI9KhtEHSndOL-IiLg4UwcWdFcYc2D2AYPJLJha2jvJp7bJO-Dl4Xa3ONYIKhWtLIHTbyr4tfoXndb53sK7SMtODAEwQlZgbYRsPE3wb2qwAGZH6E1fVW6CO1qeO2u_tZTLKe1zKbRCc10Gi8WpCaeyIlGPhLFuHI0qc8uX2eyEaGwVZfAaFkA)\n![Download cuDNN](/myimages/WX20180214-095916.png)\n![Install&Verify](/myimages/WX20180214-100208.png)\n\n## 安装tensorflow \n之前有过从源码安装Tensorflow的精力，比较复杂，问题比较多，所以不太建议大家选择这种方式，笔者偏好使用Anaconda进行Python开发环境的管理，所以这里讲述Anaconda安装的过程，主要参照Tensorflow安装的官方文档，这里截取出安装tensorflow 的关键步骤。 Ubuntu上安装Anaconda的过程比较简单，不再赘述。\n```\n#首先创建python3.5的环境\nconda create -n tensorflow pip python=3.5\n#激活环境\nsource activate tensorflow\n#安装支持GPU的Tensorflow1.5版本\npip install --ignore-installed https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl\n```\n在安装过程中可能会报错，提示缺少某些python的安装包，此时根据提示信息，安装相应的安装包即可。\n在安装完成以后需要验证是否正确安装，在python Shell中输入如下指令即可\n```\n# Python\nimport tensorflow as tf\nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\n```\n## 遇到的问题\n在我安装的过程中，遇到了很多问题，现在简单整理一下，并且给出简单的解决思路。\n1.  安装cuda以后，运行nvidia-smi指令包Library和Driver的冲突错误，解决这个问题，可以先重启电脑，观察是否能够自动解决，如果不能的话，输入dmesg观察一下内核在加载nvidia驱动的时候报错的信息，一般来讲是nvidia客户端和内核驱动的版本不兼容导致的。此时可以删除其中的一个版本在进行观察。 如果还是不能成功的话，建议彻底清除nvidia/cuda/cudnn相关的安装包，可以通过输入指令```sudo apt-get purge nvidia* cuda* libcudnn``` 指令完成，然后重新 操作一遍\n2.  在编译cuda或者cudnn 示例代码验证安装的时候，可能会报错，如果是gcc版本的问题，那么可以通过源码编译并且安装对应版本的gcc来解决，如果是缺少某些库的问题，很大的可能性是LD_LIBRARY_PATH这个环境变量没有正确设置，注意仔细阅读以下cuda和cudnn文档中关于LD_LIBRARY_PATH的配置描述和要求。重新配置一下。\n\n## 总结\n配置环境类的操作在网上总是能够找到很多的资料，但是有些的版本和当前的相比有比较大的差别，因此照搬别人的经验未必会成功。最关键的是阅读官方文档，仔细阅读官方文档可以避免走弯路，遇到问题google或者stackOverflow上面的答案质量往往比较高。\n\n## TODOs\n整个安装过程参考了网上很多文章和帖子，在此表示感谢，由于实际安装的过程中没有保留相关的链接地址，所以在此表示感谢，后续会抽时间将部分了链接添加在这里。\n\n\n","slug":"Install-cuda9-0-cudnn7-0-tensorflow1-5-onUbuntu16-04-GTX1080TI","published":1,"updated":"2018-02-23T02:56:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1eln000zbnavpyffrxu7","content":"<h1 id=\"How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0\"><a href=\"#How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0\" class=\"headerlink\" title=\"How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0\"></a>How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0</h1><h2 id=\"1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;\"><a href=\"#1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;\" class=\"headerlink\" title=\"1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;\"></a>1&#x5B89;&#x88C5;&#x6587;&#x6863;&#x9605;&#x8BFB;</h2><p>&#x5B89;&#x88C5;tensorflow&#x9996;&#x5148;&#x8981;&#x767B;&#x9646;tensorflow&#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x9605;&#x8BFB;&#x5BF9;&#x5E94;&#x7684;&#x6307;&#x5BFC;&#x6587;&#x6863;<a href=\"https://www.tensorflow.org/install/install_linux\" target=\"_blank\" rel=\"external\">Install On Ubuntu</a><br><img src=\"/myimages/WX20180213-143853.png\" alt=\"&#x5B89;&#x88C5;&#x6587;&#x6863;&#x56FE;&#x7247;\"><br><strong>&#x6CE8;&#x610F;&#x7531;&#x4E8E;&#x6587;&#x6863;&#x4E0A;&#x9762;&#x5199;&#x7684;&#x662F;9.0&#x7248;&#x672C;&#xFF0C;&#x76EE;&#x524D;nvidia&#x5B98;&#x65B9;&#x7684;Cuda&#x7248;&#x672C;&#x4E3A;9.1&#xFF0C;&#x6700;&#x597D;&#x662F;&#x91C7;&#x7528;&#x548C;tensorflow&#x6587;&#x6863;&#x5BF9;&#x5E94;&#x7684;9.0&#x7248;&#x672C;&#xFF0C;&#x592A;&#x65B0;&#x7684;&#x7248;&#x672C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5404;&#x79CD;&#x672A;&#x77E5;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7B14;&#x8005;&#x6700;&#x5F00;&#x59CB;&#x9009;&#x62E9;9.1&#x7248;&#x672C;&#xFF0C;&#x9047;&#x5230;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x7EC8;&#x9009;&#x62E9;&#x548C;&#x5B98;&#x7F51;&#x4E00;&#x81F4;&#x7684;&#x7248;&#x672C;&#x5F97;&#x4EE5;&#x89E3;&#x51B3;&#x3002;</strong></p>\n<h2 id=\"2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9-0\"><a href=\"#2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9-0\" class=\"headerlink\" title=\"2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9.0\"></a>2&#x6309;&#x7167;&#x6587;&#x6863;&#x5B89;&#x88C5;Cuda9.0</h2><p><img src=\"/myimages/WX20180213-145246.png\" alt=\"Cuda&#x5B89;&#x88C5;&#x6587;&#x6863;\"><br><strong>&#x5728;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E86;gcc&#x7248;&#x672C;&#x592A;&#x9AD8;&#x7684;&#x62A5;&#x9519;&#xFF0C;&#x540E;&#x6765;&#x4ED4;&#x7EC6;&#x5BF9;&#x7167;&#x4E86;&#x56FE;&#x4E2D;&#x7684;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x53D1;&#x73B0;&#xFF0C;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x7684;&#x7248;&#x672C;&#x662F;Kernel4.4 &#x548C;gcc-4.3.1, &#x6211;&#x89E3;&#x51B3;&#x7684;&#x65B9;&#x6848;&#x662F;&#x4E0B;&#x8F7D;gcc&#x6E90;&#x4EE3;&#x7801;&#x81EA;&#x884C;&#x5B89;&#x88C5;&#xFF0C;&#x6E90;&#x7801;&#x5B89;&#x88C5;gcc &#x7684;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x53C2;&#x7167;&#x7F51;&#x4E0A;&#x53C2;&#x8003;&#x8D44;&#x6599;&#x548C;gcc&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x5728;&#x6B64;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;</strong><br><img src=\"/myimages/WX20180213-150211.png\" alt=\"&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;\"><br><strong>&#x56FE;&#x7247;&#x4E2D;&#x622A;&#x56FE;&#x5B89;&#x88C5;&#x524D;&#x540E;&#x90FD;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x5B9A;&#x7684;&#x9A8C;&#x8BC1;&#x64CD;&#x4F5C;&#xFF0C;&#x8FC7;&#x7A0B;&#x8BF7;&#x53C2;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;</strong></p>\n<h2 id=\"&#x5B89;&#x88C5;cudnn\"><a href=\"#&#x5B89;&#x88C5;cudnn\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;cudnn\"></a>&#x5B89;&#x88C5;cudnn</h2><p>&#x9996;&#x5148;&#x8981;&#x6CE8;&#x610F;&#x4E0B;&#x8F7D;&#x6B63;&#x786E;&#x7684;&#x7248;&#x672C;&#x7684;cudnn, <strong><a href=\"https://developer.nvidia.com/rdp/cudnn-download#a-collapse705-9\" target=\"_blank\" rel=\"external\">Download cuDNN v7.0.5 (Dec 5, 2017), for CUDA 9.0</a></strong>,&#x7136;&#x540E;&#x9009;&#x62E9;&#x9605;&#x8BFB;&#x5BF9;&#x5E94;&#x7684;&#x5B89;&#x88C5;&#x6587;&#x6863;<a href=\"http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v7.0.5/prod/Doc/cuDNN-Installation-Guide.pdf?qO7ppZ7ZUZxNrI9KhtEHSndOL-IiLg4UwcWdFcYc2D2AYPJLJha2jvJp7bJO-Dl4Xa3ONYIKhWtLIHTbyr4tfoXndb53sK7SMtODAEwQlZgbYRsPE3wb2qwAGZH6E1fVW6CO1qeO2u_tZTLKe1zKbRCc10Gi8WpCaeyIlGPhLFuHI0qc8uX2eyEaGwVZfAaFkA\" target=\"_blank\" rel=\"external\">cuDNN Install Guide</a><br><img src=\"/myimages/WX20180214-095916.png\" alt=\"Download cuDNN\"><br><img src=\"/myimages/WX20180214-100208.png\" alt=\"Install&amp;Verify\"></p>\n<h2 id=\"&#x5B89;&#x88C5;tensorflow\"><a href=\"#&#x5B89;&#x88C5;tensorflow\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;tensorflow\"></a>&#x5B89;&#x88C5;tensorflow</h2><p>&#x4E4B;&#x524D;&#x6709;&#x8FC7;&#x4ECE;&#x6E90;&#x7801;&#x5B89;&#x88C5;Tensorflow&#x7684;&#x7CBE;&#x529B;&#xFF0C;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x95EE;&#x9898;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x592A;&#x5EFA;&#x8BAE;&#x5927;&#x5BB6;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x7B14;&#x8005;&#x504F;&#x597D;&#x4F7F;&#x7528;Anaconda&#x8FDB;&#x884C;Python&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x8BB2;&#x8FF0;Anaconda&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E3B;&#x8981;&#x53C2;&#x7167;Tensorflow&#x5B89;&#x88C5;&#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x91CC;&#x622A;&#x53D6;&#x51FA;&#x5B89;&#x88C5;tensorflow &#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3002; Ubuntu&#x4E0A;&#x5B89;&#x88C5;Anaconda&#x7684;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#&#x9996;&#x5148;&#x521B;&#x5EFA;python3.5&#x7684;&#x73AF;&#x5883;</div><div class=\"line\">conda create -n tensorflow pip python=3.5</div><div class=\"line\">#&#x6FC0;&#x6D3B;&#x73AF;&#x5883;</div><div class=\"line\">source activate tensorflow</div><div class=\"line\">#&#x5B89;&#x88C5;&#x652F;&#x6301;GPU&#x7684;Tensorflow1.5&#x7248;&#x672C;</div><div class=\"line\">pip install --ignore-installed https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl</div></pre></td></tr></table></figure></p>\n<p>&#x5728;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x7F3A;&#x5C11;&#x67D0;&#x4E9B;python&#x7684;&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x6B64;&#x65F6;&#x6839;&#x636E;&#x63D0;&#x793A;&#x4FE1;&#x606F;&#xFF0C;&#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x5B89;&#x88C5;&#x5305;&#x5373;&#x53EF;&#x3002;<br>&#x5728;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x4EE5;&#x540E;&#x9700;&#x8981;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x6B63;&#x786E;&#x5B89;&#x88C5;&#xFF0C;&#x5728;python Shell&#x4E2D;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x6307;&#x4EE4;&#x5373;&#x53EF;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Python</div><div class=\"line\">import tensorflow as tf</div><div class=\"line\">hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</div><div class=\"line\">sess = tf.Session()</div><div class=\"line\">print(sess.run(hello))</div></pre></td></tr></table></figure></p>\n<h2 id=\"&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;\"><a href=\"#&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;\" class=\"headerlink\" title=\"&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;\"></a>&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;</h2><p>&#x5728;&#x6211;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x73B0;&#x5728;&#x7B80;&#x5355;&#x6574;&#x7406;&#x4E00;&#x4E0B;&#xFF0C;&#x5E76;&#x4E14;&#x7ED9;&#x51FA;&#x7B80;&#x5355;&#x7684;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x3002;</p>\n<ol>\n<li>&#x5B89;&#x88C5;cuda&#x4EE5;&#x540E;&#xFF0C;&#x8FD0;&#x884C;nvidia-smi&#x6307;&#x4EE4;&#x5305;Library&#x548C;Driver&#x7684;&#x51B2;&#x7A81;&#x9519;&#x8BEF;&#xFF0C;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x91CD;&#x542F;&#x7535;&#x8111;&#xFF0C;&#x89C2;&#x5BDF;&#x662F;&#x5426;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x89E3;&#x51B3;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x8F93;&#x5165;dmesg&#x89C2;&#x5BDF;&#x4E00;&#x4E0B;&#x5185;&#x6838;&#x5728;&#x52A0;&#x8F7D;nvidia&#x9A71;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x62A5;&#x9519;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BB2;&#x662F;nvidia&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x7684;&#x7248;&#x672C;&#x4E0D;&#x517C;&#x5BB9;&#x5BFC;&#x81F4;&#x7684;&#x3002;&#x6B64;&#x65F6;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x5728;&#x8FDB;&#x884C;&#x89C2;&#x5BDF;&#x3002; &#x5982;&#x679C;&#x8FD8;&#x662F;&#x4E0D;&#x80FD;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x5EFA;&#x8BAE;&#x5F7B;&#x5E95;&#x6E05;&#x9664;nvidia/cuda/cudnn&#x76F8;&#x5173;&#x7684;&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x6307;&#x4EE4;<code>sudo apt-get purge nvidia* cuda* libcudnn</code> &#x6307;&#x4EE4;&#x5B8C;&#x6210;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0; &#x64CD;&#x4F5C;&#x4E00;&#x904D;</li>\n<li>&#x5728;&#x7F16;&#x8BD1;cuda&#x6216;&#x8005;cudnn &#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x9A8C;&#x8BC1;&#x5B89;&#x88C5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x662F;gcc&#x7248;&#x672C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5E76;&#x4E14;&#x5B89;&#x88C5;&#x5BF9;&#x5E94;&#x7248;&#x672C;&#x7684;gcc&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7F3A;&#x5C11;&#x67D0;&#x4E9B;&#x5E93;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5F88;&#x5927;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x662F;LD_LIBRARY_PATH&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x8BBE;&#x7F6E;&#xFF0C;&#x6CE8;&#x610F;&#x4ED4;&#x7EC6;&#x9605;&#x8BFB;&#x4EE5;&#x4E0B;cuda&#x548C;cudnn&#x6587;&#x6863;&#x4E2D;&#x5173;&#x4E8E;LD_LIBRARY_PATH&#x7684;&#x914D;&#x7F6E;&#x63CF;&#x8FF0;&#x548C;&#x8981;&#x6C42;&#x3002;&#x91CD;&#x65B0;&#x914D;&#x7F6E;&#x4E00;&#x4E0B;&#x3002;</li>\n</ol>\n<h2 id=\"&#x603B;&#x7ED3;\"><a href=\"#&#x603B;&#x7ED3;\" class=\"headerlink\" title=\"&#x603B;&#x7ED3;\"></a>&#x603B;&#x7ED3;</h2><p>&#x914D;&#x7F6E;&#x73AF;&#x5883;&#x7C7B;&#x7684;&#x64CD;&#x4F5C;&#x5728;&#x7F51;&#x4E0A;&#x603B;&#x662F;&#x80FD;&#x591F;&#x627E;&#x5230;&#x5F88;&#x591A;&#x7684;&#x8D44;&#x6599;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E9B;&#x7684;&#x7248;&#x672C;&#x548C;&#x5F53;&#x524D;&#x7684;&#x76F8;&#x6BD4;&#x6709;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x5DEE;&#x522B;&#xFF0C;&#x56E0;&#x6B64;&#x7167;&#x642C;&#x522B;&#x4EBA;&#x7684;&#x7ECF;&#x9A8C;&#x672A;&#x5FC5;&#x4F1A;&#x6210;&#x529F;&#x3002;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#x9605;&#x8BFB;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x4ED4;&#x7EC6;&#x9605;&#x8BFB;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8D70;&#x5F2F;&#x8DEF;&#xFF0C;&#x9047;&#x5230;&#x95EE;&#x9898;google&#x6216;&#x8005;stackOverflow&#x4E0A;&#x9762;&#x7684;&#x7B54;&#x6848;&#x8D28;&#x91CF;&#x5F80;&#x5F80;&#x6BD4;&#x8F83;&#x9AD8;&#x3002;</p>\n<h2 id=\"TODOs\"><a href=\"#TODOs\" class=\"headerlink\" title=\"TODOs\"></a>TODOs</h2><p>&#x6574;&#x4E2A;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x53C2;&#x8003;&#x4E86;&#x7F51;&#x4E0A;&#x5F88;&#x591A;&#x6587;&#x7AE0;&#x548C;&#x5E16;&#x5B50;&#xFF0C;&#x5728;&#x6B64;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF0C;&#x7531;&#x4E8E;&#x5B9E;&#x9645;&#x5B89;&#x88C5;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CA1;&#x6709;&#x4FDD;&#x7559;&#x76F8;&#x5173;&#x7684;&#x94FE;&#x63A5;&#x5730;&#x5740;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6B64;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF0C;&#x540E;&#x7EED;&#x4F1A;&#x62BD;&#x65F6;&#x95F4;&#x5C06;&#x90E8;&#x5206;&#x4E86;&#x94FE;&#x63A5;&#x6DFB;&#x52A0;&#x5728;&#x8FD9;&#x91CC;&#x3002;</p>\n","excerpt":"","more":"<h1 id=\"How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0\"><a href=\"#How-to-install-tensorflow1-5-on-Ubuntu16-04-with-support-of-cuda9-0-and-cudnn7-0\" class=\"headerlink\" title=\"How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0\"></a>How to install tensorflow1.5 on Ubuntu16.04 with support of cuda9.0 and cudnn7.0</h1><h2 id=\"1安装文档阅读\"><a href=\"#1安装文档阅读\" class=\"headerlink\" title=\"1安装文档阅读\"></a>1安装文档阅读</h2><p>安装tensorflow首先要登陆tensorflow的官方文档，阅读对应的指导文档<a href=\"https://www.tensorflow.org/install/install_linux\">Install On Ubuntu</a><br><img src=\"/myimages/WX20180213-143853.png\" alt=\"安装文档图片\"><br><strong>注意由于文档上面写的是9.0版本，目前nvidia官方的Cuda版本为9.1，最好是采用和tensorflow文档对应的9.0版本，太新的版本可能存在各种未知的问题，在实际安装的过程中，笔者最开始选择9.1版本，遇到各种问题，最终选择和官网一致的版本得以解决。</strong></p>\n<h2 id=\"2按照文档安装Cuda9-0\"><a href=\"#2按照文档安装Cuda9-0\" class=\"headerlink\" title=\"2按照文档安装Cuda9.0\"></a>2按照文档安装Cuda9.0</h2><p><img src=\"/myimages/WX20180213-145246.png\" alt=\"Cuda安装文档\"><br><strong>在实际安装过程中，遇到了gcc版本太高的报错，后来仔细对照了图中的系统需要发现，经过验证的版本是Kernel4.4 和gcc-4.3.1, 我解决的方案是下载gcc源代码自行安装，源码安装gcc 的过程可以参照网上参考资料和gcc官方文档，在此不再赘述</strong><br><img src=\"/myimages/WX20180213-150211.png\" alt=\"安装过程\"><br><strong>图片中截图安装前后都需要进行一定的验证操作，过程请参照官方文档，这里不再赘述</strong></p>\n<h2 id=\"安装cudnn\"><a href=\"#安装cudnn\" class=\"headerlink\" title=\"安装cudnn\"></a>安装cudnn</h2><p>首先要注意下载正确的版本的cudnn, <strong><a href=\"https://developer.nvidia.com/rdp/cudnn-download#a-collapse705-9\">Download cuDNN v7.0.5 (Dec 5, 2017), for CUDA 9.0</a></strong>,然后选择阅读对应的安装文档<a href=\"http://developer2.download.nvidia.com/compute/machine-learning/cudnn/secure/v7.0.5/prod/Doc/cuDNN-Installation-Guide.pdf?qO7ppZ7ZUZxNrI9KhtEHSndOL-IiLg4UwcWdFcYc2D2AYPJLJha2jvJp7bJO-Dl4Xa3ONYIKhWtLIHTbyr4tfoXndb53sK7SMtODAEwQlZgbYRsPE3wb2qwAGZH6E1fVW6CO1qeO2u_tZTLKe1zKbRCc10Gi8WpCaeyIlGPhLFuHI0qc8uX2eyEaGwVZfAaFkA\">cuDNN Install Guide</a><br><img src=\"/myimages/WX20180214-095916.png\" alt=\"Download cuDNN\"><br><img src=\"/myimages/WX20180214-100208.png\" alt=\"Install&amp;Verify\"></p>\n<h2 id=\"安装tensorflow\"><a href=\"#安装tensorflow\" class=\"headerlink\" title=\"安装tensorflow\"></a>安装tensorflow</h2><p>之前有过从源码安装Tensorflow的精力，比较复杂，问题比较多，所以不太建议大家选择这种方式，笔者偏好使用Anaconda进行Python开发环境的管理，所以这里讲述Anaconda安装的过程，主要参照Tensorflow安装的官方文档，这里截取出安装tensorflow 的关键步骤。 Ubuntu上安装Anaconda的过程比较简单，不再赘述。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#首先创建python3.5的环境</div><div class=\"line\">conda create -n tensorflow pip python=3.5</div><div class=\"line\">#激活环境</div><div class=\"line\">source activate tensorflow</div><div class=\"line\">#安装支持GPU的Tensorflow1.5版本</div><div class=\"line\">pip install --ignore-installed https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp35-cp35m-linux_x86_64.whl</div></pre></td></tr></table></figure></p>\n<p>在安装过程中可能会报错，提示缺少某些python的安装包，此时根据提示信息，安装相应的安装包即可。<br>在安装完成以后需要验证是否正确安装，在python Shell中输入如下指令即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Python</div><div class=\"line\">import tensorflow as tf</div><div class=\"line\">hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</div><div class=\"line\">sess = tf.Session()</div><div class=\"line\">print(sess.run(hello))</div></pre></td></tr></table></figure></p>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><p>在我安装的过程中，遇到了很多问题，现在简单整理一下，并且给出简单的解决思路。</p>\n<ol>\n<li>安装cuda以后，运行nvidia-smi指令包Library和Driver的冲突错误，解决这个问题，可以先重启电脑，观察是否能够自动解决，如果不能的话，输入dmesg观察一下内核在加载nvidia驱动的时候报错的信息，一般来讲是nvidia客户端和内核驱动的版本不兼容导致的。此时可以删除其中的一个版本在进行观察。 如果还是不能成功的话，建议彻底清除nvidia/cuda/cudnn相关的安装包，可以通过输入指令<code>sudo apt-get purge nvidia* cuda* libcudnn</code> 指令完成，然后重新 操作一遍</li>\n<li>在编译cuda或者cudnn 示例代码验证安装的时候，可能会报错，如果是gcc版本的问题，那么可以通过源码编译并且安装对应版本的gcc来解决，如果是缺少某些库的问题，很大的可能性是LD_LIBRARY_PATH这个环境变量没有正确设置，注意仔细阅读以下cuda和cudnn文档中关于LD_LIBRARY_PATH的配置描述和要求。重新配置一下。</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>配置环境类的操作在网上总是能够找到很多的资料，但是有些的版本和当前的相比有比较大的差别，因此照搬别人的经验未必会成功。最关键的是阅读官方文档，仔细阅读官方文档可以避免走弯路，遇到问题google或者stackOverflow上面的答案质量往往比较高。</p>\n<h2 id=\"TODOs\"><a href=\"#TODOs\" class=\"headerlink\" title=\"TODOs\"></a>TODOs</h2><p>整个安装过程参考了网上很多文章和帖子，在此表示感谢，由于实际安装的过程中没有保留相关的链接地址，所以在此表示感谢，后续会抽时间将部分了链接添加在这里。</p>\n"},{"title":"FpInScala读书笔记","date":"2019-07-10T04:43:42.000Z","_content":"- FoldLeft和FoldRight有什么区别？\n- 练习3.7怎么解？\n- FoldRight 如何通过FoldLeft 来实现？\n- 《聊聊什么是函数式》\n- 《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》\n- 《聊聊Scala的Option》\n- append two List\n- append List[List]\n- 如何把ZipWith 改成尾递归操作\n- List hasSubSequence 如何设计\n- 《聊聊Scala的型变》\n- by name和by value什么区别？\n- Scala为啥要定义Stream?\n- 如何定义一个fib Stream\n- monoid monad functor 有什么作用？\n- foldRight By foldMap\n\n\n## 随记\n\n《Scala函数式编程》这本小红书写的真的是深奥，读起来比较难以理解， 同市面发行的大部分书籍相比（大部分关于Scala的书我几乎都买了一遍，而且阅读过一遍）明显不同。 本书主要关注的函数式思想的本身，对于语言特性几乎省略了笔墨， 显然不适合于初学者阅读， 比较适合有过Scala开发经验，且好于map filter foldLeft 这些算子背后的本源感兴趣的工程师阅读。\n\n目前已经阅读了第一部分（1-6章）， 可以说第一到六章可以给读者建立一个直观的感受， 让读者在脑海里有一个印象， 什么是函数式编程，初步体味一些函数编程的优势， 比如模块化，可复用，避免副作用等。展示了 map flatMap等这种常见的算子背后的实现的方式。 \n\n目前正在阅读第二部分， 第二部分可以看做是通过案例来介绍一下函数式编程的优势，在阅读的过程之中，已经稍微能够感受到点难度，不是很好理解。 \n\n本书循序渐进，带领你抽丝剥茧，真神书也！\n\n\n\n\n2019年 7月25日 星期四 22时11分57秒 CST\n至此， 本神书已阅读完前3部分。第四部分暂时不再继续阅读下去， 打算重温一下基础知识。 欲速则不达。 \n\n\n## Monoid Monad Functor \n\n-- Functor 就是定义一个可以在容器上进行map操作的接口的标准\n-- \n\n\n[简练解释Functor Monoid Monad的含义的文章](https://blog.knoldus.com/monads-are-they-really-that-complicated/)\n[另一篇参考](https://thedet.wordpress.com/2012/04/28/functors-monads-applicatives-can-be-so-simple/)\n[Monad Slide](https://www.slideshare.net/knoldus/functors-applicatives-and-monads-in-scala)\n[写给程序员的范畴轮](https://segmentfault.com/a/1190000003882331)\n","source":"_posts/FpInScala读书笔记.md","raw":"---\ntitle: FpInScala读书笔记\ndate: 2019-07-10 12:43:42\ntags: Scala\n---\n- FoldLeft和FoldRight有什么区别？\n- 练习3.7怎么解？\n- FoldRight 如何通过FoldLeft 来实现？\n- 《聊聊什么是函数式》\n- 《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》\n- 《聊聊Scala的Option》\n- append two List\n- append List[List]\n- 如何把ZipWith 改成尾递归操作\n- List hasSubSequence 如何设计\n- 《聊聊Scala的型变》\n- by name和by value什么区别？\n- Scala为啥要定义Stream?\n- 如何定义一个fib Stream\n- monoid monad functor 有什么作用？\n- foldRight By foldMap\n\n\n## 随记\n\n《Scala函数式编程》这本小红书写的真的是深奥，读起来比较难以理解， 同市面发行的大部分书籍相比（大部分关于Scala的书我几乎都买了一遍，而且阅读过一遍）明显不同。 本书主要关注的函数式思想的本身，对于语言特性几乎省略了笔墨， 显然不适合于初学者阅读， 比较适合有过Scala开发经验，且好于map filter foldLeft 这些算子背后的本源感兴趣的工程师阅读。\n\n目前已经阅读了第一部分（1-6章）， 可以说第一到六章可以给读者建立一个直观的感受， 让读者在脑海里有一个印象， 什么是函数式编程，初步体味一些函数编程的优势， 比如模块化，可复用，避免副作用等。展示了 map flatMap等这种常见的算子背后的实现的方式。 \n\n目前正在阅读第二部分， 第二部分可以看做是通过案例来介绍一下函数式编程的优势，在阅读的过程之中，已经稍微能够感受到点难度，不是很好理解。 \n\n本书循序渐进，带领你抽丝剥茧，真神书也！\n\n\n\n\n2019年 7月25日 星期四 22时11分57秒 CST\n至此， 本神书已阅读完前3部分。第四部分暂时不再继续阅读下去， 打算重温一下基础知识。 欲速则不达。 \n\n\n## Monoid Monad Functor \n\n-- Functor 就是定义一个可以在容器上进行map操作的接口的标准\n-- \n\n\n[简练解释Functor Monoid Monad的含义的文章](https://blog.knoldus.com/monads-are-they-really-that-complicated/)\n[另一篇参考](https://thedet.wordpress.com/2012/04/28/functors-monads-applicatives-can-be-so-simple/)\n[Monad Slide](https://www.slideshare.net/knoldus/functors-applicatives-and-monads-in-scala)\n[写给程序员的范畴轮](https://segmentfault.com/a/1190000003882331)\n","slug":"FpInScala读书笔记","published":1,"updated":"2019-07-25T14:27:07.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elq0013bnavfo8xre2a","content":"<ul>\n<li>FoldLeft&#x548C;FoldRight&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</li>\n<li>&#x7EC3;&#x4E60;3.7&#x600E;&#x4E48;&#x89E3;&#xFF1F;</li>\n<li>FoldRight &#x5982;&#x4F55;&#x901A;&#x8FC7;FoldLeft &#x6765;&#x5B9E;&#x73B0;&#xFF1F;</li>\n<li>&#x300A;&#x804A;&#x804A;&#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x300B;</li>\n<li>&#x300A;&#x804A;&#x804A;&#x5C3E;&#x9012;&#x5F52;, &#x662F;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9012;&#x5F52;&#x90FD;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#xFF0C; &#x5982;&#x679C;&#x662F;&#x600E;&#x4E48;&#x8BC1;&#x660E;&#xFF0C; &#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x600E;&#x4E48;&#x628A;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x7684;&#x9012;&#x5F52;&#x64CD;&#x4F5C;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x300B;</li>\n<li>&#x300A;&#x804A;&#x804A;Scala&#x7684;Option&#x300B;</li>\n<li>append two List</li>\n<li>append List[List]</li>\n<li>&#x5982;&#x4F55;&#x628A;ZipWith &#x6539;&#x6210;&#x5C3E;&#x9012;&#x5F52;&#x64CD;&#x4F5C;</li>\n<li>List hasSubSequence &#x5982;&#x4F55;&#x8BBE;&#x8BA1;</li>\n<li>&#x300A;&#x804A;&#x804A;Scala&#x7684;&#x578B;&#x53D8;&#x300B;</li>\n<li>by name&#x548C;by value&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</li>\n<li>Scala&#x4E3A;&#x5565;&#x8981;&#x5B9A;&#x4E49;Stream?</li>\n<li>&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;fib Stream</li>\n<li>monoid monad functor &#x6709;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#xFF1F;</li>\n<li>foldRight By foldMap</li>\n</ul>\n<h2 id=\"&#x968F;&#x8BB0;\"><a href=\"#&#x968F;&#x8BB0;\" class=\"headerlink\" title=\"&#x968F;&#x8BB0;\"></a>&#x968F;&#x8BB0;</h2><p>&#x300A;Scala&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;&#x8FD9;&#x672C;&#x5C0F;&#x7EA2;&#x4E66;&#x5199;&#x7684;&#x771F;&#x7684;&#x662F;&#x6DF1;&#x5965;&#xFF0C;&#x8BFB;&#x8D77;&#x6765;&#x6BD4;&#x8F83;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#xFF0C; &#x540C;&#x5E02;&#x9762;&#x53D1;&#x884C;&#x7684;&#x5927;&#x90E8;&#x5206;&#x4E66;&#x7C4D;&#x76F8;&#x6BD4;&#xFF08;&#x5927;&#x90E8;&#x5206;&#x5173;&#x4E8E;Scala&#x7684;&#x4E66;&#x6211;&#x51E0;&#x4E4E;&#x90FD;&#x4E70;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x800C;&#x4E14;&#x9605;&#x8BFB;&#x8FC7;&#x4E00;&#x904D;&#xFF09;&#x660E;&#x663E;&#x4E0D;&#x540C;&#x3002; &#x672C;&#x4E66;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x601D;&#x60F3;&#x7684;&#x672C;&#x8EAB;&#xFF0C;&#x5BF9;&#x4E8E;&#x8BED;&#x8A00;&#x7279;&#x6027;&#x51E0;&#x4E4E;&#x7701;&#x7565;&#x4E86;&#x7B14;&#x58A8;&#xFF0C; &#x663E;&#x7136;&#x4E0D;&#x9002;&#x5408;&#x4E8E;&#x521D;&#x5B66;&#x8005;&#x9605;&#x8BFB;&#xFF0C; &#x6BD4;&#x8F83;&#x9002;&#x5408;&#x6709;&#x8FC7;Scala&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;&#x4E14;&#x597D;&#x4E8E;map filter foldLeft &#x8FD9;&#x4E9B;&#x7B97;&#x5B50;&#x80CC;&#x540E;&#x7684;&#x672C;&#x6E90;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x5DE5;&#x7A0B;&#x5E08;&#x9605;&#x8BFB;&#x3002;</p>\n<p>&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x9605;&#x8BFB;&#x4E86;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#xFF08;1-6&#x7AE0;&#xFF09;&#xFF0C; &#x53EF;&#x4EE5;&#x8BF4;&#x7B2C;&#x4E00;&#x5230;&#x516D;&#x7AE0;&#x53EF;&#x4EE5;&#x7ED9;&#x8BFB;&#x8005;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x76F4;&#x89C2;&#x7684;&#x611F;&#x53D7;&#xFF0C; &#x8BA9;&#x8BFB;&#x8005;&#x5728;&#x8111;&#x6D77;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x5370;&#x8C61;&#xFF0C; &#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#xFF0C;&#x521D;&#x6B65;&#x4F53;&#x5473;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x7F16;&#x7A0B;&#x7684;&#x4F18;&#x52BF;&#xFF0C; &#x6BD4;&#x5982;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x53EF;&#x590D;&#x7528;&#xFF0C;&#x907F;&#x514D;&#x526F;&#x4F5C;&#x7528;&#x7B49;&#x3002;&#x5C55;&#x793A;&#x4E86; map flatMap&#x7B49;&#x8FD9;&#x79CD;&#x5E38;&#x89C1;&#x7684;&#x7B97;&#x5B50;&#x80CC;&#x540E;&#x7684;&#x5B9E;&#x73B0;&#x7684;&#x65B9;&#x5F0F;&#x3002; </p>\n<p>&#x76EE;&#x524D;&#x6B63;&#x5728;&#x9605;&#x8BFB;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#xFF0C; &#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x901A;&#x8FC7;&#x6848;&#x4F8B;&#x6765;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4F18;&#x52BF;&#xFF0C;&#x5728;&#x9605;&#x8BFB;&#x7684;&#x8FC7;&#x7A0B;&#x4E4B;&#x4E2D;&#xFF0C;&#x5DF2;&#x7ECF;&#x7A0D;&#x5FAE;&#x80FD;&#x591F;&#x611F;&#x53D7;&#x5230;&#x70B9;&#x96BE;&#x5EA6;&#xFF0C;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x3002; </p>\n<p>&#x672C;&#x4E66;&#x5FAA;&#x5E8F;&#x6E10;&#x8FDB;&#xFF0C;&#x5E26;&#x9886;&#x4F60;&#x62BD;&#x4E1D;&#x5265;&#x8327;&#xFF0C;&#x771F;&#x795E;&#x4E66;&#x4E5F;&#xFF01;</p>\n<p>2019&#x5E74; 7&#x6708;25&#x65E5; &#x661F;&#x671F;&#x56DB; 22&#x65F6;11&#x5206;57&#x79D2; CST<br>&#x81F3;&#x6B64;&#xFF0C; &#x672C;&#x795E;&#x4E66;&#x5DF2;&#x9605;&#x8BFB;&#x5B8C;&#x524D;3&#x90E8;&#x5206;&#x3002;&#x7B2C;&#x56DB;&#x90E8;&#x5206;&#x6682;&#x65F6;&#x4E0D;&#x518D;&#x7EE7;&#x7EED;&#x9605;&#x8BFB;&#x4E0B;&#x53BB;&#xFF0C; &#x6253;&#x7B97;&#x91CD;&#x6E29;&#x4E00;&#x4E0B;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x3002; &#x6B32;&#x901F;&#x5219;&#x4E0D;&#x8FBE;&#x3002; </p>\n<h2 id=\"Monoid-Monad-Functor\"><a href=\"#Monoid-Monad-Functor\" class=\"headerlink\" title=\"Monoid Monad Functor\"></a>Monoid Monad Functor</h2><h2 id=\"&#x2013;-Functor-&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;\"><a href=\"#&#x2013;-Functor-&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;\" class=\"headerlink\" title=\"&#x2013; Functor &#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;\"></a>&#x2013; Functor &#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5728;&#x5BB9;&#x5668;&#x4E0A;&#x8FDB;&#x884C;map&#x64CD;&#x4F5C;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x6807;&#x51C6;</h2><p><a href=\"https://blog.knoldus.com/monads-are-they-really-that-complicated/\" target=\"_blank\" rel=\"external\">&#x7B80;&#x7EC3;&#x89E3;&#x91CA;Functor Monoid Monad&#x7684;&#x542B;&#x4E49;&#x7684;&#x6587;&#x7AE0;</a><br><a href=\"https://thedet.wordpress.com/2012/04/28/functors-monads-applicatives-can-be-so-simple/\" target=\"_blank\" rel=\"external\">&#x53E6;&#x4E00;&#x7BC7;&#x53C2;&#x8003;</a><br><a href=\"https://www.slideshare.net/knoldus/functors-applicatives-and-monads-in-scala\" target=\"_blank\" rel=\"external\">Monad Slide</a><br><a href=\"https://segmentfault.com/a/1190000003882331\" target=\"_blank\" rel=\"external\">&#x5199;&#x7ED9;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x8303;&#x7574;&#x8F6E;</a></p>\n","excerpt":"","more":"<ul>\n<li>FoldLeft和FoldRight有什么区别？</li>\n<li>练习3.7怎么解？</li>\n<li>FoldRight 如何通过FoldLeft 来实现？</li>\n<li>《聊聊什么是函数式》</li>\n<li>《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》</li>\n<li>《聊聊Scala的Option》</li>\n<li>append two List</li>\n<li>append List[List]</li>\n<li>如何把ZipWith 改成尾递归操作</li>\n<li>List hasSubSequence 如何设计</li>\n<li>《聊聊Scala的型变》</li>\n<li>by name和by value什么区别？</li>\n<li>Scala为啥要定义Stream?</li>\n<li>如何定义一个fib Stream</li>\n<li>monoid monad functor 有什么作用？</li>\n<li>foldRight By foldMap</li>\n</ul>\n<h2 id=\"随记\"><a href=\"#随记\" class=\"headerlink\" title=\"随记\"></a>随记</h2><p>《Scala函数式编程》这本小红书写的真的是深奥，读起来比较难以理解， 同市面发行的大部分书籍相比（大部分关于Scala的书我几乎都买了一遍，而且阅读过一遍）明显不同。 本书主要关注的函数式思想的本身，对于语言特性几乎省略了笔墨， 显然不适合于初学者阅读， 比较适合有过Scala开发经验，且好于map filter foldLeft 这些算子背后的本源感兴趣的工程师阅读。</p>\n<p>目前已经阅读了第一部分（1-6章）， 可以说第一到六章可以给读者建立一个直观的感受， 让读者在脑海里有一个印象， 什么是函数式编程，初步体味一些函数编程的优势， 比如模块化，可复用，避免副作用等。展示了 map flatMap等这种常见的算子背后的实现的方式。 </p>\n<p>目前正在阅读第二部分， 第二部分可以看做是通过案例来介绍一下函数式编程的优势，在阅读的过程之中，已经稍微能够感受到点难度，不是很好理解。 </p>\n<p>本书循序渐进，带领你抽丝剥茧，真神书也！</p>\n<p>2019年 7月25日 星期四 22时11分57秒 CST<br>至此， 本神书已阅读完前3部分。第四部分暂时不再继续阅读下去， 打算重温一下基础知识。 欲速则不达。 </p>\n<h2 id=\"Monoid-Monad-Functor\"><a href=\"#Monoid-Monad-Functor\" class=\"headerlink\" title=\"Monoid Monad Functor\"></a>Monoid Monad Functor</h2><h2 id=\"–-Functor-就是定义一个可以在容器上进行map操作的接口的标准\"><a href=\"#–-Functor-就是定义一个可以在容器上进行map操作的接口的标准\" class=\"headerlink\" title=\"– Functor 就是定义一个可以在容器上进行map操作的接口的标准\"></a>– Functor 就是定义一个可以在容器上进行map操作的接口的标准</h2><p><a href=\"https://blog.knoldus.com/monads-are-they-really-that-complicated/\">简练解释Functor Monoid Monad的含义的文章</a><br><a href=\"https://thedet.wordpress.com/2012/04/28/functors-monads-applicatives-can-be-so-simple/\">另一篇参考</a><br><a href=\"https://www.slideshare.net/knoldus/functors-applicatives-and-monads-in-scala\">Monad Slide</a><br><a href=\"https://segmentfault.com/a/1190000003882331\">写给程序员的范畴轮</a></p>\n"},{"title":"JVM性能监控","date":"2018-07-27T08:58:08.000Z","_content":"\n# JVM性能监控\n\n\n","source":"_posts/JVM性能监控.md","raw":"---\ntitle: JVM性能监控\ndate: 2018-07-27 16:58:08\ntags: JVM \n---\n\n# JVM性能监控\n\n\n","slug":"JVM性能监控","published":1,"updated":"2018-07-27T08:58:30.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elr0014bnavmc0izdph","content":"<h1 id=\"JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;\"><a href=\"#JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;\" class=\"headerlink\" title=\"JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;\"></a>JVM&#x6027;&#x80FD;&#x76D1;&#x63A7;</h1>","excerpt":"","more":"<h1 id=\"JVM性能监控\"><a href=\"#JVM性能监控\" class=\"headerlink\" title=\"JVM性能监控\"></a>JVM性能监控</h1>"},{"title":"JVMGC","date":"2018-07-25T12:40:48.000Z","_content":"# JVM GC \n## OopMap 数据结构的作用是什么？\nHotSpot 采用OopMap 来记录引用位置，在OopMap 的帮助下，HotSpot 可以快速的完成GC Roots枚举。\n\n## safePoint 是什么？\nsafePoint 是修改OopMap 的位置。GC线程设置标志，各个线程执行时候轮训这个标志，发现这个标志的时候，就自行挂起。 \n\n## 各种收集器\n-   Serial GC 默认方案，适合单CPU场景。 \n-   Serial OLD 是CMS方案的Failure备用方案。\n-   parNew GC 适合多CPU机器以及和CMS 老年代回收配合使用。\n-   CMS 目的是短回收停顿。\n-   Parallel Scavenge 关注新生代的吞吐量\n-   Parallel OLD 配合Parallel Scavenge一起使用, 关注吞吐量。 \n\n## CMS 四个阶段\n- 初始标记 标记一下GC ROOTS直接关联的对象 在此阶段会进行STW。\n- 并发标记 在初始标记的基础之上 进行并发地Tracing。\n- 重新标记 修正在并发标记阶段用户程序继续进行阶段导致的变动的对象的记录 在此阶段将会进行STW。\n- 并发清除 基于标记-清除算法进行回收。 \n\n## CMS垃圾收集的特点\nCPU敏感\nConcurrent Mode Failure \n每隔一段时间会一次Full GC  整理内存的碎片。 \n\n## Concurrent Mode Failure 是什么？\nCMS有可能有垃圾在垃圾标记阶段产生或者在垃圾清理阶段产生，因此正常情况下这部分垃圾会留待下一次的GC过程清理掉。 如果此时不能为这部分垃圾分配空间，那么可能将会产生该Concurrent Mode Failure, 此时将会弃用Serial OLD收集器来进行垃圾回收。 \n\n## G1 垃圾回收特点\n- 充分利用并发，虽然也有STW\n- 仍然分代，但是以Region为单位，物理不连续。 \n- 整体上是标记整理，局部上看是复制算法。 \n- 停顿可预测。避免每次回收堆的整体的空间，可以每一个Region的垃圾回收价值的大小。 \n\n\n## Remember Set 作用\n每一个Region  对应一个Remember Set. 在对Reference 类型的数据进行读写的时候， JVM会中断写操作， 在被应用对象的Region 的对象的RSet中记录上和他有关系的其他的Region信息。 这样在GCroots标记的时候，避免整个堆的扫描。\n\n\n## 类加载器泄露导致OutOfMemory异常\n- 如果一个类加载器内存泄露了，那么它会占用它加载的所有类和它们所有的静态域。静态域通常含有缓存、单例对象和不同的配置以及应用程序状态。即使你的应用程序没有一些大的静态缓存，这也不意味着你使用的框架不占用着它们（如Log4J是一种常见的罪魁祸首,因为它通常是放在服务器类路径中)。这就说明了为什么加载器泄露的代价会很大。\n\n\n","source":"_posts/JVMGC.md","raw":"---\ntitle: JVMGC\ndate: 2018-07-25 20:40:48\ntags: JVM,GC\n---\n# JVM GC \n## OopMap 数据结构的作用是什么？\nHotSpot 采用OopMap 来记录引用位置，在OopMap 的帮助下，HotSpot 可以快速的完成GC Roots枚举。\n\n## safePoint 是什么？\nsafePoint 是修改OopMap 的位置。GC线程设置标志，各个线程执行时候轮训这个标志，发现这个标志的时候，就自行挂起。 \n\n## 各种收集器\n-   Serial GC 默认方案，适合单CPU场景。 \n-   Serial OLD 是CMS方案的Failure备用方案。\n-   parNew GC 适合多CPU机器以及和CMS 老年代回收配合使用。\n-   CMS 目的是短回收停顿。\n-   Parallel Scavenge 关注新生代的吞吐量\n-   Parallel OLD 配合Parallel Scavenge一起使用, 关注吞吐量。 \n\n## CMS 四个阶段\n- 初始标记 标记一下GC ROOTS直接关联的对象 在此阶段会进行STW。\n- 并发标记 在初始标记的基础之上 进行并发地Tracing。\n- 重新标记 修正在并发标记阶段用户程序继续进行阶段导致的变动的对象的记录 在此阶段将会进行STW。\n- 并发清除 基于标记-清除算法进行回收。 \n\n## CMS垃圾收集的特点\nCPU敏感\nConcurrent Mode Failure \n每隔一段时间会一次Full GC  整理内存的碎片。 \n\n## Concurrent Mode Failure 是什么？\nCMS有可能有垃圾在垃圾标记阶段产生或者在垃圾清理阶段产生，因此正常情况下这部分垃圾会留待下一次的GC过程清理掉。 如果此时不能为这部分垃圾分配空间，那么可能将会产生该Concurrent Mode Failure, 此时将会弃用Serial OLD收集器来进行垃圾回收。 \n\n## G1 垃圾回收特点\n- 充分利用并发，虽然也有STW\n- 仍然分代，但是以Region为单位，物理不连续。 \n- 整体上是标记整理，局部上看是复制算法。 \n- 停顿可预测。避免每次回收堆的整体的空间，可以每一个Region的垃圾回收价值的大小。 \n\n\n## Remember Set 作用\n每一个Region  对应一个Remember Set. 在对Reference 类型的数据进行读写的时候， JVM会中断写操作， 在被应用对象的Region 的对象的RSet中记录上和他有关系的其他的Region信息。 这样在GCroots标记的时候，避免整个堆的扫描。\n\n\n## 类加载器泄露导致OutOfMemory异常\n- 如果一个类加载器内存泄露了，那么它会占用它加载的所有类和它们所有的静态域。静态域通常含有缓存、单例对象和不同的配置以及应用程序状态。即使你的应用程序没有一些大的静态缓存，这也不意味着你使用的框架不占用着它们（如Log4J是一种常见的罪魁祸首,因为它通常是放在服务器类路径中)。这就说明了为什么加载器泄露的代价会很大。\n\n\n","slug":"JVMGC","published":1,"updated":"2018-08-02T13:21:14.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1els0017bnav246t692r","content":"<h1 id=\"JVM-GC\"><a href=\"#JVM-GC\" class=\"headerlink\" title=\"JVM GC\"></a>JVM GC</h1><h2 id=\"OopMap-&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"><a href=\"#OopMap-&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\" class=\"headerlink\" title=\"OopMap &#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"></a>OopMap &#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>HotSpot &#x91C7;&#x7528;OopMap &#x6765;&#x8BB0;&#x5F55;&#x5F15;&#x7528;&#x4F4D;&#x7F6E;&#xFF0C;&#x5728;OopMap &#x7684;&#x5E2E;&#x52A9;&#x4E0B;&#xFF0C;HotSpot &#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x5B8C;&#x6210;GC Roots&#x679A;&#x4E3E;&#x3002;</p>\n<h2 id=\"safePoint-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"><a href=\"#safePoint-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\" class=\"headerlink\" title=\"safePoint &#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"></a>safePoint &#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>safePoint &#x662F;&#x4FEE;&#x6539;OopMap &#x7684;&#x4F4D;&#x7F6E;&#x3002;GC&#x7EBF;&#x7A0B;&#x8BBE;&#x7F6E;&#x6807;&#x5FD7;&#xFF0C;&#x5404;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x65F6;&#x5019;&#x8F6E;&#x8BAD;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x81EA;&#x884C;&#x6302;&#x8D77;&#x3002; </p>\n<h2 id=\"&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;\"><a href=\"#&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;\" class=\"headerlink\" title=\"&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;\"></a>&#x5404;&#x79CD;&#x6536;&#x96C6;&#x5668;</h2><ul>\n<li>Serial GC &#x9ED8;&#x8BA4;&#x65B9;&#x6848;&#xFF0C;&#x9002;&#x5408;&#x5355;CPU&#x573A;&#x666F;&#x3002; </li>\n<li>Serial OLD &#x662F;CMS&#x65B9;&#x6848;&#x7684;Failure&#x5907;&#x7528;&#x65B9;&#x6848;&#x3002;</li>\n<li>parNew GC &#x9002;&#x5408;&#x591A;CPU&#x673A;&#x5668;&#x4EE5;&#x53CA;&#x548C;CMS &#x8001;&#x5E74;&#x4EE3;&#x56DE;&#x6536;&#x914D;&#x5408;&#x4F7F;&#x7528;&#x3002;</li>\n<li>CMS &#x76EE;&#x7684;&#x662F;&#x77ED;&#x56DE;&#x6536;&#x505C;&#x987F;&#x3002;</li>\n<li>Parallel Scavenge &#x5173;&#x6CE8;&#x65B0;&#x751F;&#x4EE3;&#x7684;&#x541E;&#x5410;&#x91CF;</li>\n<li>Parallel OLD &#x914D;&#x5408;Parallel Scavenge&#x4E00;&#x8D77;&#x4F7F;&#x7528;, &#x5173;&#x6CE8;&#x541E;&#x5410;&#x91CF;&#x3002; </li>\n</ul>\n<h2 id=\"CMS-&#x56DB;&#x4E2A;&#x9636;&#x6BB5;\"><a href=\"#CMS-&#x56DB;&#x4E2A;&#x9636;&#x6BB5;\" class=\"headerlink\" title=\"CMS &#x56DB;&#x4E2A;&#x9636;&#x6BB5;\"></a>CMS &#x56DB;&#x4E2A;&#x9636;&#x6BB5;</h2><ul>\n<li>&#x521D;&#x59CB;&#x6807;&#x8BB0; &#x6807;&#x8BB0;&#x4E00;&#x4E0B;GC ROOTS&#x76F4;&#x63A5;&#x5173;&#x8054;&#x7684;&#x5BF9;&#x8C61; &#x5728;&#x6B64;&#x9636;&#x6BB5;&#x4F1A;&#x8FDB;&#x884C;STW&#x3002;</li>\n<li>&#x5E76;&#x53D1;&#x6807;&#x8BB0; &#x5728;&#x521D;&#x59CB;&#x6807;&#x8BB0;&#x7684;&#x57FA;&#x7840;&#x4E4B;&#x4E0A; &#x8FDB;&#x884C;&#x5E76;&#x53D1;&#x5730;Tracing&#x3002;</li>\n<li>&#x91CD;&#x65B0;&#x6807;&#x8BB0; &#x4FEE;&#x6B63;&#x5728;&#x5E76;&#x53D1;&#x6807;&#x8BB0;&#x9636;&#x6BB5;&#x7528;&#x6237;&#x7A0B;&#x5E8F;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x9636;&#x6BB5;&#x5BFC;&#x81F4;&#x7684;&#x53D8;&#x52A8;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x8BB0;&#x5F55; &#x5728;&#x6B64;&#x9636;&#x6BB5;&#x5C06;&#x4F1A;&#x8FDB;&#x884C;STW&#x3002;</li>\n<li>&#x5E76;&#x53D1;&#x6E05;&#x9664; &#x57FA;&#x4E8E;&#x6807;&#x8BB0;-&#x6E05;&#x9664;&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x56DE;&#x6536;&#x3002; </li>\n</ul>\n<h2 id=\"CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;\"><a href=\"#CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;\" class=\"headerlink\" title=\"CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;\"></a>CMS&#x5783;&#x573E;&#x6536;&#x96C6;&#x7684;&#x7279;&#x70B9;</h2><p>CPU&#x654F;&#x611F;<br>Concurrent Mode Failure<br>&#x6BCF;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4F1A;&#x4E00;&#x6B21;Full GC  &#x6574;&#x7406;&#x5185;&#x5B58;&#x7684;&#x788E;&#x7247;&#x3002; </p>\n<h2 id=\"Concurrent-Mode-Failure-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"><a href=\"#Concurrent-Mode-Failure-&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\" class=\"headerlink\" title=\"Concurrent Mode Failure &#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"></a>Concurrent Mode Failure &#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><p>CMS&#x6709;&#x53EF;&#x80FD;&#x6709;&#x5783;&#x573E;&#x5728;&#x5783;&#x573E;&#x6807;&#x8BB0;&#x9636;&#x6BB5;&#x4EA7;&#x751F;&#x6216;&#x8005;&#x5728;&#x5783;&#x573E;&#x6E05;&#x7406;&#x9636;&#x6BB5;&#x4EA7;&#x751F;&#xFF0C;&#x56E0;&#x6B64;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x8FD9;&#x90E8;&#x5206;&#x5783;&#x573E;&#x4F1A;&#x7559;&#x5F85;&#x4E0B;&#x4E00;&#x6B21;&#x7684;GC&#x8FC7;&#x7A0B;&#x6E05;&#x7406;&#x6389;&#x3002; &#x5982;&#x679C;&#x6B64;&#x65F6;&#x4E0D;&#x80FD;&#x4E3A;&#x8FD9;&#x90E8;&#x5206;&#x5783;&#x573E;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x5C06;&#x4F1A;&#x4EA7;&#x751F;&#x8BE5;Concurrent Mode Failure, &#x6B64;&#x65F6;&#x5C06;&#x4F1A;&#x5F03;&#x7528;Serial OLD&#x6536;&#x96C6;&#x5668;&#x6765;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x3002; </p>\n<h2 id=\"G1-&#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;\"><a href=\"#G1-&#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;\" class=\"headerlink\" title=\"G1 &#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;\"></a>G1 &#x5783;&#x573E;&#x56DE;&#x6536;&#x7279;&#x70B9;</h2><ul>\n<li>&#x5145;&#x5206;&#x5229;&#x7528;&#x5E76;&#x53D1;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x6709;STW</li>\n<li>&#x4ECD;&#x7136;&#x5206;&#x4EE3;&#xFF0C;&#x4F46;&#x662F;&#x4EE5;Region&#x4E3A;&#x5355;&#x4F4D;&#xFF0C;&#x7269;&#x7406;&#x4E0D;&#x8FDE;&#x7EED;&#x3002; </li>\n<li>&#x6574;&#x4F53;&#x4E0A;&#x662F;&#x6807;&#x8BB0;&#x6574;&#x7406;&#xFF0C;&#x5C40;&#x90E8;&#x4E0A;&#x770B;&#x662F;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#x3002; </li>\n<li>&#x505C;&#x987F;&#x53EF;&#x9884;&#x6D4B;&#x3002;&#x907F;&#x514D;&#x6BCF;&#x6B21;&#x56DE;&#x6536;&#x5806;&#x7684;&#x6574;&#x4F53;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x53EF;&#x4EE5;&#x6BCF;&#x4E00;&#x4E2A;Region&#x7684;&#x5783;&#x573E;&#x56DE;&#x6536;&#x4EF7;&#x503C;&#x7684;&#x5927;&#x5C0F;&#x3002; </li>\n</ul>\n<h2 id=\"Remember-Set-&#x4F5C;&#x7528;\"><a href=\"#Remember-Set-&#x4F5C;&#x7528;\" class=\"headerlink\" title=\"Remember Set &#x4F5C;&#x7528;\"></a>Remember Set &#x4F5C;&#x7528;</h2><p>&#x6BCF;&#x4E00;&#x4E2A;Region  &#x5BF9;&#x5E94;&#x4E00;&#x4E2A;Remember Set. &#x5728;&#x5BF9;Reference &#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x8BFB;&#x5199;&#x7684;&#x65F6;&#x5019;&#xFF0C; JVM&#x4F1A;&#x4E2D;&#x65AD;&#x5199;&#x64CD;&#x4F5C;&#xFF0C; &#x5728;&#x88AB;&#x5E94;&#x7528;&#x5BF9;&#x8C61;&#x7684;Region &#x7684;&#x5BF9;&#x8C61;&#x7684;RSet&#x4E2D;&#x8BB0;&#x5F55;&#x4E0A;&#x548C;&#x4ED6;&#x6709;&#x5173;&#x7CFB;&#x7684;&#x5176;&#x4ED6;&#x7684;Region&#x4FE1;&#x606F;&#x3002; &#x8FD9;&#x6837;&#x5728;GCroots&#x6807;&#x8BB0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x907F;&#x514D;&#x6574;&#x4E2A;&#x5806;&#x7684;&#x626B;&#x63CF;&#x3002;</p>\n<h2 id=\"&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;\"><a href=\"#&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;\" class=\"headerlink\" title=\"&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;\"></a>&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x5BFC;&#x81F4;OutOfMemory&#x5F02;&#x5E38;</h2><ul>\n<li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x4F1A;&#x5360;&#x7528;&#x5B83;&#x52A0;&#x8F7D;&#x7684;&#x6240;&#x6709;&#x7C7B;&#x548C;&#x5B83;&#x4EEC;&#x6240;&#x6709;&#x7684;&#x9759;&#x6001;&#x57DF;&#x3002;&#x9759;&#x6001;&#x57DF;&#x901A;&#x5E38;&#x542B;&#x6709;&#x7F13;&#x5B58;&#x3001;&#x5355;&#x4F8B;&#x5BF9;&#x8C61;&#x548C;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x7F6E;&#x4EE5;&#x53CA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002;&#x5373;&#x4F7F;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6CA1;&#x6709;&#x4E00;&#x4E9B;&#x5927;&#x7684;&#x9759;&#x6001;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x4E5F;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x6846;&#x67B6;&#x4E0D;&#x5360;&#x7528;&#x7740;&#x5B83;&#x4EEC;&#xFF08;&#x5982;Log4J&#x662F;&#x4E00;&#x79CD;&#x5E38;&#x89C1;&#x7684;&#x7F6A;&#x9B41;&#x7978;&#x9996;,&#x56E0;&#x4E3A;&#x5B83;&#x901A;&#x5E38;&#x662F;&#x653E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7C7B;&#x8DEF;&#x5F84;&#x4E2D;)&#x3002;&#x8FD9;&#x5C31;&#x8BF4;&#x660E;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x52A0;&#x8F7D;&#x5668;&#x6CC4;&#x9732;&#x7684;&#x4EE3;&#x4EF7;&#x4F1A;&#x5F88;&#x5927;&#x3002;</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"JVM-GC\"><a href=\"#JVM-GC\" class=\"headerlink\" title=\"JVM GC\"></a>JVM GC</h1><h2 id=\"OopMap-数据结构的作用是什么？\"><a href=\"#OopMap-数据结构的作用是什么？\" class=\"headerlink\" title=\"OopMap 数据结构的作用是什么？\"></a>OopMap 数据结构的作用是什么？</h2><p>HotSpot 采用OopMap 来记录引用位置，在OopMap 的帮助下，HotSpot 可以快速的完成GC Roots枚举。</p>\n<h2 id=\"safePoint-是什么？\"><a href=\"#safePoint-是什么？\" class=\"headerlink\" title=\"safePoint 是什么？\"></a>safePoint 是什么？</h2><p>safePoint 是修改OopMap 的位置。GC线程设置标志，各个线程执行时候轮训这个标志，发现这个标志的时候，就自行挂起。 </p>\n<h2 id=\"各种收集器\"><a href=\"#各种收集器\" class=\"headerlink\" title=\"各种收集器\"></a>各种收集器</h2><ul>\n<li>Serial GC 默认方案，适合单CPU场景。 </li>\n<li>Serial OLD 是CMS方案的Failure备用方案。</li>\n<li>parNew GC 适合多CPU机器以及和CMS 老年代回收配合使用。</li>\n<li>CMS 目的是短回收停顿。</li>\n<li>Parallel Scavenge 关注新生代的吞吐量</li>\n<li>Parallel OLD 配合Parallel Scavenge一起使用, 关注吞吐量。 </li>\n</ul>\n<h2 id=\"CMS-四个阶段\"><a href=\"#CMS-四个阶段\" class=\"headerlink\" title=\"CMS 四个阶段\"></a>CMS 四个阶段</h2><ul>\n<li>初始标记 标记一下GC ROOTS直接关联的对象 在此阶段会进行STW。</li>\n<li>并发标记 在初始标记的基础之上 进行并发地Tracing。</li>\n<li>重新标记 修正在并发标记阶段用户程序继续进行阶段导致的变动的对象的记录 在此阶段将会进行STW。</li>\n<li>并发清除 基于标记-清除算法进行回收。 </li>\n</ul>\n<h2 id=\"CMS垃圾收集的特点\"><a href=\"#CMS垃圾收集的特点\" class=\"headerlink\" title=\"CMS垃圾收集的特点\"></a>CMS垃圾收集的特点</h2><p>CPU敏感<br>Concurrent Mode Failure<br>每隔一段时间会一次Full GC  整理内存的碎片。 </p>\n<h2 id=\"Concurrent-Mode-Failure-是什么？\"><a href=\"#Concurrent-Mode-Failure-是什么？\" class=\"headerlink\" title=\"Concurrent Mode Failure 是什么？\"></a>Concurrent Mode Failure 是什么？</h2><p>CMS有可能有垃圾在垃圾标记阶段产生或者在垃圾清理阶段产生，因此正常情况下这部分垃圾会留待下一次的GC过程清理掉。 如果此时不能为这部分垃圾分配空间，那么可能将会产生该Concurrent Mode Failure, 此时将会弃用Serial OLD收集器来进行垃圾回收。 </p>\n<h2 id=\"G1-垃圾回收特点\"><a href=\"#G1-垃圾回收特点\" class=\"headerlink\" title=\"G1 垃圾回收特点\"></a>G1 垃圾回收特点</h2><ul>\n<li>充分利用并发，虽然也有STW</li>\n<li>仍然分代，但是以Region为单位，物理不连续。 </li>\n<li>整体上是标记整理，局部上看是复制算法。 </li>\n<li>停顿可预测。避免每次回收堆的整体的空间，可以每一个Region的垃圾回收价值的大小。 </li>\n</ul>\n<h2 id=\"Remember-Set-作用\"><a href=\"#Remember-Set-作用\" class=\"headerlink\" title=\"Remember Set 作用\"></a>Remember Set 作用</h2><p>每一个Region  对应一个Remember Set. 在对Reference 类型的数据进行读写的时候， JVM会中断写操作， 在被应用对象的Region 的对象的RSet中记录上和他有关系的其他的Region信息。 这样在GCroots标记的时候，避免整个堆的扫描。</p>\n<h2 id=\"类加载器泄露导致OutOfMemory异常\"><a href=\"#类加载器泄露导致OutOfMemory异常\" class=\"headerlink\" title=\"类加载器泄露导致OutOfMemory异常\"></a>类加载器泄露导致OutOfMemory异常</h2><ul>\n<li>如果一个类加载器内存泄露了，那么它会占用它加载的所有类和它们所有的静态域。静态域通常含有缓存、单例对象和不同的配置以及应用程序状态。即使你的应用程序没有一些大的静态缓存，这也不意味着你使用的框架不占用着它们（如Log4J是一种常见的罪魁祸首,因为它通常是放在服务器类路径中)。这就说明了为什么加载器泄露的代价会很大。</li>\n</ul>\n"},{"title":"LDA现行判别分析","date":"2018-03-21T06:09:46.000Z","_content":"\n[参考文章](https://zhuanlan.zhihu.com/p/27899927?group_id=869893271453863936)\n","source":"_posts/LDA现行判别分析.md","raw":"---\ntitle: LDA现行判别分析\ndate: 2018-03-21 14:09:46\ntags:\n---\n\n[参考文章](https://zhuanlan.zhihu.com/p/27899927?group_id=869893271453863936)\n","slug":"LDA现行判别分析","published":1,"updated":"2018-03-22T06:06:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elt0018bnavgn1i5guy","content":"<p><a href=\"https://zhuanlan.zhihu.com/p/27899927?group_id=869893271453863936\" target=\"_blank\" rel=\"external\">&#x53C2;&#x8003;&#x6587;&#x7AE0;</a></p>\n","excerpt":"","more":"<p><a href=\"https://zhuanlan.zhihu.com/p/27899927?group_id=869893271453863936\">参考文章</a></p>\n"},{"title":"ExactlyOnce","date":"2017-03-28T07:07:49.000Z","_content":"\n\n\nhttps://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/\n","source":"_posts/ExactlyOnce.md","raw":"---\ntitle: ExactlyOnce\ndate: 2017-03-28 15:07:49\ntags:\n---\n\n\n\nhttps://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/\n","slug":"ExactlyOnce","published":1,"updated":"2019-07-19T07:51:09.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elv001bbnavg7s05118","content":"<p><a href=\"https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/\" target=\"_blank\" rel=\"external\">https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/</a></p>\n","excerpt":"","more":"<p><a href=\"https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/\">https://pkghosh.wordpress.com/2016/05/18/exactly-once-stream-processing-semantics-not-exactly/</a></p>\n"},{"title":"Latex","date":"2018-02-23T08:45:55.000Z","mathjax":true,"_content":"\n$$\n\\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\arcsin \\ddot{}\n$$\n\n\n$$\nh^{ \\arctan ^{ x }{ y }  }\\left( x \\right) \n$$\n","source":"_posts/Latex.md","raw":"---\ntitle: Latex\ndate: 2018-02-23 16:45:55\ntags:\nmathjax: true\n---\n\n$$\n\\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\arcsin \\ddot{}\n$$\n\n\n$$\nh^{ \\arctan ^{ x }{ y }  }\\left( x \\right) \n$$\n","slug":"Latex","published":1,"updated":"2018-02-23T09:33:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elw001dbnav1w8ncz9o","content":"<p>$$<br>\\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\arcsin \\ddot{}<br>$$</p>\n<p>$$<br>h^{ \\arctan ^{ x }{ y }  }\\left( x \\right)<br>$$</p>\n","excerpt":"","more":"<p>$$<br>\\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\alpha \\arcsin \\ddot{}<br>$$</p>\n<p>$$<br>h^{ \\arctan ^{ x }{ y }  }\\left( x \\right)<br>$$</p>\n"},{"title":"DebugSparkWithIntelliy","date":"2018-06-01T05:40:40.000Z","_content":"\n\n\n","source":"_posts/DebugSparkWithIntelliy.md","raw":"---\ntitle: DebugSparkWithIntelliy\ndate: 2018-06-01 13:40:40\ntags:\n---\n\n\n\n","slug":"DebugSparkWithIntelliy","published":1,"updated":"2019-12-06T02:23:18.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elx001fbnav9i5dvvfh","content":"","excerpt":"","more":""},{"title":"MAC访问你DOCKER容器中的WEB页面","date":"2016-11-10T15:22:16.000Z","toc":true,"_content":"\n\n\ndocker run -d -p hostport:dockerport --name your_container_name  your_image_name nginx -g \"daemon off;\"\n\n\nthe above instruction start a docker nginx application which bind is port dockerport to its host port hostport.\nusually you can access the nginx service on your host environment by curl the hostport, however in MacOs, ths hostport here \nis the virtual machine. so when you curl localhost:hostport, you will get no response.\n\n\nthe right way is access the virtual machine responding port. so the ip of virtual machine is needed.\n\n```\n    docker-machine ip your_virtual_machine \n```\n\n\n```\n    curl the ip you get:hostport\n```\n\n\n\n\n\n\n","source":"_posts/MAC访问你DOCKER容器中的WEB页面.md","raw":"---\ntitle: MAC访问你DOCKER容器中的WEB页面\ndate: 2016-11-10 23:22:16\ntags:\ntoc: true\n---\n\n\n\ndocker run -d -p hostport:dockerport --name your_container_name  your_image_name nginx -g \"daemon off;\"\n\n\nthe above instruction start a docker nginx application which bind is port dockerport to its host port hostport.\nusually you can access the nginx service on your host environment by curl the hostport, however in MacOs, ths hostport here \nis the virtual machine. so when you curl localhost:hostport, you will get no response.\n\n\nthe right way is access the virtual machine responding port. so the ip of virtual machine is needed.\n\n```\n    docker-machine ip your_virtual_machine \n```\n\n\n```\n    curl the ip you get:hostport\n```\n\n\n\n\n\n\n","slug":"MAC访问你DOCKER容器中的WEB页面","published":1,"updated":"2017-02-15T08:07:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ely001hbnavajogwgrd","content":"<p>docker run -d -p hostport:dockerport &#x2013;name your_container_name  your_image_name nginx -g &#x201C;daemon off;&#x201D;</p>\n<p>the above instruction start a docker nginx application which bind is port dockerport to its host port hostport.<br>usually you can access the nginx service on your host environment by curl the hostport, however in MacOs, ths hostport here<br>is the virtual machine. so when you curl localhost:hostport, you will get no response.</p>\n<p>the right way is access the virtual machine responding port. so the ip of virtual machine is needed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker-machine ip your_virtual_machine</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl the ip you get:hostport</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>docker run -d -p hostport:dockerport –name your_container_name  your_image_name nginx -g “daemon off;”</p>\n<p>the above instruction start a docker nginx application which bind is port dockerport to its host port hostport.<br>usually you can access the nginx service on your host environment by curl the hostport, however in MacOs, ths hostport here<br>is the virtual machine. so when you curl localhost:hostport, you will get no response.</p>\n<p>the right way is access the virtual machine responding port. so the ip of virtual machine is needed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">docker-machine ip your_virtual_machine</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl the ip you get:hostport</div></pre></td></tr></table></figure>\n"},{"title":"MergeSort","date":"2016-07-26T12:30:03.000Z","toc":true,"_content":"归并排序\n\n```\ndef msort[A](less: (A, A) => Boolean)(xs: List[A]): List[A] = { \n    def merge(xs1: List[A], xs2: List[A]): List[A] =\n        if (xs1.isEmpty) xs2\n        else if (xs2.isEmpty) xs1\n        else if (less(xs1.head, xs2.head)) xs1.head :: merge(xs1.tail, xs2) else xs2.head :: merge(xs1, xs2.tail)\n    val n = xs.length/2\n    if (n == 0) xs\n    else merge(msort(less)(xs take n), msort(less)(xs drop n))\n}\n```\n\n如果你对python列表的用法比较熟悉的话，可以按照如下的方式理解\n\n```\n    xs take n   // xs[0:n+1]\n    xs drop n   // xs[n+1:]\n```\n\nmsort函数应该按照如下方式进行调用\n```\nmsort((x: Int, y: Int) => x < y)(List(5, 7, 1, 3))\n```\n","source":"_posts/MergeSort.md","raw":"---\ntitle: MergeSort\ndate: 2016-07-26 20:30:03\ntags: Scala\ntoc: true\n---\n归并排序\n\n```\ndef msort[A](less: (A, A) => Boolean)(xs: List[A]): List[A] = { \n    def merge(xs1: List[A], xs2: List[A]): List[A] =\n        if (xs1.isEmpty) xs2\n        else if (xs2.isEmpty) xs1\n        else if (less(xs1.head, xs2.head)) xs1.head :: merge(xs1.tail, xs2) else xs2.head :: merge(xs1, xs2.tail)\n    val n = xs.length/2\n    if (n == 0) xs\n    else merge(msort(less)(xs take n), msort(less)(xs drop n))\n}\n```\n\n如果你对python列表的用法比较熟悉的话，可以按照如下的方式理解\n\n```\n    xs take n   // xs[0:n+1]\n    xs drop n   // xs[n+1:]\n```\n\nmsort函数应该按照如下方式进行调用\n```\nmsort((x: Int, y: Int) => x < y)(List(5, 7, 1, 3))\n```\n","slug":"MergeSort","published":1,"updated":"2017-02-15T08:07:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ely001jbnavgblajw9m","content":"<p>&#x5F52;&#x5E76;&#x6392;&#x5E8F;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">def msort[A](less: (A, A) =&gt; Boolean)(xs: List[A]): List[A] = { </div><div class=\"line\">    def merge(xs1: List[A], xs2: List[A]): List[A] =</div><div class=\"line\">        if (xs1.isEmpty) xs2</div><div class=\"line\">        else if (xs2.isEmpty) xs1</div><div class=\"line\">        else if (less(xs1.head, xs2.head)) xs1.head :: merge(xs1.tail, xs2) else xs2.head :: merge(xs1, xs2.tail)</div><div class=\"line\">    val n = xs.length/2</div><div class=\"line\">    if (n == 0) xs</div><div class=\"line\">    else merge(msort(less)(xs take n), msort(less)(xs drop n))</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&#x5982;&#x679C;&#x4F60;&#x5BF9;python&#x5217;&#x8868;&#x7684;&#x7528;&#x6CD5;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x7684;&#x65B9;&#x5F0F;&#x7406;&#x89E3;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xs take n   // xs[0:n+1]</div><div class=\"line\">xs drop n   // xs[n+1:]</div></pre></td></tr></table></figure>\n<p>msort&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x8C03;&#x7528;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">msort((x: Int, y: Int) =&gt; x &lt; y)(List(5, 7, 1, 3))</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>归并排序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">def msort[A](less: (A, A) =&gt; Boolean)(xs: List[A]): List[A] = &#123; </div><div class=\"line\">    def merge(xs1: List[A], xs2: List[A]): List[A] =</div><div class=\"line\">        if (xs1.isEmpty) xs2</div><div class=\"line\">        else if (xs2.isEmpty) xs1</div><div class=\"line\">        else if (less(xs1.head, xs2.head)) xs1.head :: merge(xs1.tail, xs2) else xs2.head :: merge(xs1, xs2.tail)</div><div class=\"line\">    val n = xs.length/2</div><div class=\"line\">    if (n == 0) xs</div><div class=\"line\">    else merge(msort(less)(xs take n), msort(less)(xs drop n))</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果你对python列表的用法比较熟悉的话，可以按照如下的方式理解</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xs take n   // xs[0:n+1]</div><div class=\"line\">xs drop n   // xs[n+1:]</div></pre></td></tr></table></figure>\n<p>msort函数应该按照如下方式进行调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">msort((x: Int, y: Int) =&gt; x &lt; y)(List(5, 7, 1, 3))</div></pre></td></tr></table></figure></p>\n"},{"title":"ReinforcementLearning","date":"2018-07-05T06:48:34.000Z","_content":"\n\n# Resources\n\ntest\n\n","source":"_posts/ReinforcementLearning.md","raw":"---\ntitle: ReinforcementLearning\ndate: 2018-07-05 14:48:34\ntags: ML\n---\n\n\n# Resources\n\ntest\n\n","slug":"ReinforcementLearning","published":1,"updated":"2018-07-05T06:49:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1elz001lbnavquaepacq","content":"<h1 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h1><p>test</p>\n","excerpt":"","more":"<h1 id=\"Resources\"><a href=\"#Resources\" class=\"headerlink\" title=\"Resources\"></a>Resources</h1><p>test</p>\n"},{"title":"LearningFlink","date":"2017-01-07T06:07:30.000Z","toc":true,"_content":"# Flink \n\nFlink 处理有界和无界数据源需要采用不同的Api, 对应关系见下表格\n\n|DataSource      |ApiType        |\n|-------------|-------------|\n|bounded source|DataSet Api|\n|unbounded source|DataStream Api|\n\n\n# create sbt project\n\n```\n    mvn archetype:generate  -DarchetypeGroupId=org.apache.flink  -DarchetypeArtifactId=flink-quickstart-scala  -DarchetypeVersion=1.1.3\n```\n\n## Data Sink \n\nif Data Sink operation is defined, then env.execute is needed \n\n\n\n\n","source":"_posts/LearningFlink.md","raw":"---\ntitle: LearningFlink\ndate: 2017-01-07 14:07:30\ntags: Flink\ntoc: true\n---\n# Flink \n\nFlink 处理有界和无界数据源需要采用不同的Api, 对应关系见下表格\n\n|DataSource      |ApiType        |\n|-------------|-------------|\n|bounded source|DataSet Api|\n|unbounded source|DataStream Api|\n\n\n# create sbt project\n\n```\n    mvn archetype:generate  -DarchetypeGroupId=org.apache.flink  -DarchetypeArtifactId=flink-quickstart-scala  -DarchetypeVersion=1.1.3\n```\n\n## Data Sink \n\nif Data Sink operation is defined, then env.execute is needed \n\n\n\n\n","slug":"LearningFlink","published":1,"updated":"2017-02-15T08:07:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em1001mbnav4kedc31n","content":"<h1 id=\"Flink\"><a href=\"#Flink\" class=\"headerlink\" title=\"Flink\"></a>Flink</h1><p>Flink &#x5904;&#x7406;&#x6709;&#x754C;&#x548C;&#x65E0;&#x754C;&#x6570;&#x636E;&#x6E90;&#x9700;&#x8981;&#x91C7;&#x7528;&#x4E0D;&#x540C;&#x7684;Api, &#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x89C1;&#x4E0B;&#x8868;&#x683C;</p>\n<table>\n<thead>\n<tr>\n<th>DataSource</th>\n<th>ApiType</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bounded source</td>\n<td>DataSet Api</td>\n</tr>\n<tr>\n<td>unbounded source</td>\n<td>DataStream Api</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"create-sbt-project\"><a href=\"#create-sbt-project\" class=\"headerlink\" title=\"create sbt project\"></a>create sbt project</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate  -DarchetypeGroupId=org.apache.flink  -DarchetypeArtifactId=flink-quickstart-scala  -DarchetypeVersion=1.1.3</div></pre></td></tr></table></figure>\n<h2 id=\"Data-Sink\"><a href=\"#Data-Sink\" class=\"headerlink\" title=\"Data Sink\"></a>Data Sink</h2><p>if Data Sink operation is defined, then env.execute is needed </p>\n","excerpt":"","more":"<h1 id=\"Flink\"><a href=\"#Flink\" class=\"headerlink\" title=\"Flink\"></a>Flink</h1><p>Flink 处理有界和无界数据源需要采用不同的Api, 对应关系见下表格</p>\n<table>\n<thead>\n<tr>\n<th>DataSource</th>\n<th>ApiType</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bounded source</td>\n<td>DataSet Api</td>\n</tr>\n<tr>\n<td>unbounded source</td>\n<td>DataStream Api</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"create-sbt-project\"><a href=\"#create-sbt-project\" class=\"headerlink\" title=\"create sbt project\"></a>create sbt project</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate  -DarchetypeGroupId=org.apache.flink  -DarchetypeArtifactId=flink-quickstart-scala  -DarchetypeVersion=1.1.3</div></pre></td></tr></table></figure>\n<h2 id=\"Data-Sink\"><a href=\"#Data-Sink\" class=\"headerlink\" title=\"Data Sink\"></a>Data Sink</h2><p>if Data Sink operation is defined, then env.execute is needed </p>\n"},{"title":"LeetCode","date":"2020-03-14T15:19:55.000Z","_content":"\n\n- LeetCode[**392**]\n- LeetCode[**453**] \n- LeetCode[**501**] \n- LeetCode[**686**] \n- LeetCode[**720**] \n- LeetCode[**703**] \n- LeetCode[**783**] \n- LeetCode[**788**] \n- LeetCode[**705**] \n- LeetCode[**849**] \n- LeetCode[**1071**] \n","source":"_posts/LeetCode.md","raw":"---\ntitle: LeetCode\ndate: 2020-03-14 23:19:55\ntags:\n---\n\n\n- LeetCode[**392**]\n- LeetCode[**453**] \n- LeetCode[**501**] \n- LeetCode[**686**] \n- LeetCode[**720**] \n- LeetCode[**703**] \n- LeetCode[**783**] \n- LeetCode[**788**] \n- LeetCode[**705**] \n- LeetCode[**849**] \n- LeetCode[**1071**] \n","slug":"LeetCode","published":1,"updated":"2020-04-22T03:05:42.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em2001pbnavv0b2ubkr","content":"<ul>\n<li>LeetCode[<strong>392</strong>]</li>\n<li>LeetCode[<strong>453</strong>] </li>\n<li>LeetCode[<strong>501</strong>] </li>\n<li>LeetCode[<strong>686</strong>] </li>\n<li>LeetCode[<strong>720</strong>] </li>\n<li>LeetCode[<strong>703</strong>] </li>\n<li>LeetCode[<strong>783</strong>] </li>\n<li>LeetCode[<strong>788</strong>] </li>\n<li>LeetCode[<strong>705</strong>] </li>\n<li>LeetCode[<strong>849</strong>] </li>\n<li>LeetCode[<strong>1071</strong>] </li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>LeetCode[<strong>392</strong>]</li>\n<li>LeetCode[<strong>453</strong>] </li>\n<li>LeetCode[<strong>501</strong>] </li>\n<li>LeetCode[<strong>686</strong>] </li>\n<li>LeetCode[<strong>720</strong>] </li>\n<li>LeetCode[<strong>703</strong>] </li>\n<li>LeetCode[<strong>783</strong>] </li>\n<li>LeetCode[<strong>788</strong>] </li>\n<li>LeetCode[<strong>705</strong>] </li>\n<li>LeetCode[<strong>849</strong>] </li>\n<li>LeetCode[<strong>1071</strong>] </li>\n</ul>\n"},{"title":"SPARK的宽依赖和窄依赖","date":"2016-04-25T15:37:04.000Z","toc":true,"_content":"\n\nspark 的各种不同的transformation操作,可以根据是否依赖父RDDs的所有partision分为‘窄依赖’和‘宽依赖’,简单的说,有shuffle操作的就是宽依赖,而没有shuffle操作的就是窄依赖。\n对于窄依赖,spark会尽量将他们划分为同一个stage,而宽依赖则会称为另外的stage。\n\n","source":"_posts/SPARK的宽依赖和窄依赖.md","raw":"---\ntitle: SPARK的宽依赖和窄依赖\ndate: 2016-04-25 23:37:04\ntags: Spark\ncategories: Spark\ntoc: true\n---\n\n\nspark 的各种不同的transformation操作,可以根据是否依赖父RDDs的所有partision分为‘窄依赖’和‘宽依赖’,简单的说,有shuffle操作的就是宽依赖,而没有shuffle操作的就是窄依赖。\n对于窄依赖,spark会尽量将他们划分为同一个stage,而宽依赖则会称为另外的stage。\n\n","slug":"SPARK的宽依赖和窄依赖","published":1,"updated":"2017-02-15T08:07:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em2001qbnavne346eqe","content":"<p>spark &#x7684;&#x5404;&#x79CD;&#x4E0D;&#x540C;&#x7684;transformation&#x64CD;&#x4F5C;,&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x662F;&#x5426;&#x4F9D;&#x8D56;&#x7236;RDDs&#x7684;&#x6240;&#x6709;partision&#x5206;&#x4E3A;&#x2018;&#x7A84;&#x4F9D;&#x8D56;&#x2019;&#x548C;&#x2018;&#x5BBD;&#x4F9D;&#x8D56;&#x2019;,&#x7B80;&#x5355;&#x7684;&#x8BF4;,&#x6709;shuffle&#x64CD;&#x4F5C;&#x7684;&#x5C31;&#x662F;&#x5BBD;&#x4F9D;&#x8D56;,&#x800C;&#x6CA1;&#x6709;shuffle&#x64CD;&#x4F5C;&#x7684;&#x5C31;&#x662F;&#x7A84;&#x4F9D;&#x8D56;&#x3002;<br>&#x5BF9;&#x4E8E;&#x7A84;&#x4F9D;&#x8D56;,spark&#x4F1A;&#x5C3D;&#x91CF;&#x5C06;&#x4ED6;&#x4EEC;&#x5212;&#x5206;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;stage,&#x800C;&#x5BBD;&#x4F9D;&#x8D56;&#x5219;&#x4F1A;&#x79F0;&#x4E3A;&#x53E6;&#x5916;&#x7684;stage&#x3002;</p>\n","excerpt":"","more":"<p>spark 的各种不同的transformation操作,可以根据是否依赖父RDDs的所有partision分为‘窄依赖’和‘宽依赖’,简单的说,有shuffle操作的就是宽依赖,而没有shuffle操作的就是窄依赖。<br>对于窄依赖,spark会尽量将他们划分为同一个stage,而宽依赖则会称为另外的stage。</p>\n"},{"title":"JavaComments","date":"2019-09-24T09:43:03.000Z","_content":"# JAVA COMMENTS TEMPLATES \n\n```\n/**\n * @description $description$\n   $params$\n * @author zhangshengshan\n * @date $date$\n * @return $return$\n */\n```\n\n```\ngroovyScript(\"def result=''; def params=\\\"${_1}\\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+='\\t* @param ' + params[i] + ((i < params.size() - 1) ? '\\\\n ' : '')}; return result\", methodParameters())  \n```\n","source":"_posts/JavaComments.md","raw":"---\ntitle: JavaComments\ndate: 2019-09-24 17:43:03\ntags:\n---\n# JAVA COMMENTS TEMPLATES \n\n```\n/**\n * @description $description$\n   $params$\n * @author zhangshengshan\n * @date $date$\n * @return $return$\n */\n```\n\n```\ngroovyScript(\"def result=''; def params=\\\"${_1}\\\".replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList(); for(i = 0; i < params.size(); i++) {result+='\\t* @param ' + params[i] + ((i < params.size() - 1) ? '\\\\n ' : '')}; return result\", methodParameters())  \n```\n","slug":"JavaComments","published":1,"updated":"2019-09-24T09:51:17.103Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em3001sbnav4ed87myg","content":"<h1 id=\"JAVA-COMMENTS-TEMPLATES\"><a href=\"#JAVA-COMMENTS-TEMPLATES\" class=\"headerlink\" title=\"JAVA COMMENTS TEMPLATES\"></a>JAVA COMMENTS TEMPLATES</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * @description $description$</div><div class=\"line\">   $params$</div><div class=\"line\"> * @author zhangshengshan</div><div class=\"line\"> * @date $date$</div><div class=\"line\"> * @return $return$</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">groovyScript(&quot;def result=&apos;&apos;; def params=\\&quot;${_1}\\&quot;.replaceAll(&apos;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&apos;, &apos;&apos;).split(&apos;,&apos;).toList(); for(i = 0; i &lt; params.size(); i++) {result+=&apos;\\t* @param &apos; + params[i] + ((i &lt; params.size() - 1) ? &apos;\\\\n &apos; : &apos;&apos;)}; return result&quot;, methodParameters())</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"JAVA-COMMENTS-TEMPLATES\"><a href=\"#JAVA-COMMENTS-TEMPLATES\" class=\"headerlink\" title=\"JAVA COMMENTS TEMPLATES\"></a>JAVA COMMENTS TEMPLATES</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * @description $description$</div><div class=\"line\">   $params$</div><div class=\"line\"> * @author zhangshengshan</div><div class=\"line\"> * @date $date$</div><div class=\"line\"> * @return $return$</div><div class=\"line\"> */</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">groovyScript(&quot;def result=&apos;&apos;; def params=\\&quot;$&#123;_1&#125;\\&quot;.replaceAll(&apos;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&apos;, &apos;&apos;).split(&apos;,&apos;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;result+=&apos;\\t* @param &apos; + params[i] + ((i &lt; params.size() - 1) ? &apos;\\\\n &apos; : &apos;&apos;)&#125;; return result&quot;, methodParameters())</div></pre></td></tr></table></figure>\n"},{"title":"Save DataFrame into a partitioned table of HIVE","date":"2016-08-19T09:15:15.000Z","toc":true,"_content":"\n\n# How to save a spark DataFrame as a patitioned hive table #\n## utilise saveAsTable method ##\n\n```\n    val conf = new SparkConf().setAppName(\"Simple Application\").setMaster(\"local\")\n    val sc = new SparkContext(conf)\n    val sqlContext = new org.apache.spark.sql.SQLContext(sc)\n    import sqlContext.implicits._\n    val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)\n    hiveContext.sql(\"use database\")\n\n    val cmd =\n      \"\"\"\n         select\n          col1,\n          col2\n         from\n          table\n      \"\"\".stripMargin\n    val yourDf = hiveContext.sql(cmd)\n    yourDf.printSchema()\n    yourDf.write.partitionBy(\"col2\").saveAsTable(\"partitionTableName\")\n```\n\n\n\n\n","source":"_posts/Save-DataFrame-into-a-partitioned-table-of-HIVE.md","raw":"---\ntitle: Save DataFrame into a partitioned table of HIVE\ndate: 2016-08-19 17:15:15\ntags: Spark\ncategories: Spark\ntoc: true\n---\n\n\n# How to save a spark DataFrame as a patitioned hive table #\n## utilise saveAsTable method ##\n\n```\n    val conf = new SparkConf().setAppName(\"Simple Application\").setMaster(\"local\")\n    val sc = new SparkContext(conf)\n    val sqlContext = new org.apache.spark.sql.SQLContext(sc)\n    import sqlContext.implicits._\n    val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)\n    hiveContext.sql(\"use database\")\n\n    val cmd =\n      \"\"\"\n         select\n          col1,\n          col2\n         from\n          table\n      \"\"\".stripMargin\n    val yourDf = hiveContext.sql(cmd)\n    yourDf.printSchema()\n    yourDf.write.partitionBy(\"col2\").saveAsTable(\"partitionTableName\")\n```\n\n\n\n\n","slug":"Save-DataFrame-into-a-partitioned-table-of-HIVE","published":1,"updated":"2017-02-15T08:07:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em4001vbnavjdg4sm9n","content":"<h1 id=\"How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table\"><a href=\"#How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table\" class=\"headerlink\" title=\"How to save a spark DataFrame as a patitioned hive table\"></a>How to save a spark DataFrame as a patitioned hive table</h1><h2 id=\"utilise-saveAsTable-method\"><a href=\"#utilise-saveAsTable-method\" class=\"headerlink\" title=\"utilise saveAsTable method\"></a>utilise saveAsTable method</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">val conf = new SparkConf().setAppName(&quot;Simple Application&quot;).setMaster(&quot;local&quot;)</div><div class=\"line\">val sc = new SparkContext(conf)</div><div class=\"line\">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class=\"line\">import sqlContext.implicits._</div><div class=\"line\">val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)</div><div class=\"line\">hiveContext.sql(&quot;use database&quot;)</div><div class=\"line\"></div><div class=\"line\">val cmd =</div><div class=\"line\">  &quot;&quot;&quot;</div><div class=\"line\">     select</div><div class=\"line\">      col1,</div><div class=\"line\">      col2</div><div class=\"line\">     from</div><div class=\"line\">      table</div><div class=\"line\">  &quot;&quot;&quot;.stripMargin</div><div class=\"line\">val yourDf = hiveContext.sql(cmd)</div><div class=\"line\">yourDf.printSchema()</div><div class=\"line\">yourDf.write.partitionBy(&quot;col2&quot;).saveAsTable(&quot;partitionTableName&quot;)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table\"><a href=\"#How-to-save-a-spark-DataFrame-as-a-patitioned-hive-table\" class=\"headerlink\" title=\"How to save a spark DataFrame as a patitioned hive table\"></a>How to save a spark DataFrame as a patitioned hive table</h1><h2 id=\"utilise-saveAsTable-method\"><a href=\"#utilise-saveAsTable-method\" class=\"headerlink\" title=\"utilise saveAsTable method\"></a>utilise saveAsTable method</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">val conf = new SparkConf().setAppName(&quot;Simple Application&quot;).setMaster(&quot;local&quot;)</div><div class=\"line\">val sc = new SparkContext(conf)</div><div class=\"line\">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class=\"line\">import sqlContext.implicits._</div><div class=\"line\">val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)</div><div class=\"line\">hiveContext.sql(&quot;use database&quot;)</div><div class=\"line\"></div><div class=\"line\">val cmd =</div><div class=\"line\">  &quot;&quot;&quot;</div><div class=\"line\">     select</div><div class=\"line\">      col1,</div><div class=\"line\">      col2</div><div class=\"line\">     from</div><div class=\"line\">      table</div><div class=\"line\">  &quot;&quot;&quot;.stripMargin</div><div class=\"line\">val yourDf = hiveContext.sql(cmd)</div><div class=\"line\">yourDf.printSchema()</div><div class=\"line\">yourDf.write.partitionBy(&quot;col2&quot;).saveAsTable(&quot;partitionTableName&quot;)</div></pre></td></tr></table></figure>\n"},{"title":"Scala call-by-name call-by-value","date":"2016-07-19T15:30:34.000Z","toc":true,"_content":"Call-by-value has the advantage that it avoids repeated evaluation of arguments.\nCall-by-name has the advantage that it avoids evaluation of arguments when the\nparameter is not used at all by the function. Call-by-value is usually more efficient\nthan call-by-name, but a call-by-value evaluation might loop where a call-by-name\nevaluation would terminate. Consider:\n\nCall-by-value 的优势在于避免不断的计算参数。而call-by-name的优势在于如果一个函数根本就不会用到的参数，那么也不会被计算，与call-by-value恰好相反。下面的例子展示了一个Call-by-value会不停循环但是Call-by-name会停止的例子。\n\n```\nscala> def loop: Int = loop\nloop: Int\nscala> def first(x: Int, y: Int) = x\nfirst: (Int,Int)Int\n```\nThen first(1, loop) reduces with call-by-name to 1, whereas the same term reduces with call-by-value repeatedly to itself, hence evaluation does not terminate.\nfirst(1, loop)\n→ first(1, loop)\n→ first(1, loop)\n→ ...\n上面的例子，之所以不停的循环的原因就是,y 被声明为 Call-by-value，因而，按照上面的说法，无论是否这个参数会被用到，该参数都会被计算，所以会不停的循环。\n\nScala uses call-by-value by default, but it switches to call-by-name evaluation if the\nparameter type is preceded by =>.\n```\nscala> def constOne(x: Int, y: => Int) = 1\nconstOne: (Int,=> Int)Int\nscala> constOne(1, loop)\nunnamed0: Int = 1\nscala> constOne(loop, 2) // gives an infinite loop.\n```\n\n\nconstOne(1,loop) 会停止，y被声明为Call-by-name, 所以当没有用到这个参数的时候,则不会被计算，因此不会陷入无限循环。\nconstOne(loop,2) 则恰好相反。\n\n\n\n\n本文示例 来自于  《ScalaByExample》,感谢原作者。\n\n\n\n","source":"_posts/Scala-call-by-name-call-by-value.md","raw":"---\ntitle: Scala call-by-name call-by-value\ndate: 2016-07-19 23:30:34\ntags: Scala\ncategories: Scala\ntoc: true\n---\nCall-by-value has the advantage that it avoids repeated evaluation of arguments.\nCall-by-name has the advantage that it avoids evaluation of arguments when the\nparameter is not used at all by the function. Call-by-value is usually more efficient\nthan call-by-name, but a call-by-value evaluation might loop where a call-by-name\nevaluation would terminate. Consider:\n\nCall-by-value 的优势在于避免不断的计算参数。而call-by-name的优势在于如果一个函数根本就不会用到的参数，那么也不会被计算，与call-by-value恰好相反。下面的例子展示了一个Call-by-value会不停循环但是Call-by-name会停止的例子。\n\n```\nscala> def loop: Int = loop\nloop: Int\nscala> def first(x: Int, y: Int) = x\nfirst: (Int,Int)Int\n```\nThen first(1, loop) reduces with call-by-name to 1, whereas the same term reduces with call-by-value repeatedly to itself, hence evaluation does not terminate.\nfirst(1, loop)\n→ first(1, loop)\n→ first(1, loop)\n→ ...\n上面的例子，之所以不停的循环的原因就是,y 被声明为 Call-by-value，因而，按照上面的说法，无论是否这个参数会被用到，该参数都会被计算，所以会不停的循环。\n\nScala uses call-by-value by default, but it switches to call-by-name evaluation if the\nparameter type is preceded by =>.\n```\nscala> def constOne(x: Int, y: => Int) = 1\nconstOne: (Int,=> Int)Int\nscala> constOne(1, loop)\nunnamed0: Int = 1\nscala> constOne(loop, 2) // gives an infinite loop.\n```\n\n\nconstOne(1,loop) 会停止，y被声明为Call-by-name, 所以当没有用到这个参数的时候,则不会被计算，因此不会陷入无限循环。\nconstOne(loop,2) 则恰好相反。\n\n\n\n\n本文示例 来自于  《ScalaByExample》,感谢原作者。\n\n\n\n","slug":"Scala-call-by-name-call-by-value","published":1,"updated":"2017-02-15T08:07:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em5001xbnavykfbgcjs","content":"<p>Call-by-value has the advantage that it avoids repeated evaluation of arguments.<br>Call-by-name has the advantage that it avoids evaluation of arguments when the<br>parameter is not used at all by the function. Call-by-value is usually more efficient<br>than call-by-name, but a call-by-value evaluation might loop where a call-by-name<br>evaluation would terminate. Consider:</p>\n<p>Call-by-value &#x7684;&#x4F18;&#x52BF;&#x5728;&#x4E8E;&#x907F;&#x514D;&#x4E0D;&#x65AD;&#x7684;&#x8BA1;&#x7B97;&#x53C2;&#x6570;&#x3002;&#x800C;call-by-name&#x7684;&#x4F18;&#x52BF;&#x5728;&#x4E8E;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x4E0D;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x4E0E;call-by-value&#x6070;&#x597D;&#x76F8;&#x53CD;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;&#x4E00;&#x4E2A;Call-by-value&#x4F1A;&#x4E0D;&#x505C;&#x5FAA;&#x73AF;&#x4F46;&#x662F;Call-by-name&#x4F1A;&#x505C;&#x6B62;&#x7684;&#x4F8B;&#x5B50;&#x3002;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; def loop: Int = loop</div><div class=\"line\">loop: Int</div><div class=\"line\">scala&gt; def first(x: Int, y: Int) = x</div><div class=\"line\">first: (Int,Int)Int</div></pre></td></tr></table></figure>\n<p>Then first(1, loop) reduces with call-by-name to 1, whereas the same term reduces with call-by-value repeatedly to itself, hence evaluation does not terminate.<br>first(1, loop)<br>&#x2192; first(1, loop)<br>&#x2192; first(1, loop)<br>&#x2192; &#x2026;<br>&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x4E0D;&#x505C;&#x7684;&#x5FAA;&#x73AF;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;,y &#x88AB;&#x58F0;&#x660E;&#x4E3A; Call-by-value&#xFF0C;&#x56E0;&#x800C;&#xFF0C;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5426;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x4F1A;&#x88AB;&#x7528;&#x5230;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x90FD;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x4E0D;&#x505C;&#x7684;&#x5FAA;&#x73AF;&#x3002;</p>\n<p>Scala uses call-by-value by default, but it switches to call-by-name evaluation if the<br>parameter type is preceded by =&gt;.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; def constOne(x: Int, y: =&gt; Int) = 1</div><div class=\"line\">constOne: (Int,=&gt; Int)Int</div><div class=\"line\">scala&gt; constOne(1, loop)</div><div class=\"line\">unnamed0: Int = 1</div><div class=\"line\">scala&gt; constOne(loop, 2) // gives an infinite loop.</div></pre></td></tr></table></figure></p>\n<p>constOne(1,loop) &#x4F1A;&#x505C;&#x6B62;&#xFF0C;y&#x88AB;&#x58F0;&#x660E;&#x4E3A;Call-by-name, &#x6240;&#x4EE5;&#x5F53;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;,&#x5219;&#x4E0D;&#x4F1A;&#x88AB;&#x8BA1;&#x7B97;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x9677;&#x5165;&#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x3002;<br>constOne(loop,2) &#x5219;&#x6070;&#x597D;&#x76F8;&#x53CD;&#x3002;</p>\n<p>&#x672C;&#x6587;&#x793A;&#x4F8B; &#x6765;&#x81EA;&#x4E8E;  &#x300A;ScalaByExample&#x300B;,&#x611F;&#x8C22;&#x539F;&#x4F5C;&#x8005;&#x3002;</p>\n","excerpt":"","more":"<p>Call-by-value has the advantage that it avoids repeated evaluation of arguments.<br>Call-by-name has the advantage that it avoids evaluation of arguments when the<br>parameter is not used at all by the function. Call-by-value is usually more efficient<br>than call-by-name, but a call-by-value evaluation might loop where a call-by-name<br>evaluation would terminate. Consider:</p>\n<p>Call-by-value 的优势在于避免不断的计算参数。而call-by-name的优势在于如果一个函数根本就不会用到的参数，那么也不会被计算，与call-by-value恰好相反。下面的例子展示了一个Call-by-value会不停循环但是Call-by-name会停止的例子。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; def loop: Int = loop</div><div class=\"line\">loop: Int</div><div class=\"line\">scala&gt; def first(x: Int, y: Int) = x</div><div class=\"line\">first: (Int,Int)Int</div></pre></td></tr></table></figure>\n<p>Then first(1, loop) reduces with call-by-name to 1, whereas the same term reduces with call-by-value repeatedly to itself, hence evaluation does not terminate.<br>first(1, loop)<br>→ first(1, loop)<br>→ first(1, loop)<br>→ …<br>上面的例子，之所以不停的循环的原因就是,y 被声明为 Call-by-value，因而，按照上面的说法，无论是否这个参数会被用到，该参数都会被计算，所以会不停的循环。</p>\n<p>Scala uses call-by-value by default, but it switches to call-by-name evaluation if the<br>parameter type is preceded by =&gt;.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; def constOne(x: Int, y: =&gt; Int) = 1</div><div class=\"line\">constOne: (Int,=&gt; Int)Int</div><div class=\"line\">scala&gt; constOne(1, loop)</div><div class=\"line\">unnamed0: Int = 1</div><div class=\"line\">scala&gt; constOne(loop, 2) // gives an infinite loop.</div></pre></td></tr></table></figure></p>\n<p>constOne(1,loop) 会停止，y被声明为Call-by-name, 所以当没有用到这个参数的时候,则不会被计算，因此不会陷入无限循环。<br>constOne(loop,2) 则恰好相反。</p>\n<p>本文示例 来自于  《ScalaByExample》,感谢原作者。</p>\n"},{"title":"ScalaList是线程安全的吗？","date":"2019-04-09T08:43:32.000Z","_content":"\n# Scala List是线程安全的吗？\n\n\n\n# 如果不是的话， 是否能够构造一个小的DEMO证明他不是线程安全的\n\n","source":"_posts/ScalaList是线程安全的吗？.md","raw":"---\ntitle: ScalaList是线程安全的吗？\ndate: 2019-04-09 16:43:32\ntags: Scala\n---\n\n# Scala List是线程安全的吗？\n\n\n\n# 如果不是的话， 是否能够构造一个小的DEMO证明他不是线程安全的\n\n","slug":"ScalaList是线程安全的吗？","published":1,"updated":"2019-04-09T08:44:47.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em6001zbnav4sxez8q9","content":"<h1 id=\"Scala-List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;\"><a href=\"#Scala-List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;\" class=\"headerlink\" title=\"Scala List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;\"></a>Scala List&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x5417;&#xFF1F;</h1><h1 id=\"&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C;-&#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;\"><a href=\"#&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C;-&#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;\" class=\"headerlink\" title=\"&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C; &#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;\"></a>&#x5982;&#x679C;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C; &#x662F;&#x5426;&#x80FD;&#x591F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;DEMO&#x8BC1;&#x660E;&#x4ED6;&#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;</h1>","excerpt":"","more":"<h1 id=\"Scala-List是线程安全的吗？\"><a href=\"#Scala-List是线程安全的吗？\" class=\"headerlink\" title=\"Scala List是线程安全的吗？\"></a>Scala List是线程安全的吗？</h1><h1 id=\"如果不是的话，-是否能够构造一个小的DEMO证明他不是线程安全的\"><a href=\"#如果不是的话，-是否能够构造一个小的DEMO证明他不是线程安全的\" class=\"headerlink\" title=\"如果不是的话， 是否能够构造一个小的DEMO证明他不是线程安全的\"></a>如果不是的话， 是否能够构造一个小的DEMO证明他不是线程安全的</h1>"},{"title":"Scala并发编程读书笔记","date":"2019-04-23T06:20:24.000Z","_content":"\n# text\n\n","source":"_posts/Scala并发编程读书笔记.md","raw":"---\ntitle: Scala并发编程读书笔记\ndate: 2019-04-23 14:20:24\ntags: Scala, 并发编程\n---\n\n# text\n\n","slug":"Scala并发编程读书笔记","published":1,"updated":"2019-04-23T06:37:29.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em70023bnav027uvyvi","content":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1>","excerpt":"","more":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1>"},{"title":"Spark Streaming Programming Guide","date":"2016-12-15T15:58:03.000Z","toc":true,"_content":"\n\n","source":"_posts/Spark-Streaming-Programming-Guide.md","raw":"---\ntitle: Spark Streaming Programming Guide\ndate: 2016-12-15 23:58:03\ntags: Spark Streaming\ncategories: Spark\ntoc: true\n---\n\n\n","slug":"Spark-Streaming-Programming-Guide","published":1,"updated":"2017-02-15T08:08:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em80026bnavyvcgafb3","content":"","excerpt":"","more":""},{"title":"ScalaList","date":"2016-07-26T05:11:12.000Z","toc":true,"_content":"Lists are not built in in Scala; they are defined by an abstract class List, **which comes with two subclasses for :: and Nil.**\nList 并不是Scala的内置类型。List被定义为抽象类。\n\n```\n    package scala\n    abstract class List[+A] {\n```\nList is an abstract class, so one cannot define elements by calling the empty List constructor (e.g. by new List). The class has a type parameter a. It is co-variant in this parameter,which means thatList[S] <: List[T] for all types S and T such thatS <: T.The class is situated in the package scala.This is a package containing the most important standard classes of Scala. List defines a number of methods, which are explained in the following.\nList 是抽象类，所以没有办法通过空的List构造器来定义元素。List存在一个类型参数A。该参数是协变类型, 对于任意类型S和T，如果S<:T, 则 List[S]<:List[T]。该类的定义在scala package中。这个包是Scala中最重要的标准calsses。\n","source":"_posts/ScalaList.md","raw":"---\ntitle: ScalaList\ndate: 2016-07-26 13:11:12\ntags: Scala\ncategories: Scala\ntoc: true\n---\nLists are not built in in Scala; they are defined by an abstract class List, **which comes with two subclasses for :: and Nil.**\nList 并不是Scala的内置类型。List被定义为抽象类。\n\n```\n    package scala\n    abstract class List[+A] {\n```\nList is an abstract class, so one cannot define elements by calling the empty List constructor (e.g. by new List). The class has a type parameter a. It is co-variant in this parameter,which means thatList[S] <: List[T] for all types S and T such thatS <: T.The class is situated in the package scala.This is a package containing the most important standard classes of Scala. List defines a number of methods, which are explained in the following.\nList 是抽象类，所以没有办法通过空的List构造器来定义元素。List存在一个类型参数A。该参数是协变类型, 对于任意类型S和T，如果S<:T, 则 List[S]<:List[T]。该类的定义在scala package中。这个包是Scala中最重要的标准calsses。\n","slug":"ScalaList","published":1,"updated":"2017-02-15T08:08:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1em90029bnavkyv3vc7z","content":"<p>Lists are not built in in Scala; they are defined by an abstract class List, <strong>which comes with two subclasses for :: and Nil.</strong><br>List &#x5E76;&#x4E0D;&#x662F;Scala&#x7684;&#x5185;&#x7F6E;&#x7C7B;&#x578B;&#x3002;List&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x62BD;&#x8C61;&#x7C7B;&#x3002;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">package scala</div><div class=\"line\">abstract class List[+A] {</div></pre></td></tr></table></figure>\n<p>List is an abstract class, so one cannot define elements by calling the empty List constructor (e.g. by new List). The class has a type parameter a. It is co-variant in this parameter,which means thatList[S] &lt;: List[T] for all types S and T such thatS &lt;: T.The class is situated in the package scala.This is a package containing the most important standard classes of Scala. List defines a number of methods, which are explained in the following.<br>List &#x662F;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x901A;&#x8FC7;&#x7A7A;&#x7684;List&#x6784;&#x9020;&#x5668;&#x6765;&#x5B9A;&#x4E49;&#x5143;&#x7D20;&#x3002;List&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x53C2;&#x6570;A&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x534F;&#x53D8;&#x7C7B;&#x578B;, &#x5BF9;&#x4E8E;&#x4EFB;&#x610F;&#x7C7B;&#x578B;S&#x548C;T&#xFF0C;&#x5982;&#x679C;S&lt;:T, &#x5219; List[S]&lt;:List[T]&#x3002;&#x8BE5;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x5728;scala package&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x662F;Scala&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6807;&#x51C6;calsses&#x3002;</p>\n","excerpt":"","more":"<p>Lists are not built in in Scala; they are defined by an abstract class List, <strong>which comes with two subclasses for :: and Nil.</strong><br>List 并不是Scala的内置类型。List被定义为抽象类。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">package scala</div><div class=\"line\">abstract class List[+A] &#123;</div></pre></td></tr></table></figure>\n<p>List is an abstract class, so one cannot define elements by calling the empty List constructor (e.g. by new List). The class has a type parameter a. It is co-variant in this parameter,which means thatList[S] &lt;: List[T] for all types S and T such thatS &lt;: T.The class is situated in the package scala.This is a package containing the most important standard classes of Scala. List defines a number of methods, which are explained in the following.<br>List 是抽象类，所以没有办法通过空的List构造器来定义元素。List存在一个类型参数A。该参数是协变类型, 对于任意类型S和T，如果S&lt;:T, 则 List[S]&lt;:List[T]。该类的定义在scala package中。这个包是Scala中最重要的标准calsses。</p>\n"},{"title":"Spark 2.0 Introduction","date":"2016-08-19T10:04:07.000Z","toc":true,"_content":"\n# Spark 2.0 MLib Introduction #\n\n\nAs of Spark 2.0, the RDD-based APIs in the spark.mllib package have entered maintenance mode. The primary Machine Learning API for Spark is now the DataFrame-based API in the spark.ml package.\n\nSpark2.0 ,在spark.mllib中的基于RDD的机器学习APIs将会进入维护模式。现在机器学习的主要的API基于DataFrame,位于spark.ml中。\n\n\n\nWhat are the implications?\n\n    MLlib will still support the RDD-based API in spark.mllib with bug fixes.\n    MLlib will not add new features to the RDD-based API.\n    In the Spark 2.x releases, MLlib will add features to the DataFrames-based API to reach feature parity with the RDD-based API.\n    After reaching feature parity (roughly estimated for Spark 2.2), the RDD-based API will be deprecated.\n    The RDD-based API is expected to be removed in Spark 3.0.\n\n\nWhy is MLlib switching to the DataFrame-based API?\n\n    DataFrames provide a more user-friendly API than RDDs. The many benefits of DataFrames include Spark Datasources, SQL/DataFrame queries, Tungsten and Catalyst optimizations, and uniform APIs across languages.\n    The DataFrame-based API for MLlib provides a uniform API across ML algorithms and across multiple languages.\n    DataFrames facilitate practical ML Pipelines, particularly feature transformations. See the Pipelines guide for details.\n\n\n\n\n","source":"_posts/Spark-2-0-Introduction.md","raw":"---\ntitle: Spark 2.0 Introduction\ndate: 2016-08-19 18:04:07\ntags: Spark\ncategories: Spark\ntoc: true\n---\n\n# Spark 2.0 MLib Introduction #\n\n\nAs of Spark 2.0, the RDD-based APIs in the spark.mllib package have entered maintenance mode. The primary Machine Learning API for Spark is now the DataFrame-based API in the spark.ml package.\n\nSpark2.0 ,在spark.mllib中的基于RDD的机器学习APIs将会进入维护模式。现在机器学习的主要的API基于DataFrame,位于spark.ml中。\n\n\n\nWhat are the implications?\n\n    MLlib will still support the RDD-based API in spark.mllib with bug fixes.\n    MLlib will not add new features to the RDD-based API.\n    In the Spark 2.x releases, MLlib will add features to the DataFrames-based API to reach feature parity with the RDD-based API.\n    After reaching feature parity (roughly estimated for Spark 2.2), the RDD-based API will be deprecated.\n    The RDD-based API is expected to be removed in Spark 3.0.\n\n\nWhy is MLlib switching to the DataFrame-based API?\n\n    DataFrames provide a more user-friendly API than RDDs. The many benefits of DataFrames include Spark Datasources, SQL/DataFrame queries, Tungsten and Catalyst optimizations, and uniform APIs across languages.\n    The DataFrame-based API for MLlib provides a uniform API across ML algorithms and across multiple languages.\n    DataFrames facilitate practical ML Pipelines, particularly feature transformations. See the Pipelines guide for details.\n\n\n\n\n","slug":"Spark-2-0-Introduction","published":1,"updated":"2017-02-15T08:08:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ema002dbnavkjqze5zt","content":"<h1 id=\"Spark-2-0-MLib-Introduction\"><a href=\"#Spark-2-0-MLib-Introduction\" class=\"headerlink\" title=\"Spark 2.0 MLib Introduction\"></a>Spark 2.0 MLib Introduction</h1><p>As of Spark 2.0, the RDD-based APIs in the spark.mllib package have entered maintenance mode. The primary Machine Learning API for Spark is now the DataFrame-based API in the spark.ml package.</p>\n<p>Spark2.0 ,&#x5728;spark.mllib&#x4E2D;&#x7684;&#x57FA;&#x4E8E;RDD&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;APIs&#x5C06;&#x4F1A;&#x8FDB;&#x5165;&#x7EF4;&#x62A4;&#x6A21;&#x5F0F;&#x3002;&#x73B0;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x4E3B;&#x8981;&#x7684;API&#x57FA;&#x4E8E;DataFrame,&#x4F4D;&#x4E8E;spark.ml&#x4E2D;&#x3002;</p>\n<p>What are the implications?</p>\n<pre><code>MLlib will still support the RDD-based API in spark.mllib with bug fixes.\nMLlib will not add new features to the RDD-based API.\nIn the Spark 2.x releases, MLlib will add features to the DataFrames-based API to reach feature parity with the RDD-based API.\nAfter reaching feature parity (roughly estimated for Spark 2.2), the RDD-based API will be deprecated.\nThe RDD-based API is expected to be removed in Spark 3.0.\n</code></pre><p>Why is MLlib switching to the DataFrame-based API?</p>\n<pre><code>DataFrames provide a more user-friendly API than RDDs. The many benefits of DataFrames include Spark Datasources, SQL/DataFrame queries, Tungsten and Catalyst optimizations, and uniform APIs across languages.\nThe DataFrame-based API for MLlib provides a uniform API across ML algorithms and across multiple languages.\nDataFrames facilitate practical ML Pipelines, particularly feature transformations. See the Pipelines guide for details.\n</code></pre>","excerpt":"","more":"<h1 id=\"Spark-2-0-MLib-Introduction\"><a href=\"#Spark-2-0-MLib-Introduction\" class=\"headerlink\" title=\"Spark 2.0 MLib Introduction\"></a>Spark 2.0 MLib Introduction</h1><p>As of Spark 2.0, the RDD-based APIs in the spark.mllib package have entered maintenance mode. The primary Machine Learning API for Spark is now the DataFrame-based API in the spark.ml package.</p>\n<p>Spark2.0 ,在spark.mllib中的基于RDD的机器学习APIs将会进入维护模式。现在机器学习的主要的API基于DataFrame,位于spark.ml中。</p>\n<p>What are the implications?</p>\n<pre><code>MLlib will still support the RDD-based API in spark.mllib with bug fixes.\nMLlib will not add new features to the RDD-based API.\nIn the Spark 2.x releases, MLlib will add features to the DataFrames-based API to reach feature parity with the RDD-based API.\nAfter reaching feature parity (roughly estimated for Spark 2.2), the RDD-based API will be deprecated.\nThe RDD-based API is expected to be removed in Spark 3.0.\n</code></pre><p>Why is MLlib switching to the DataFrame-based API?</p>\n<pre><code>DataFrames provide a more user-friendly API than RDDs. The many benefits of DataFrames include Spark Datasources, SQL/DataFrame queries, Tungsten and Catalyst optimizations, and uniform APIs across languages.\nThe DataFrame-based API for MLlib provides a uniform API across ML algorithms and across multiple languages.\nDataFrames facilitate practical ML Pipelines, particularly feature transformations. See the Pipelines guide for details.\n</code></pre>"},{"title":"ReleasePackageToSonatypeRepo","date":"2017-06-21T05:24:54.000Z","_content":"\n\n# maven工程构件发布到Maven中央仓库\n\n[参考文档](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components)\n\npom.xml 示例\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>io.github.zhangshengshan</groupId>\n  <artifactId>zss</artifactId>\n  <packaging>jar</packaging>\n  <version>3.0</version>\n\n  <name>my-app</name>\n  <description>a package which implements some machine learing methods</description>\n  <url>http://github.zhangshengshan.ig</url>\n  <scm>\n    <connection>scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git</connection>\n    <developerConnection>scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git</developerConnection>\n    <tag>HEAD</tag>\n    <url>http://io.github.zhangshengshan</url>\n  </scm>\n\n    <licenses>\n      <license>\n        <name>Apache License, Version 2.0</name>\n        <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n        <distribution>repo</distribution>\n        <comments>A business-friendly OSS license</comments>\n      </license>\n    </licenses>\n\n  <developers>\n    <developer>\n      <id>zhangshengshan</id>\n      <name>zhangshengshan</name>\n      <email>alphabetago@163.com</email>\n      <url>http://github.zhangshengshan.io</url>\n      <organization>youzan</organization>\n      <organizationUrl>http://www.youzan.com</organizationUrl>\n      <roles>\n        <role>architect</role>\n        <role>developer</role>\n      </roles>\n      <timezone>China/Beijing</timezone>\n      <properties>\n        <picUrl>http://www.example.com/jdoe/pic</picUrl>\n      </properties>\n    </developer>\n  </developers>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n<build>\n  <plugins>\n    <plugin>\n      <groupId>org.sonatype.plugins</groupId>\n      <artifactId>nexus-staging-maven-plugin</artifactId>\n      <version>1.6.7</version>\n      <extensions>true</extensions>\n      <configuration>\n         <serverId>ossrh</serverId>\n         <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n         <!--<autoReleaseAfterClose>true</autoReleaseAfterClose>-->\n      </configuration>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-gpg-plugin</artifactId>\n      <version>1.5</version>\n      <executions>\n        <execution>\n          <id>sign-artifacts</id>\n          <phase>verify</phase>\n          <goals>\n            <goal>sign</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-source-plugin</artifactId>\n      <version>2.2.1</version>\n      <executions>\n        <execution>\n          <id>attach-sources</id>\n          <goals>\n            <goal>jar-no-fork</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-javadoc-plugin</artifactId>\n      <version>2.9.1</version>\n      <executions>\n        <execution>\n          <id>attach-javadocs</id>\n          <goals>\n            <goal>jar</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n</build>\n\n<distributionManagement>\n  <snapshotRepository>\n    <id>ossrh</id>\n    <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n  </snapshotRepository>\n</distributionManagement>\n\n<!--<distributionManagement>-->\n  <!--<snapshotRepository>-->\n    <!--<id>ossrh</id>-->\n    <!--<url>https://oss.sonatype.org/content/repositories/snapshots</url>-->\n  <!--</snapshotRepository>-->\n  <!--<repository>-->\n    <!--<id>ossrh</id>-->\n    <!--<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->\n  <!--</repository>-->\n<!--</distributionManagement>-->\n</project>\n\n```\n\n\n\n# SBT工程构件发布到Maven中央仓库\n\n[参考文档](http://central.sonatype.org/pages/sbt.html#deploying-to-ossrh-with-sbt-introduction)\n\nbuild.sbt示例\n```\naddSbtPlugin(\"org.xerial.sbt\" % \"sbt-sonatype\" % \"1.1\")\n\nuseGpg := true\norganization := \"io.github.zhangshengshan\"\nname := \"sbtSonatype\"\nversion := \"5.0.1\"\nscalaVersion := \"2.10.6\"\n\nlicenses := Seq(\"BSD-style\" -> url(\"http://www.opensource.org/licenses/bsd-license.php\"))\nhomepage := Some(url(\"http://example.com\"))\nscmInfo := Some(\n  ScmInfo(\n    url(\"https://github.com/your-account/your-project\"),\n    \"scm:git@github.com:your-account/your-project.git\"\n  )\n)\ndevelopers := List(\n  Developer(\n    id    = \"Your identifier\",\n    name  = \"Your Name\",\n    email = \"your@email\",\n    url   = url(\"http://your.url\")\n  )\n)\n\npomIncludeRepository := { _ => false }\npublishMavenStyle := true\n\npublishTo := {\n  val nexus = \"https://oss.sonatype.org/\"\n  if (isSnapshot.value)\n    Some(\"snapshots\" at nexus + \"content/repositories/snapshots\")\n  else\n    Some(\"releases\"  at nexus + \"service/local/staging/deploy/maven2\")\n}\npublishArtifact in Test:= false\n```\n\n\n\n# 参考文档\n- https://www.devdungeon.com/content/publish-java-packages-maven-central-repository\n- https://central.sonatype.org/pages/sbt.html\n- https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction\n\ngit@github.com:zhangshengshan/myflinkLearning.git\n\n","source":"_posts/ReleasePackageToSonatypeRepo.md","raw":"---\ntitle: ReleasePackageToSonatypeRepo\ndate: 2017-06-21 13:24:54\ntags: maven \n---\n\n\n# maven工程构件发布到Maven中央仓库\n\n[参考文档](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components)\n\npom.xml 示例\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>io.github.zhangshengshan</groupId>\n  <artifactId>zss</artifactId>\n  <packaging>jar</packaging>\n  <version>3.0</version>\n\n  <name>my-app</name>\n  <description>a package which implements some machine learing methods</description>\n  <url>http://github.zhangshengshan.ig</url>\n  <scm>\n    <connection>scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git</connection>\n    <developerConnection>scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git</developerConnection>\n    <tag>HEAD</tag>\n    <url>http://io.github.zhangshengshan</url>\n  </scm>\n\n    <licenses>\n      <license>\n        <name>Apache License, Version 2.0</name>\n        <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n        <distribution>repo</distribution>\n        <comments>A business-friendly OSS license</comments>\n      </license>\n    </licenses>\n\n  <developers>\n    <developer>\n      <id>zhangshengshan</id>\n      <name>zhangshengshan</name>\n      <email>alphabetago@163.com</email>\n      <url>http://github.zhangshengshan.io</url>\n      <organization>youzan</organization>\n      <organizationUrl>http://www.youzan.com</organizationUrl>\n      <roles>\n        <role>architect</role>\n        <role>developer</role>\n      </roles>\n      <timezone>China/Beijing</timezone>\n      <properties>\n        <picUrl>http://www.example.com/jdoe/pic</picUrl>\n      </properties>\n    </developer>\n  </developers>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n<build>\n  <plugins>\n    <plugin>\n      <groupId>org.sonatype.plugins</groupId>\n      <artifactId>nexus-staging-maven-plugin</artifactId>\n      <version>1.6.7</version>\n      <extensions>true</extensions>\n      <configuration>\n         <serverId>ossrh</serverId>\n         <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n         <!--<autoReleaseAfterClose>true</autoReleaseAfterClose>-->\n      </configuration>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-gpg-plugin</artifactId>\n      <version>1.5</version>\n      <executions>\n        <execution>\n          <id>sign-artifacts</id>\n          <phase>verify</phase>\n          <goals>\n            <goal>sign</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-source-plugin</artifactId>\n      <version>2.2.1</version>\n      <executions>\n        <execution>\n          <id>attach-sources</id>\n          <goals>\n            <goal>jar-no-fork</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n    <plugin>\n      <groupId>org.apache.maven.plugins</groupId>\n      <artifactId>maven-javadoc-plugin</artifactId>\n      <version>2.9.1</version>\n      <executions>\n        <execution>\n          <id>attach-javadocs</id>\n          <goals>\n            <goal>jar</goal>\n          </goals>\n        </execution>\n      </executions>\n    </plugin>\n  </plugins>\n</build>\n\n<distributionManagement>\n  <snapshotRepository>\n    <id>ossrh</id>\n    <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n  </snapshotRepository>\n</distributionManagement>\n\n<!--<distributionManagement>-->\n  <!--<snapshotRepository>-->\n    <!--<id>ossrh</id>-->\n    <!--<url>https://oss.sonatype.org/content/repositories/snapshots</url>-->\n  <!--</snapshotRepository>-->\n  <!--<repository>-->\n    <!--<id>ossrh</id>-->\n    <!--<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->\n  <!--</repository>-->\n<!--</distributionManagement>-->\n</project>\n\n```\n\n\n\n# SBT工程构件发布到Maven中央仓库\n\n[参考文档](http://central.sonatype.org/pages/sbt.html#deploying-to-ossrh-with-sbt-introduction)\n\nbuild.sbt示例\n```\naddSbtPlugin(\"org.xerial.sbt\" % \"sbt-sonatype\" % \"1.1\")\n\nuseGpg := true\norganization := \"io.github.zhangshengshan\"\nname := \"sbtSonatype\"\nversion := \"5.0.1\"\nscalaVersion := \"2.10.6\"\n\nlicenses := Seq(\"BSD-style\" -> url(\"http://www.opensource.org/licenses/bsd-license.php\"))\nhomepage := Some(url(\"http://example.com\"))\nscmInfo := Some(\n  ScmInfo(\n    url(\"https://github.com/your-account/your-project\"),\n    \"scm:git@github.com:your-account/your-project.git\"\n  )\n)\ndevelopers := List(\n  Developer(\n    id    = \"Your identifier\",\n    name  = \"Your Name\",\n    email = \"your@email\",\n    url   = url(\"http://your.url\")\n  )\n)\n\npomIncludeRepository := { _ => false }\npublishMavenStyle := true\n\npublishTo := {\n  val nexus = \"https://oss.sonatype.org/\"\n  if (isSnapshot.value)\n    Some(\"snapshots\" at nexus + \"content/repositories/snapshots\")\n  else\n    Some(\"releases\"  at nexus + \"service/local/staging/deploy/maven2\")\n}\npublishArtifact in Test:= false\n```\n\n\n\n# 参考文档\n- https://www.devdungeon.com/content/publish-java-packages-maven-central-repository\n- https://central.sonatype.org/pages/sbt.html\n- https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction\n\ngit@github.com:zhangshengshan/myflinkLearning.git\n\n","slug":"ReleasePackageToSonatypeRepo","published":1,"updated":"2019-12-11T09:40:28.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emg002gbnav1rlkj7e9","content":"<h1 id=\"maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\"><a href=\"#maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\" class=\"headerlink\" title=\"maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\"></a>maven&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;</h1><p><a href=\"http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components\" target=\"_blank\" rel=\"external\">&#x53C2;&#x8003;&#x6587;&#x6863;</a></p>\n<p>pom.xml &#x793A;&#x4F8B;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">  &lt;groupId&gt;io.github.zhangshengshan&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;zss&lt;/artifactId&gt;</div><div class=\"line\">  &lt;packaging&gt;jar&lt;/packaging&gt;</div><div class=\"line\">  &lt;version&gt;3.0&lt;/version&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;name&gt;my-app&lt;/name&gt;</div><div class=\"line\">  &lt;description&gt;a package which implements some machine learing methods&lt;/description&gt;</div><div class=\"line\">  &lt;url&gt;http://github.zhangshengshan.ig&lt;/url&gt;</div><div class=\"line\">  &lt;scm&gt;</div><div class=\"line\">    &lt;connection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/connection&gt;</div><div class=\"line\">    &lt;developerConnection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/developerConnection&gt;</div><div class=\"line\">    &lt;tag&gt;HEAD&lt;/tag&gt;</div><div class=\"line\">    &lt;url&gt;http://io.github.zhangshengshan&lt;/url&gt;</div><div class=\"line\">  &lt;/scm&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;licenses&gt;</div><div class=\"line\">      &lt;license&gt;</div><div class=\"line\">        &lt;name&gt;Apache License, Version 2.0&lt;/name&gt;</div><div class=\"line\">        &lt;url&gt;https://www.apache.org/licenses/LICENSE-2.0.txt&lt;/url&gt;</div><div class=\"line\">        &lt;distribution&gt;repo&lt;/distribution&gt;</div><div class=\"line\">        &lt;comments&gt;A business-friendly OSS license&lt;/comments&gt;</div><div class=\"line\">      &lt;/license&gt;</div><div class=\"line\">    &lt;/licenses&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;developers&gt;</div><div class=\"line\">    &lt;developer&gt;</div><div class=\"line\">      &lt;id&gt;zhangshengshan&lt;/id&gt;</div><div class=\"line\">      &lt;name&gt;zhangshengshan&lt;/name&gt;</div><div class=\"line\">      &lt;email&gt;alphabetago@163.com&lt;/email&gt;</div><div class=\"line\">      &lt;url&gt;http://github.zhangshengshan.io&lt;/url&gt;</div><div class=\"line\">      &lt;organization&gt;youzan&lt;/organization&gt;</div><div class=\"line\">      &lt;organizationUrl&gt;http://www.youzan.com&lt;/organizationUrl&gt;</div><div class=\"line\">      &lt;roles&gt;</div><div class=\"line\">        &lt;role&gt;architect&lt;/role&gt;</div><div class=\"line\">        &lt;role&gt;developer&lt;/role&gt;</div><div class=\"line\">      &lt;/roles&gt;</div><div class=\"line\">      &lt;timezone&gt;China/Beijing&lt;/timezone&gt;</div><div class=\"line\">      &lt;properties&gt;</div><div class=\"line\">        &lt;picUrl&gt;http://www.example.com/jdoe/pic&lt;/picUrl&gt;</div><div class=\"line\">      &lt;/properties&gt;</div><div class=\"line\">    &lt;/developer&gt;</div><div class=\"line\">  &lt;/developers&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">  &lt;/dependencies&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;build&gt;</div><div class=\"line\">  &lt;plugins&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.sonatype.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;nexus-staging-maven-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;1.6.7&lt;/version&gt;</div><div class=\"line\">      &lt;extensions&gt;true&lt;/extensions&gt;</div><div class=\"line\">      &lt;configuration&gt;</div><div class=\"line\">         &lt;serverId&gt;ossrh&lt;/serverId&gt;</div><div class=\"line\">         &lt;nexusUrl&gt;https://oss.sonatype.org/&lt;/nexusUrl&gt;</div><div class=\"line\">         &lt;!--&lt;autoReleaseAfterClose&gt;true&lt;/autoReleaseAfterClose&gt;--&gt;</div><div class=\"line\">      &lt;/configuration&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;1.5&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;sign-artifacts&lt;/id&gt;</div><div class=\"line\">          &lt;phase&gt;verify&lt;/phase&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;sign&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;2.2.1&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;attach-sources&lt;/id&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;jar-no-fork&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;2.9.1&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;attach-javadocs&lt;/id&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;jar&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">  &lt;/plugins&gt;</div><div class=\"line\">&lt;/build&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;distributionManagement&gt;</div><div class=\"line\">  &lt;snapshotRepository&gt;</div><div class=\"line\">    &lt;id&gt;ossrh&lt;/id&gt;</div><div class=\"line\">    &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;</div><div class=\"line\">  &lt;/snapshotRepository&gt;</div><div class=\"line\">&lt;/distributionManagement&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!--&lt;distributionManagement&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;snapshotRepository&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;/snapshotRepository&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;repository&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;/repository&gt;--&gt;</div><div class=\"line\">&lt;!--&lt;/distributionManagement&gt;--&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\"><a href=\"#SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\" class=\"headerlink\" title=\"SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;\"></a>SBT&#x5DE5;&#x7A0B;&#x6784;&#x4EF6;&#x53D1;&#x5E03;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93;</h1><p><a href=\"http://central.sonatype.org/pages/sbt.html#deploying-to-ossrh-with-sbt-introduction\" target=\"_blank\" rel=\"external\">&#x53C2;&#x8003;&#x6587;&#x6863;</a></p>\n<p>build.sbt&#x793A;&#x4F8B;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">addSbtPlugin(&quot;org.xerial.sbt&quot; % &quot;sbt-sonatype&quot; % &quot;1.1&quot;)</div><div class=\"line\"></div><div class=\"line\">useGpg := true</div><div class=\"line\">organization := &quot;io.github.zhangshengshan&quot;</div><div class=\"line\">name := &quot;sbtSonatype&quot;</div><div class=\"line\">version := &quot;5.0.1&quot;</div><div class=\"line\">scalaVersion := &quot;2.10.6&quot;</div><div class=\"line\"></div><div class=\"line\">licenses := Seq(&quot;BSD-style&quot; -&gt; url(&quot;http://www.opensource.org/licenses/bsd-license.php&quot;))</div><div class=\"line\">homepage := Some(url(&quot;http://example.com&quot;))</div><div class=\"line\">scmInfo := Some(</div><div class=\"line\">  ScmInfo(</div><div class=\"line\">    url(&quot;https://github.com/your-account/your-project&quot;),</div><div class=\"line\">    &quot;scm:git@github.com:your-account/your-project.git&quot;</div><div class=\"line\">  )</div><div class=\"line\">)</div><div class=\"line\">developers := List(</div><div class=\"line\">  Developer(</div><div class=\"line\">    id    = &quot;Your identifier&quot;,</div><div class=\"line\">    name  = &quot;Your Name&quot;,</div><div class=\"line\">    email = &quot;your@email&quot;,</div><div class=\"line\">    url   = url(&quot;http://your.url&quot;)</div><div class=\"line\">  )</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\">pomIncludeRepository := { _ =&gt; false }</div><div class=\"line\">publishMavenStyle := true</div><div class=\"line\"></div><div class=\"line\">publishTo := {</div><div class=\"line\">  val nexus = &quot;https://oss.sonatype.org/&quot;</div><div class=\"line\">  if (isSnapshot.value)</div><div class=\"line\">    Some(&quot;snapshots&quot; at nexus + &quot;content/repositories/snapshots&quot;)</div><div class=\"line\">  else</div><div class=\"line\">    Some(&quot;releases&quot;  at nexus + &quot;service/local/staging/deploy/maven2&quot;)</div><div class=\"line\">}</div><div class=\"line\">publishArtifact in Test:= false</div></pre></td></tr></table></figure></p>\n<h1 id=\"&#x53C2;&#x8003;&#x6587;&#x6863;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x6863;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x6863;\"></a>&#x53C2;&#x8003;&#x6587;&#x6863;</h1><ul>\n<li><a href=\"https://www.devdungeon.com/content/publish-java-packages-maven-central-repository\" target=\"_blank\" rel=\"external\">https://www.devdungeon.com/content/publish-java-packages-maven-central-repository</a></li>\n<li><a href=\"https://central.sonatype.org/pages/sbt.html\" target=\"_blank\" rel=\"external\">https://central.sonatype.org/pages/sbt.html</a></li>\n<li><a href=\"https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction\" target=\"_blank\" rel=\"external\">https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction</a></li>\n</ul>\n<p><a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"external\">git@github.com</a>:zhangshengshan/myflinkLearning.git</p>\n","excerpt":"","more":"<h1 id=\"maven工程构件发布到Maven中央仓库\"><a href=\"#maven工程构件发布到Maven中央仓库\" class=\"headerlink\" title=\"maven工程构件发布到Maven中央仓库\"></a>maven工程构件发布到Maven中央仓库</h1><p><a href=\"http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components\">参考文档</a></p>\n<p>pom.xml 示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">  &lt;groupId&gt;io.github.zhangshengshan&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;zss&lt;/artifactId&gt;</div><div class=\"line\">  &lt;packaging&gt;jar&lt;/packaging&gt;</div><div class=\"line\">  &lt;version&gt;3.0&lt;/version&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;name&gt;my-app&lt;/name&gt;</div><div class=\"line\">  &lt;description&gt;a package which implements some machine learing methods&lt;/description&gt;</div><div class=\"line\">  &lt;url&gt;http://github.zhangshengshan.ig&lt;/url&gt;</div><div class=\"line\">  &lt;scm&gt;</div><div class=\"line\">    &lt;connection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/connection&gt;</div><div class=\"line\">    &lt;developerConnection&gt;scm:git:https://github.com/zhangshengshan/com.zhangshengshan.git&lt;/developerConnection&gt;</div><div class=\"line\">    &lt;tag&gt;HEAD&lt;/tag&gt;</div><div class=\"line\">    &lt;url&gt;http://io.github.zhangshengshan&lt;/url&gt;</div><div class=\"line\">  &lt;/scm&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;licenses&gt;</div><div class=\"line\">      &lt;license&gt;</div><div class=\"line\">        &lt;name&gt;Apache License, Version 2.0&lt;/name&gt;</div><div class=\"line\">        &lt;url&gt;https://www.apache.org/licenses/LICENSE-2.0.txt&lt;/url&gt;</div><div class=\"line\">        &lt;distribution&gt;repo&lt;/distribution&gt;</div><div class=\"line\">        &lt;comments&gt;A business-friendly OSS license&lt;/comments&gt;</div><div class=\"line\">      &lt;/license&gt;</div><div class=\"line\">    &lt;/licenses&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;developers&gt;</div><div class=\"line\">    &lt;developer&gt;</div><div class=\"line\">      &lt;id&gt;zhangshengshan&lt;/id&gt;</div><div class=\"line\">      &lt;name&gt;zhangshengshan&lt;/name&gt;</div><div class=\"line\">      &lt;email&gt;alphabetago@163.com&lt;/email&gt;</div><div class=\"line\">      &lt;url&gt;http://github.zhangshengshan.io&lt;/url&gt;</div><div class=\"line\">      &lt;organization&gt;youzan&lt;/organization&gt;</div><div class=\"line\">      &lt;organizationUrl&gt;http://www.youzan.com&lt;/organizationUrl&gt;</div><div class=\"line\">      &lt;roles&gt;</div><div class=\"line\">        &lt;role&gt;architect&lt;/role&gt;</div><div class=\"line\">        &lt;role&gt;developer&lt;/role&gt;</div><div class=\"line\">      &lt;/roles&gt;</div><div class=\"line\">      &lt;timezone&gt;China/Beijing&lt;/timezone&gt;</div><div class=\"line\">      &lt;properties&gt;</div><div class=\"line\">        &lt;picUrl&gt;http://www.example.com/jdoe/pic&lt;/picUrl&gt;</div><div class=\"line\">      &lt;/properties&gt;</div><div class=\"line\">    &lt;/developer&gt;</div><div class=\"line\">  &lt;/developers&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">  &lt;/dependencies&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;build&gt;</div><div class=\"line\">  &lt;plugins&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.sonatype.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;nexus-staging-maven-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;1.6.7&lt;/version&gt;</div><div class=\"line\">      &lt;extensions&gt;true&lt;/extensions&gt;</div><div class=\"line\">      &lt;configuration&gt;</div><div class=\"line\">         &lt;serverId&gt;ossrh&lt;/serverId&gt;</div><div class=\"line\">         &lt;nexusUrl&gt;https://oss.sonatype.org/&lt;/nexusUrl&gt;</div><div class=\"line\">         &lt;!--&lt;autoReleaseAfterClose&gt;true&lt;/autoReleaseAfterClose&gt;--&gt;</div><div class=\"line\">      &lt;/configuration&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;1.5&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;sign-artifacts&lt;/id&gt;</div><div class=\"line\">          &lt;phase&gt;verify&lt;/phase&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;sign&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;2.2.1&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;attach-sources&lt;/id&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;jar-no-fork&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">    &lt;plugin&gt;</div><div class=\"line\">      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;2.9.1&lt;/version&gt;</div><div class=\"line\">      &lt;executions&gt;</div><div class=\"line\">        &lt;execution&gt;</div><div class=\"line\">          &lt;id&gt;attach-javadocs&lt;/id&gt;</div><div class=\"line\">          &lt;goals&gt;</div><div class=\"line\">            &lt;goal&gt;jar&lt;/goal&gt;</div><div class=\"line\">          &lt;/goals&gt;</div><div class=\"line\">        &lt;/execution&gt;</div><div class=\"line\">      &lt;/executions&gt;</div><div class=\"line\">    &lt;/plugin&gt;</div><div class=\"line\">  &lt;/plugins&gt;</div><div class=\"line\">&lt;/build&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;distributionManagement&gt;</div><div class=\"line\">  &lt;snapshotRepository&gt;</div><div class=\"line\">    &lt;id&gt;ossrh&lt;/id&gt;</div><div class=\"line\">    &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;</div><div class=\"line\">  &lt;/snapshotRepository&gt;</div><div class=\"line\">&lt;/distributionManagement&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!--&lt;distributionManagement&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;snapshotRepository&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/url&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;/snapshotRepository&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;repository&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;id&gt;ossrh&lt;/id&gt;--&gt;</div><div class=\"line\">    &lt;!--&lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;--&gt;</div><div class=\"line\">  &lt;!--&lt;/repository&gt;--&gt;</div><div class=\"line\">&lt;!--&lt;/distributionManagement&gt;--&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"SBT工程构件发布到Maven中央仓库\"><a href=\"#SBT工程构件发布到Maven中央仓库\" class=\"headerlink\" title=\"SBT工程构件发布到Maven中央仓库\"></a>SBT工程构件发布到Maven中央仓库</h1><p><a href=\"http://central.sonatype.org/pages/sbt.html#deploying-to-ossrh-with-sbt-introduction\">参考文档</a></p>\n<p>build.sbt示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">addSbtPlugin(&quot;org.xerial.sbt&quot; % &quot;sbt-sonatype&quot; % &quot;1.1&quot;)</div><div class=\"line\"></div><div class=\"line\">useGpg := true</div><div class=\"line\">organization := &quot;io.github.zhangshengshan&quot;</div><div class=\"line\">name := &quot;sbtSonatype&quot;</div><div class=\"line\">version := &quot;5.0.1&quot;</div><div class=\"line\">scalaVersion := &quot;2.10.6&quot;</div><div class=\"line\"></div><div class=\"line\">licenses := Seq(&quot;BSD-style&quot; -&gt; url(&quot;http://www.opensource.org/licenses/bsd-license.php&quot;))</div><div class=\"line\">homepage := Some(url(&quot;http://example.com&quot;))</div><div class=\"line\">scmInfo := Some(</div><div class=\"line\">  ScmInfo(</div><div class=\"line\">    url(&quot;https://github.com/your-account/your-project&quot;),</div><div class=\"line\">    &quot;scm:git@github.com:your-account/your-project.git&quot;</div><div class=\"line\">  )</div><div class=\"line\">)</div><div class=\"line\">developers := List(</div><div class=\"line\">  Developer(</div><div class=\"line\">    id    = &quot;Your identifier&quot;,</div><div class=\"line\">    name  = &quot;Your Name&quot;,</div><div class=\"line\">    email = &quot;your@email&quot;,</div><div class=\"line\">    url   = url(&quot;http://your.url&quot;)</div><div class=\"line\">  )</div><div class=\"line\">)</div><div class=\"line\"></div><div class=\"line\">pomIncludeRepository := &#123; _ =&gt; false &#125;</div><div class=\"line\">publishMavenStyle := true</div><div class=\"line\"></div><div class=\"line\">publishTo := &#123;</div><div class=\"line\">  val nexus = &quot;https://oss.sonatype.org/&quot;</div><div class=\"line\">  if (isSnapshot.value)</div><div class=\"line\">    Some(&quot;snapshots&quot; at nexus + &quot;content/repositories/snapshots&quot;)</div><div class=\"line\">  else</div><div class=\"line\">    Some(&quot;releases&quot;  at nexus + &quot;service/local/staging/deploy/maven2&quot;)</div><div class=\"line\">&#125;</div><div class=\"line\">publishArtifact in Test:= false</div></pre></td></tr></table></figure></p>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><ul>\n<li><a href=\"https://www.devdungeon.com/content/publish-java-packages-maven-central-repository\">https://www.devdungeon.com/content/publish-java-packages-maven-central-repository</a></li>\n<li><a href=\"https://central.sonatype.org/pages/sbt.html\">https://central.sonatype.org/pages/sbt.html</a></li>\n<li><a href=\"https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction\">https://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction</a></li>\n</ul>\n<p><a href=\"mailto:git@github.com\">git@github.com</a>:zhangshengshan/myflinkLearning.git</p>\n"},{"title":"Spark Window Operation ","date":"2016-08-22T06:39:58.000Z","toc":true,"_content":"","source":"_posts/Spark-Window-Operation.md","raw":"---\ntitle: 'Spark Window Operation '\ndate: 2016-08-22 14:39:58\ntags:\ntoc: true\n---\n","slug":"Spark-Window-Operation","published":1,"updated":"2017-02-15T08:08:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emh002kbnavtnmq9fgt","content":"","excerpt":"","more":""},{"title":"SparkDataFrameLikeSql","date":"2016-12-09T08:11:00.000Z","toc":true,"_content":"The idea of spark Datafame may be inspired from dataframe of pandas which is a package of python for structure data processing. On my opinion, dataframe can by prefered by the people with BI(business intelligence) background for high development efficiency.\n\nDataFrame in Spark could by registered as something which could be considered approximately as a virtual table, therefore anyone who has expierence of SQL could explore the data at quite a low cost of time.\n\nThis article will focus on some dataframe processing method without the help of registering a virtual table and executing SQL, however the corresponding SQL operations such as  SELECT, WHERE, GROUPBY, MIN, MAX, COUNT, SUM ,DISTINCT, ORDERBY, DESC/ASC, JOIN and GROUPBY TOP will be supplied for a better understanding of dataframe in spark.\n\n## prepare test data\n\nFirstly we make a DataFrame object a by reading a json file\n```\nval sc: SparkContext // An existing SparkContext.\nval sqlContext = new org.apache.spark.sql.SQLContext(sc)\n// this is used to implicitly convert an RDD to a DataFrame.\nimport sqlContext.implicits._\nval a = sqlContext.read.json(\"people.json\")\n```\nand the content of people.json is as below\n```\n{\"name\":\"Michael\" , \"age\":23 ,\"depart\":\"A\",\"salary\":3000 }\n{\"name\":\"Dan\"     , \"age\":23 ,\"depart\":\"A\",\"salary\":3500 }\n{\"name\":\"Alex\"    , \"age\":23 ,\"depart\":\"A\",\"salary\":3600 }\n{\"name\":\"Ben\"     , \"age\":23 ,\"depart\":\"A\",\"salary\":3700 }\n{\"name\":\"Andy\"    , \"age\":30 ,\"depart\":\"B\",\"salary\":4000 }\n{\"name\":\"Justin\"  , \"age\":19 ,\"depart\":\"A\",\"salary\":5000 }\n{\"name\":\"Jack\"    , \"age\":19 ,\"depart\":\"B\",\"salary\":2000 }\n```\nlet us image a as a Table which is stored in a RDS database such as MySQL.\n\n## desc \n\n```\ndesc people;\n```\n```\nscala> a.printSchema\nroot\n|-- age: long (nullable = true)\n|-- depart: string (nullable = true)\n|-- name: string (nullable = true)\n|-- salary: long (nullable = true)\n```\n\n## SELECT \n```\nselect name from people;\n```\n\n```\na.select(\"name\").show\na.select($\"name\").show\na.select(a(\"name\")).show\n```\nthe three methods above are equivelent.\n\n## WHERE\n```\nselect name,age from people where age = 23\n```\n```\na.select(\"name\", \"age\").where($\"age\"===23).show\na.select(\"name\", \"age\").filter($\"age\"===23).show\n```\n\n## MIN,MAX,SUM,COUNT\n\n```\nselect min(age), max(age), sum(salary), count(age) from people\n```\n\n\n```\na.select(min(\"age\"),max(\"age\"),sum(\"salary\"),count(\"age\")).show\na.agg(min(\"age\"),max(\"age\"),sum(\"salary\"),count(\"age\")).show\n```\nand the result is \n```\n\n+--------+--------+-----------+----------+\n|min(age)|max(age)|sum(salary)|count(age)|\n+--------+--------+-----------+----------+\n|      19|      30|      24800|         7|\n+--------+--------+-----------+----------+\n\n```\n\n## COUNT DISTINCT\n\n```\nselect count (distinct age) , count ( distinct name ) from people\n```\n\n```\na.select(count(\"age\"),countDistinct(\"age\")).show\na.agg(count(\"age\"), countDistinct(\"name\")).show\n```\nand the result is \n```\n+-------------------+--------------------+\n|count(DISTINCT age)|count(DISTINCT name)|\n+-------------------+--------------------+\n|                  7|                   3|\n+-------------------+--------------------+\n```\n\n\n## ORDERBY desc\n```\nselect * from people orderby age desc, name desc\n\n```\n\n```\na.sort($\"age\".desc,$\"name\".desc).show\n```\n```\n+---+------+-------+------+\n|age|depart|   name|salary|\n+---+------+-------+------+\n| 30|     B|   Andy|  4000|\n| 23|     A|Michael|  3000|\n| 23|     A|    Dan|  3500|\n| 23|     A|    Ben|  3700|\n| 23|     A|   Alex|  3600|\n| 19|     A| Justin|  5000|\n| 19|     B|   Jack|  2000|\n+---+------+-------+------+\n```\n\n\n## inner join, left outer join and convert null to a default value \nfirst we make another dataframe based on a \n```\nval c = a.filter(not ($\"age\"===23))\n\nscala> c.show\n+---+------+------+------+\n|age|depart|  name|salary|\n+---+------+------+------+\n| 30|     B|  Andy|  4000|\n| 19|     A|Justin|  5000|\n| 19|     B|  Jack|  2000|\n+---+------+------+------+\n\n```\nnow we try to join a and c \n\n```\n    select \n        a.age as a_age,\n        if(c.age is null, 0, c.age) as c_age,\n        a.depart as a_depart\n    from \n        a\n    left outer join\n        c\n    on \n        a.age = c.age\n```\nthe cording dataframe form is \n```\n\nscala> a.join(c,a(\"age\")===c(\"age\"),\"left\").select(a(\"age\").alias(\"a_age\"),c(\"age\").alias(\"c_age\"),a(\"depart\").alias(\"a_depart\")).na.fill(0,Seq(\"c_age\")).show\n+-----+-----+--------+\n|a_age|c_age|a_depart|\n+-----+-----+--------+\n|   23|    0|       A|\n|   23|    0|       A|\n|   23|    0|       A|\n|   23|    0|       A|\n|   30|   30|       B|\n|   19|   19|       A|\n|   19|   19|       A|\n|   19|   19|       B|\n|   19|   19|       B|\n+-----+-----+--------+\n\n```\nwhat if those records whose c.age is null is execluded \n```\nselect \n    a.age as a_age,\n    if(c.age is null, 0, c.age) as c_age,\n    a.depart as a_depart\nfrom \n    a\nleft outer join\n    c\non \n    a.age = c.age\nwhere \n    c.age is not null\n```\nthe na.drop method provided this function\n```\nscala> a.join(c,a(\"age\")===c(\"age\"),\"left\").select(a(\"age\").alias(\"a_age\"),c(\"age\").alias(\"c_age\"),a(\"depart\").alias(\"a_depart\")).na.drop.show\n+-----+-----+--------+\n|a_age|c_age|a_depart|\n+-----+-----+--------+\n|   30|   30|       B|\n|   19|   19|       A|\n|   19|   19|       A|\n|   19|   19|       B|\n|   19|   19|       B|\n+-----+-----+--------+\n```\n\n## Top N for group \nuse window operation can help \n```\nimport org.apache.spark.sql.expressions.Window\nval w = Window.partitionBy($\"depart\")\nimport org.apache.spark.sql.expressions.Window\nval rankAsc = row_number().over(w.orderBy($\"salary\")).alias(\"rank_asc\")\nval rankDesc = row_number().over(w.orderBy($\"salary\".desc)).alias(\"rank_desc\")\n```\n\n```\nscala> a.select($\"*\", rankAsc, rankDesc).filter($\"rank_asc\"<3 || $\"rank_desc\" >= 2).show\n+---+------+-------+------+--------+---------+\n|age|depart|   name|salary|rank_asc|rank_desc|\n+---+------+-------+------+--------+---------+\n| 30|     B|   Andy|  4000|       2|        1|\n| 19|     B|   Jack|  2000|       1|        2|\n| 23|     A|    Ben|  3700|       4|        2|\n| 23|     A|   Alex|  3600|       3|        3|\n| 23|     A|    Dan|  3500|       2|        4|\n| 23|     A|Michael|  3000|       1|        5|\n+---+------+-------+------+--------+---------+\nscala> a.select($\"*\", rankAsc, rankDesc).filter($\"rank_asc\"<3 && $\"rank_desc\" >= 2).show\n+---+------+-------+------+--------+---------+\n|age|depart|   name|salary|rank_asc|rank_desc|\n+---+------+-------+------+--------+---------+\n| 19|     B|   Jack|  2000|       1|        2|\n| 23|     A|    Dan|  3500|       2|        4|\n| 23|     A|Michael|  3000|       1|        5|\n+---+------+-------+------+--------+---------+\n```\nwhat's more, it is clearly ```select *``` in SQL could by implemented by ```select($\"*\")```\n","source":"_posts/SparkDataFrameLikeSql.md","raw":"---\ntitle: SparkDataFrameLikeSql\ndate: 2016-12-09 16:11:00\ntags: Spark DataFrame\ncategories: Spark\ntoc: true\n---\nThe idea of spark Datafame may be inspired from dataframe of pandas which is a package of python for structure data processing. On my opinion, dataframe can by prefered by the people with BI(business intelligence) background for high development efficiency.\n\nDataFrame in Spark could by registered as something which could be considered approximately as a virtual table, therefore anyone who has expierence of SQL could explore the data at quite a low cost of time.\n\nThis article will focus on some dataframe processing method without the help of registering a virtual table and executing SQL, however the corresponding SQL operations such as  SELECT, WHERE, GROUPBY, MIN, MAX, COUNT, SUM ,DISTINCT, ORDERBY, DESC/ASC, JOIN and GROUPBY TOP will be supplied for a better understanding of dataframe in spark.\n\n## prepare test data\n\nFirstly we make a DataFrame object a by reading a json file\n```\nval sc: SparkContext // An existing SparkContext.\nval sqlContext = new org.apache.spark.sql.SQLContext(sc)\n// this is used to implicitly convert an RDD to a DataFrame.\nimport sqlContext.implicits._\nval a = sqlContext.read.json(\"people.json\")\n```\nand the content of people.json is as below\n```\n{\"name\":\"Michael\" , \"age\":23 ,\"depart\":\"A\",\"salary\":3000 }\n{\"name\":\"Dan\"     , \"age\":23 ,\"depart\":\"A\",\"salary\":3500 }\n{\"name\":\"Alex\"    , \"age\":23 ,\"depart\":\"A\",\"salary\":3600 }\n{\"name\":\"Ben\"     , \"age\":23 ,\"depart\":\"A\",\"salary\":3700 }\n{\"name\":\"Andy\"    , \"age\":30 ,\"depart\":\"B\",\"salary\":4000 }\n{\"name\":\"Justin\"  , \"age\":19 ,\"depart\":\"A\",\"salary\":5000 }\n{\"name\":\"Jack\"    , \"age\":19 ,\"depart\":\"B\",\"salary\":2000 }\n```\nlet us image a as a Table which is stored in a RDS database such as MySQL.\n\n## desc \n\n```\ndesc people;\n```\n```\nscala> a.printSchema\nroot\n|-- age: long (nullable = true)\n|-- depart: string (nullable = true)\n|-- name: string (nullable = true)\n|-- salary: long (nullable = true)\n```\n\n## SELECT \n```\nselect name from people;\n```\n\n```\na.select(\"name\").show\na.select($\"name\").show\na.select(a(\"name\")).show\n```\nthe three methods above are equivelent.\n\n## WHERE\n```\nselect name,age from people where age = 23\n```\n```\na.select(\"name\", \"age\").where($\"age\"===23).show\na.select(\"name\", \"age\").filter($\"age\"===23).show\n```\n\n## MIN,MAX,SUM,COUNT\n\n```\nselect min(age), max(age), sum(salary), count(age) from people\n```\n\n\n```\na.select(min(\"age\"),max(\"age\"),sum(\"salary\"),count(\"age\")).show\na.agg(min(\"age\"),max(\"age\"),sum(\"salary\"),count(\"age\")).show\n```\nand the result is \n```\n\n+--------+--------+-----------+----------+\n|min(age)|max(age)|sum(salary)|count(age)|\n+--------+--------+-----------+----------+\n|      19|      30|      24800|         7|\n+--------+--------+-----------+----------+\n\n```\n\n## COUNT DISTINCT\n\n```\nselect count (distinct age) , count ( distinct name ) from people\n```\n\n```\na.select(count(\"age\"),countDistinct(\"age\")).show\na.agg(count(\"age\"), countDistinct(\"name\")).show\n```\nand the result is \n```\n+-------------------+--------------------+\n|count(DISTINCT age)|count(DISTINCT name)|\n+-------------------+--------------------+\n|                  7|                   3|\n+-------------------+--------------------+\n```\n\n\n## ORDERBY desc\n```\nselect * from people orderby age desc, name desc\n\n```\n\n```\na.sort($\"age\".desc,$\"name\".desc).show\n```\n```\n+---+------+-------+------+\n|age|depart|   name|salary|\n+---+------+-------+------+\n| 30|     B|   Andy|  4000|\n| 23|     A|Michael|  3000|\n| 23|     A|    Dan|  3500|\n| 23|     A|    Ben|  3700|\n| 23|     A|   Alex|  3600|\n| 19|     A| Justin|  5000|\n| 19|     B|   Jack|  2000|\n+---+------+-------+------+\n```\n\n\n## inner join, left outer join and convert null to a default value \nfirst we make another dataframe based on a \n```\nval c = a.filter(not ($\"age\"===23))\n\nscala> c.show\n+---+------+------+------+\n|age|depart|  name|salary|\n+---+------+------+------+\n| 30|     B|  Andy|  4000|\n| 19|     A|Justin|  5000|\n| 19|     B|  Jack|  2000|\n+---+------+------+------+\n\n```\nnow we try to join a and c \n\n```\n    select \n        a.age as a_age,\n        if(c.age is null, 0, c.age) as c_age,\n        a.depart as a_depart\n    from \n        a\n    left outer join\n        c\n    on \n        a.age = c.age\n```\nthe cording dataframe form is \n```\n\nscala> a.join(c,a(\"age\")===c(\"age\"),\"left\").select(a(\"age\").alias(\"a_age\"),c(\"age\").alias(\"c_age\"),a(\"depart\").alias(\"a_depart\")).na.fill(0,Seq(\"c_age\")).show\n+-----+-----+--------+\n|a_age|c_age|a_depart|\n+-----+-----+--------+\n|   23|    0|       A|\n|   23|    0|       A|\n|   23|    0|       A|\n|   23|    0|       A|\n|   30|   30|       B|\n|   19|   19|       A|\n|   19|   19|       A|\n|   19|   19|       B|\n|   19|   19|       B|\n+-----+-----+--------+\n\n```\nwhat if those records whose c.age is null is execluded \n```\nselect \n    a.age as a_age,\n    if(c.age is null, 0, c.age) as c_age,\n    a.depart as a_depart\nfrom \n    a\nleft outer join\n    c\non \n    a.age = c.age\nwhere \n    c.age is not null\n```\nthe na.drop method provided this function\n```\nscala> a.join(c,a(\"age\")===c(\"age\"),\"left\").select(a(\"age\").alias(\"a_age\"),c(\"age\").alias(\"c_age\"),a(\"depart\").alias(\"a_depart\")).na.drop.show\n+-----+-----+--------+\n|a_age|c_age|a_depart|\n+-----+-----+--------+\n|   30|   30|       B|\n|   19|   19|       A|\n|   19|   19|       A|\n|   19|   19|       B|\n|   19|   19|       B|\n+-----+-----+--------+\n```\n\n## Top N for group \nuse window operation can help \n```\nimport org.apache.spark.sql.expressions.Window\nval w = Window.partitionBy($\"depart\")\nimport org.apache.spark.sql.expressions.Window\nval rankAsc = row_number().over(w.orderBy($\"salary\")).alias(\"rank_asc\")\nval rankDesc = row_number().over(w.orderBy($\"salary\".desc)).alias(\"rank_desc\")\n```\n\n```\nscala> a.select($\"*\", rankAsc, rankDesc).filter($\"rank_asc\"<3 || $\"rank_desc\" >= 2).show\n+---+------+-------+------+--------+---------+\n|age|depart|   name|salary|rank_asc|rank_desc|\n+---+------+-------+------+--------+---------+\n| 30|     B|   Andy|  4000|       2|        1|\n| 19|     B|   Jack|  2000|       1|        2|\n| 23|     A|    Ben|  3700|       4|        2|\n| 23|     A|   Alex|  3600|       3|        3|\n| 23|     A|    Dan|  3500|       2|        4|\n| 23|     A|Michael|  3000|       1|        5|\n+---+------+-------+------+--------+---------+\nscala> a.select($\"*\", rankAsc, rankDesc).filter($\"rank_asc\"<3 && $\"rank_desc\" >= 2).show\n+---+------+-------+------+--------+---------+\n|age|depart|   name|salary|rank_asc|rank_desc|\n+---+------+-------+------+--------+---------+\n| 19|     B|   Jack|  2000|       1|        2|\n| 23|     A|    Dan|  3500|       2|        4|\n| 23|     A|Michael|  3000|       1|        5|\n+---+------+-------+------+--------+---------+\n```\nwhat's more, it is clearly ```select *``` in SQL could by implemented by ```select($\"*\")```\n","slug":"SparkDataFrameLikeSql","published":1,"updated":"2017-02-15T08:08:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emh002mbnavyvkq4y3n","content":"<p>The idea of spark Datafame may be inspired from dataframe of pandas which is a package of python for structure data processing. On my opinion, dataframe can by prefered by the people with BI(business intelligence) background for high development efficiency.</p>\n<p>DataFrame in Spark could by registered as something which could be considered approximately as a virtual table, therefore anyone who has expierence of SQL could explore the data at quite a low cost of time.</p>\n<p>This article will focus on some dataframe processing method without the help of registering a virtual table and executing SQL, however the corresponding SQL operations such as  SELECT, WHERE, GROUPBY, MIN, MAX, COUNT, SUM ,DISTINCT, ORDERBY, DESC/ASC, JOIN and GROUPBY TOP will be supplied for a better understanding of dataframe in spark.</p>\n<h2 id=\"prepare-test-data\"><a href=\"#prepare-test-data\" class=\"headerlink\" title=\"prepare test data\"></a>prepare test data</h2><p>Firstly we make a DataFrame object a by reading a json file<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">val sc: SparkContext // An existing SparkContext.</div><div class=\"line\">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class=\"line\">// this is used to implicitly convert an RDD to a DataFrame.</div><div class=\"line\">import sqlContext.implicits._</div><div class=\"line\">val a = sqlContext.read.json(&quot;people.json&quot;)</div></pre></td></tr></table></figure></p>\n<p>and the content of people.json is as below<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">{&quot;name&quot;:&quot;Michael&quot; , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3000 }</div><div class=\"line\">{&quot;name&quot;:&quot;Dan&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3500 }</div><div class=\"line\">{&quot;name&quot;:&quot;Alex&quot;    , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3600 }</div><div class=\"line\">{&quot;name&quot;:&quot;Ben&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3700 }</div><div class=\"line\">{&quot;name&quot;:&quot;Andy&quot;    , &quot;age&quot;:30 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:4000 }</div><div class=\"line\">{&quot;name&quot;:&quot;Justin&quot;  , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:5000 }</div><div class=\"line\">{&quot;name&quot;:&quot;Jack&quot;    , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:2000 }</div></pre></td></tr></table></figure></p>\n<p>let us image a as a Table which is stored in a RDS database such as MySQL.</p>\n<h2 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc people;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.printSchema</div><div class=\"line\">root</div><div class=\"line\">|-- age: long (nullable = true)</div><div class=\"line\">|-- depart: string (nullable = true)</div><div class=\"line\">|-- name: string (nullable = true)</div><div class=\"line\">|-- salary: long (nullable = true)</div></pre></td></tr></table></figure>\n<h2 id=\"SELECT\"><a href=\"#SELECT\" class=\"headerlink\" title=\"SELECT\"></a>SELECT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from people;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(&quot;name&quot;).show</div><div class=\"line\">a.select($&quot;name&quot;).show</div><div class=\"line\">a.select(a(&quot;name&quot;)).show</div></pre></td></tr></table></figure>\n<p>the three methods above are equivelent.</p>\n<h2 id=\"WHERE\"><a href=\"#WHERE\" class=\"headerlink\" title=\"WHERE\"></a>WHERE</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name,age from people where age = 23</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(&quot;name&quot;, &quot;age&quot;).where($&quot;age&quot;===23).show</div><div class=\"line\">a.select(&quot;name&quot;, &quot;age&quot;).filter($&quot;age&quot;===23).show</div></pre></td></tr></table></figure>\n<h2 id=\"MIN-MAX-SUM-COUNT\"><a href=\"#MIN-MAX-SUM-COUNT\" class=\"headerlink\" title=\"MIN,MAX,SUM,COUNT\"></a>MIN,MAX,SUM,COUNT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select min(age), max(age), sum(salary), count(age) from people</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div><div class=\"line\">a.agg(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div></pre></td></tr></table></figure>\n<p>and the result is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">+--------+--------+-----------+----------+</div><div class=\"line\">|min(age)|max(age)|sum(salary)|count(age)|</div><div class=\"line\">+--------+--------+-----------+----------+</div><div class=\"line\">|      19|      30|      24800|         7|</div><div class=\"line\">+--------+--------+-----------+----------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"COUNT-DISTINCT\"><a href=\"#COUNT-DISTINCT\" class=\"headerlink\" title=\"COUNT DISTINCT\"></a>COUNT DISTINCT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count (distinct age) , count ( distinct name ) from people</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(count(&quot;age&quot;),countDistinct(&quot;age&quot;)).show</div><div class=\"line\">a.agg(count(&quot;age&quot;), countDistinct(&quot;name&quot;)).show</div></pre></td></tr></table></figure>\n<p>and the result is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">+-------------------+--------------------+</div><div class=\"line\">|count(DISTINCT age)|count(DISTINCT name)|</div><div class=\"line\">+-------------------+--------------------+</div><div class=\"line\">|                  7|                   3|</div><div class=\"line\">+-------------------+--------------------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"ORDERBY-desc\"><a href=\"#ORDERBY-desc\" class=\"headerlink\" title=\"ORDERBY desc\"></a>ORDERBY desc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from people orderby age desc, name desc</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.sort($&quot;age&quot;.desc,$&quot;name&quot;.desc).show</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">+---+------+-------+------+</div><div class=\"line\">|age|depart|   name|salary|</div><div class=\"line\">+---+------+-------+------+</div><div class=\"line\">| 30|     B|   Andy|  4000|</div><div class=\"line\">| 23|     A|Michael|  3000|</div><div class=\"line\">| 23|     A|    Dan|  3500|</div><div class=\"line\">| 23|     A|    Ben|  3700|</div><div class=\"line\">| 23|     A|   Alex|  3600|</div><div class=\"line\">| 19|     A| Justin|  5000|</div><div class=\"line\">| 19|     B|   Jack|  2000|</div><div class=\"line\">+---+------+-------+------+</div></pre></td></tr></table></figure>\n<h2 id=\"inner-join-left-outer-join-and-convert-null-to-a-default-value\"><a href=\"#inner-join-left-outer-join-and-convert-null-to-a-default-value\" class=\"headerlink\" title=\"inner join, left outer join and convert null to a default value\"></a>inner join, left outer join and convert null to a default value</h2><p>first we make another dataframe based on a<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">val c = a.filter(not ($&quot;age&quot;===23))</div><div class=\"line\"></div><div class=\"line\">scala&gt; c.show</div><div class=\"line\">+---+------+------+------+</div><div class=\"line\">|age|depart|  name|salary|</div><div class=\"line\">+---+------+------+------+</div><div class=\"line\">| 30|     B|  Andy|  4000|</div><div class=\"line\">| 19|     A|Justin|  5000|</div><div class=\"line\">| 19|     B|  Jack|  2000|</div><div class=\"line\">+---+------+------+------+</div></pre></td></tr></table></figure></p>\n<p>now we try to join a and c </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">select </div><div class=\"line\">    a.age as a_age,</div><div class=\"line\">    if(c.age is null, 0, c.age) as c_age,</div><div class=\"line\">    a.depart as a_depart</div><div class=\"line\">from </div><div class=\"line\">    a</div><div class=\"line\">left outer join</div><div class=\"line\">    c</div><div class=\"line\">on </div><div class=\"line\">    a.age = c.age</div></pre></td></tr></table></figure>\n<p>the cording dataframe form is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.fill(0,Seq(&quot;c_age&quot;)).show</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|a_age|c_age|a_depart|</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   30|   30|       B|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">+-----+-----+--------+</div></pre></td></tr></table></figure></p>\n<p>what if those records whose c.age is null is execluded<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">select </div><div class=\"line\">    a.age as a_age,</div><div class=\"line\">    if(c.age is null, 0, c.age) as c_age,</div><div class=\"line\">    a.depart as a_depart</div><div class=\"line\">from </div><div class=\"line\">    a</div><div class=\"line\">left outer join</div><div class=\"line\">    c</div><div class=\"line\">on </div><div class=\"line\">    a.age = c.age</div><div class=\"line\">where </div><div class=\"line\">    c.age is not null</div></pre></td></tr></table></figure></p>\n<p>the na.drop method provided this function<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.drop.show</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|a_age|c_age|a_depart|</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|   30|   30|       B|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">+-----+-----+--------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"Top-N-for-group\"><a href=\"#Top-N-for-group\" class=\"headerlink\" title=\"Top N for group\"></a>Top N for group</h2><p>use window operation can help<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">import org.apache.spark.sql.expressions.Window</div><div class=\"line\">val w = Window.partitionBy($&quot;depart&quot;)</div><div class=\"line\">import org.apache.spark.sql.expressions.Window</div><div class=\"line\">val rankAsc = row_number().over(w.orderBy($&quot;salary&quot;)).alias(&quot;rank_asc&quot;)</div><div class=\"line\">val rankDesc = row_number().over(w.orderBy($&quot;salary&quot;.desc)).alias(&quot;rank_desc&quot;)</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 || $&quot;rank_desc&quot; &gt;= 2).show</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">| 30|     B|   Andy|  4000|       2|        1|</div><div class=\"line\">| 19|     B|   Jack|  2000|       1|        2|</div><div class=\"line\">| 23|     A|    Ben|  3700|       4|        2|</div><div class=\"line\">| 23|     A|   Alex|  3600|       3|        3|</div><div class=\"line\">| 23|     A|    Dan|  3500|       2|        4|</div><div class=\"line\">| 23|     A|Michael|  3000|       1|        5|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 &amp;&amp; $&quot;rank_desc&quot; &gt;= 2).show</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">| 19|     B|   Jack|  2000|       1|        2|</div><div class=\"line\">| 23|     A|    Dan|  3500|       2|        4|</div><div class=\"line\">| 23|     A|Michael|  3000|       1|        5|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div></pre></td></tr></table></figure>\n<p>what&#x2019;s more, it is clearly <code>select *</code> in SQL could by implemented by <code>select($&quot;*&quot;)</code></p>\n","excerpt":"","more":"<p>The idea of spark Datafame may be inspired from dataframe of pandas which is a package of python for structure data processing. On my opinion, dataframe can by prefered by the people with BI(business intelligence) background for high development efficiency.</p>\n<p>DataFrame in Spark could by registered as something which could be considered approximately as a virtual table, therefore anyone who has expierence of SQL could explore the data at quite a low cost of time.</p>\n<p>This article will focus on some dataframe processing method without the help of registering a virtual table and executing SQL, however the corresponding SQL operations such as  SELECT, WHERE, GROUPBY, MIN, MAX, COUNT, SUM ,DISTINCT, ORDERBY, DESC/ASC, JOIN and GROUPBY TOP will be supplied for a better understanding of dataframe in spark.</p>\n<h2 id=\"prepare-test-data\"><a href=\"#prepare-test-data\" class=\"headerlink\" title=\"prepare test data\"></a>prepare test data</h2><p>Firstly we make a DataFrame object a by reading a json file<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">val sc: SparkContext // An existing SparkContext.</div><div class=\"line\">val sqlContext = new org.apache.spark.sql.SQLContext(sc)</div><div class=\"line\">// this is used to implicitly convert an RDD to a DataFrame.</div><div class=\"line\">import sqlContext.implicits._</div><div class=\"line\">val a = sqlContext.read.json(&quot;people.json&quot;)</div></pre></td></tr></table></figure></p>\n<p>and the content of people.json is as below<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;name&quot;:&quot;Michael&quot; , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3000 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Dan&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3500 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Alex&quot;    , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3600 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Ben&quot;     , &quot;age&quot;:23 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:3700 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Andy&quot;    , &quot;age&quot;:30 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:4000 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Justin&quot;  , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;A&quot;,&quot;salary&quot;:5000 &#125;</div><div class=\"line\">&#123;&quot;name&quot;:&quot;Jack&quot;    , &quot;age&quot;:19 ,&quot;depart&quot;:&quot;B&quot;,&quot;salary&quot;:2000 &#125;</div></pre></td></tr></table></figure></p>\n<p>let us image a as a Table which is stored in a RDS database such as MySQL.</p>\n<h2 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc people;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.printSchema</div><div class=\"line\">root</div><div class=\"line\">|-- age: long (nullable = true)</div><div class=\"line\">|-- depart: string (nullable = true)</div><div class=\"line\">|-- name: string (nullable = true)</div><div class=\"line\">|-- salary: long (nullable = true)</div></pre></td></tr></table></figure>\n<h2 id=\"SELECT\"><a href=\"#SELECT\" class=\"headerlink\" title=\"SELECT\"></a>SELECT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from people;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(&quot;name&quot;).show</div><div class=\"line\">a.select($&quot;name&quot;).show</div><div class=\"line\">a.select(a(&quot;name&quot;)).show</div></pre></td></tr></table></figure>\n<p>the three methods above are equivelent.</p>\n<h2 id=\"WHERE\"><a href=\"#WHERE\" class=\"headerlink\" title=\"WHERE\"></a>WHERE</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name,age from people where age = 23</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(&quot;name&quot;, &quot;age&quot;).where($&quot;age&quot;===23).show</div><div class=\"line\">a.select(&quot;name&quot;, &quot;age&quot;).filter($&quot;age&quot;===23).show</div></pre></td></tr></table></figure>\n<h2 id=\"MIN-MAX-SUM-COUNT\"><a href=\"#MIN-MAX-SUM-COUNT\" class=\"headerlink\" title=\"MIN,MAX,SUM,COUNT\"></a>MIN,MAX,SUM,COUNT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select min(age), max(age), sum(salary), count(age) from people</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div><div class=\"line\">a.agg(min(&quot;age&quot;),max(&quot;age&quot;),sum(&quot;salary&quot;),count(&quot;age&quot;)).show</div></pre></td></tr></table></figure>\n<p>and the result is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">+--------+--------+-----------+----------+</div><div class=\"line\">|min(age)|max(age)|sum(salary)|count(age)|</div><div class=\"line\">+--------+--------+-----------+----------+</div><div class=\"line\">|      19|      30|      24800|         7|</div><div class=\"line\">+--------+--------+-----------+----------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"COUNT-DISTINCT\"><a href=\"#COUNT-DISTINCT\" class=\"headerlink\" title=\"COUNT DISTINCT\"></a>COUNT DISTINCT</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count (distinct age) , count ( distinct name ) from people</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.select(count(&quot;age&quot;),countDistinct(&quot;age&quot;)).show</div><div class=\"line\">a.agg(count(&quot;age&quot;), countDistinct(&quot;name&quot;)).show</div></pre></td></tr></table></figure>\n<p>and the result is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">+-------------------+--------------------+</div><div class=\"line\">|count(DISTINCT age)|count(DISTINCT name)|</div><div class=\"line\">+-------------------+--------------------+</div><div class=\"line\">|                  7|                   3|</div><div class=\"line\">+-------------------+--------------------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"ORDERBY-desc\"><a href=\"#ORDERBY-desc\" class=\"headerlink\" title=\"ORDERBY desc\"></a>ORDERBY desc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from people orderby age desc, name desc</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a.sort($&quot;age&quot;.desc,$&quot;name&quot;.desc).show</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">+---+------+-------+------+</div><div class=\"line\">|age|depart|   name|salary|</div><div class=\"line\">+---+------+-------+------+</div><div class=\"line\">| 30|     B|   Andy|  4000|</div><div class=\"line\">| 23|     A|Michael|  3000|</div><div class=\"line\">| 23|     A|    Dan|  3500|</div><div class=\"line\">| 23|     A|    Ben|  3700|</div><div class=\"line\">| 23|     A|   Alex|  3600|</div><div class=\"line\">| 19|     A| Justin|  5000|</div><div class=\"line\">| 19|     B|   Jack|  2000|</div><div class=\"line\">+---+------+-------+------+</div></pre></td></tr></table></figure>\n<h2 id=\"inner-join-left-outer-join-and-convert-null-to-a-default-value\"><a href=\"#inner-join-left-outer-join-and-convert-null-to-a-default-value\" class=\"headerlink\" title=\"inner join, left outer join and convert null to a default value\"></a>inner join, left outer join and convert null to a default value</h2><p>first we make another dataframe based on a<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">val c = a.filter(not ($&quot;age&quot;===23))</div><div class=\"line\"></div><div class=\"line\">scala&gt; c.show</div><div class=\"line\">+---+------+------+------+</div><div class=\"line\">|age|depart|  name|salary|</div><div class=\"line\">+---+------+------+------+</div><div class=\"line\">| 30|     B|  Andy|  4000|</div><div class=\"line\">| 19|     A|Justin|  5000|</div><div class=\"line\">| 19|     B|  Jack|  2000|</div><div class=\"line\">+---+------+------+------+</div></pre></td></tr></table></figure></p>\n<p>now we try to join a and c </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">select </div><div class=\"line\">    a.age as a_age,</div><div class=\"line\">    if(c.age is null, 0, c.age) as c_age,</div><div class=\"line\">    a.depart as a_depart</div><div class=\"line\">from </div><div class=\"line\">    a</div><div class=\"line\">left outer join</div><div class=\"line\">    c</div><div class=\"line\">on </div><div class=\"line\">    a.age = c.age</div></pre></td></tr></table></figure>\n<p>the cording dataframe form is<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.fill(0,Seq(&quot;c_age&quot;)).show</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|a_age|c_age|a_depart|</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   23|    0|       A|</div><div class=\"line\">|   30|   30|       B|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">+-----+-----+--------+</div></pre></td></tr></table></figure></p>\n<p>what if those records whose c.age is null is execluded<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">select </div><div class=\"line\">    a.age as a_age,</div><div class=\"line\">    if(c.age is null, 0, c.age) as c_age,</div><div class=\"line\">    a.depart as a_depart</div><div class=\"line\">from </div><div class=\"line\">    a</div><div class=\"line\">left outer join</div><div class=\"line\">    c</div><div class=\"line\">on </div><div class=\"line\">    a.age = c.age</div><div class=\"line\">where </div><div class=\"line\">    c.age is not null</div></pre></td></tr></table></figure></p>\n<p>the na.drop method provided this function<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.join(c,a(&quot;age&quot;)===c(&quot;age&quot;),&quot;left&quot;).select(a(&quot;age&quot;).alias(&quot;a_age&quot;),c(&quot;age&quot;).alias(&quot;c_age&quot;),a(&quot;depart&quot;).alias(&quot;a_depart&quot;)).na.drop.show</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|a_age|c_age|a_depart|</div><div class=\"line\">+-----+-----+--------+</div><div class=\"line\">|   30|   30|       B|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       A|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">|   19|   19|       B|</div><div class=\"line\">+-----+-----+--------+</div></pre></td></tr></table></figure></p>\n<h2 id=\"Top-N-for-group\"><a href=\"#Top-N-for-group\" class=\"headerlink\" title=\"Top N for group\"></a>Top N for group</h2><p>use window operation can help<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">import org.apache.spark.sql.expressions.Window</div><div class=\"line\">val w = Window.partitionBy($&quot;depart&quot;)</div><div class=\"line\">import org.apache.spark.sql.expressions.Window</div><div class=\"line\">val rankAsc = row_number().over(w.orderBy($&quot;salary&quot;)).alias(&quot;rank_asc&quot;)</div><div class=\"line\">val rankDesc = row_number().over(w.orderBy($&quot;salary&quot;.desc)).alias(&quot;rank_desc&quot;)</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 || $&quot;rank_desc&quot; &gt;= 2).show</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">| 30|     B|   Andy|  4000|       2|        1|</div><div class=\"line\">| 19|     B|   Jack|  2000|       1|        2|</div><div class=\"line\">| 23|     A|    Ben|  3700|       4|        2|</div><div class=\"line\">| 23|     A|   Alex|  3600|       3|        3|</div><div class=\"line\">| 23|     A|    Dan|  3500|       2|        4|</div><div class=\"line\">| 23|     A|Michael|  3000|       1|        5|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">scala&gt; a.select($&quot;*&quot;, rankAsc, rankDesc).filter($&quot;rank_asc&quot;&lt;3 &amp;&amp; $&quot;rank_desc&quot; &gt;= 2).show</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">|age|depart|   name|salary|rank_asc|rank_desc|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div><div class=\"line\">| 19|     B|   Jack|  2000|       1|        2|</div><div class=\"line\">| 23|     A|    Dan|  3500|       2|        4|</div><div class=\"line\">| 23|     A|Michael|  3000|       1|        5|</div><div class=\"line\">+---+------+-------+------+--------+---------+</div></pre></td></tr></table></figure>\n<p>what’s more, it is clearly <code>select *</code> in SQL could by implemented by <code>select($&quot;*&quot;)</code></p>\n"},{"title":"UVa1225","date":"2016-12-21T14:37:52.000Z","toc":true,"_content":"\n\n```\n#include <stdlib.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\nint main ( int argc, char *argv[] )\n{\n    int a[10]={0};\n    int temp = 0;\n    int i =0;\n    int num=0;\n    while(1==scanf(\"%d\",&num)){\n        memset(a,0,sizeof(a));\n        for (i = 1; i <= num; i++) {\n            temp = i;\n            do {\n                a[temp%10]++;\n                temp = temp/10;\n            } while(temp);\n        }\n        for (i = 0; i < 9; i++) {\n            printf ( \"%d \",a[i] );           /* code */\n        }\n        printf ( \"%d\\n\", a[i] );\n    }\n    return EXIT_SUCCESS;\n}\t\t\t\t/* ----------  end of function main  ---------- */\n```\n","source":"_posts/UVa1225.md","raw":"---\ntitle: UVa1225\ndate: 2016-12-21 22:37:52\ntags: 竞赛\ncategories: C/C++\ntoc: true\n---\n\n\n```\n#include <stdlib.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\nint main ( int argc, char *argv[] )\n{\n    int a[10]={0};\n    int temp = 0;\n    int i =0;\n    int num=0;\n    while(1==scanf(\"%d\",&num)){\n        memset(a,0,sizeof(a));\n        for (i = 1; i <= num; i++) {\n            temp = i;\n            do {\n                a[temp%10]++;\n                temp = temp/10;\n            } while(temp);\n        }\n        for (i = 0; i < 9; i++) {\n            printf ( \"%d \",a[i] );           /* code */\n        }\n        printf ( \"%d\\n\", a[i] );\n    }\n    return EXIT_SUCCESS;\n}\t\t\t\t/* ----------  end of function main  ---------- */\n```\n","slug":"UVa1225","published":1,"updated":"2017-02-15T08:08:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emi002pbnav18vaajqf","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">int main ( int argc, char *argv[] )</div><div class=\"line\">{</div><div class=\"line\">    int a[10]={0};</div><div class=\"line\">    int temp = 0;</div><div class=\"line\">    int i =0;</div><div class=\"line\">    int num=0;</div><div class=\"line\">    while(1==scanf(&quot;%d&quot;,&amp;num)){</div><div class=\"line\">        memset(a,0,sizeof(a));</div><div class=\"line\">        for (i = 1; i &lt;= num; i++) {</div><div class=\"line\">            temp = i;</div><div class=\"line\">            do {</div><div class=\"line\">                a[temp%10]++;</div><div class=\"line\">                temp = temp/10;</div><div class=\"line\">            } while(temp);</div><div class=\"line\">        }</div><div class=\"line\">        for (i = 0; i &lt; 9; i++) {</div><div class=\"line\">            printf ( &quot;%d &quot;,a[i] );           /* code */</div><div class=\"line\">        }</div><div class=\"line\">        printf ( &quot;%d\\n&quot;, a[i] );</div><div class=\"line\">    }</div><div class=\"line\">    return EXIT_SUCCESS;</div><div class=\"line\">}\t\t\t\t/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">int main ( int argc, char *argv[] )</div><div class=\"line\">&#123;</div><div class=\"line\">    int a[10]=&#123;0&#125;;</div><div class=\"line\">    int temp = 0;</div><div class=\"line\">    int i =0;</div><div class=\"line\">    int num=0;</div><div class=\"line\">    while(1==scanf(&quot;%d&quot;,&amp;num))&#123;</div><div class=\"line\">        memset(a,0,sizeof(a));</div><div class=\"line\">        for (i = 1; i &lt;= num; i++) &#123;</div><div class=\"line\">            temp = i;</div><div class=\"line\">            do &#123;</div><div class=\"line\">                a[temp%10]++;</div><div class=\"line\">                temp = temp/10;</div><div class=\"line\">            &#125; while(temp);</div><div class=\"line\">        &#125;</div><div class=\"line\">        for (i = 0; i &lt; 9; i++) &#123;</div><div class=\"line\">            printf ( &quot;%d &quot;,a[i] );           /* code */</div><div class=\"line\">        &#125;</div><div class=\"line\">        printf ( &quot;%d\\n&quot;, a[i] );</div><div class=\"line\">    &#125;</div><div class=\"line\">    return EXIT_SUCCESS;</div><div class=\"line\">&#125;\t\t\t\t/* ----------  end of function main  ---------- */</div></pre></td></tr></table></figure>\n"},{"title":"SparkParseJson","date":"2017-03-08T06:10:23.000Z","_content":"\n","source":"_posts/SparkParseJson.md","raw":"---\ntitle: SparkParseJson\ndate: 2017-03-08 14:10:23\ntags: Spark\n---\n\n","slug":"SparkParseJson","published":1,"updated":"2017-03-16T09:32:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emj002rbnav6txy1f6u","content":"","excerpt":"","more":""},{"title":"SparkStreamLearning","date":"2016-11-28T05:16:15.000Z","toc":true,"_content":"# input source \nkafka \nakka\n# output \nredis\nkafka\nelasticSearch\nhive\nmySql\n","source":"_posts/SparkStreamLearning.md","raw":"---\ntitle: SparkStreamLearning\ndate: 2016-11-28 13:16:15\ntags: Spark Scala Streaming\ncategories: Spark\ntoc: true\n---\n# input source \nkafka \nakka\n# output \nredis\nkafka\nelasticSearch\nhive\nmySql\n","slug":"SparkStreamLearning","published":1,"updated":"2017-02-15T08:08:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emk002vbnavowrxcgv5","content":"<h1 id=\"input-source\"><a href=\"#input-source\" class=\"headerlink\" title=\"input source\"></a>input source</h1><p>kafka<br>akka</p>\n<h1 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output\"></a>output</h1><p>redis<br>kafka<br>elasticSearch<br>hive<br>mySql</p>\n","excerpt":"","more":"<h1 id=\"input-source\"><a href=\"#input-source\" class=\"headerlink\" title=\"input source\"></a>input source</h1><p>kafka<br>akka</p>\n<h1 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output\"></a>output</h1><p>redis<br>kafka<br>elasticSearch<br>hive<br>mySql</p>\n"},{"title":"SparkPassFunctions","date":"2016-08-11T07:19:37.000Z","toc":true,"_content":"\n\n\n```\n    class MyClass {\n      val field = \"Hello\"\n      def doStuff(rdd: RDD[String]): RDD[String] = {\n      val field_ = this.field\n      rdd.map(x => field_ + x)}\n    }\n```\n","source":"_posts/SparkPassFunctions.md","raw":"---\ntitle: SparkPassFunctions\ndate: 2016-08-11 15:19:37\ntags: Spark\ncategories: Spark\ntoc: true\n---\n\n\n\n```\n    class MyClass {\n      val field = \"Hello\"\n      def doStuff(rdd: RDD[String]): RDD[String] = {\n      val field_ = this.field\n      rdd.map(x => field_ + x)}\n    }\n```\n","slug":"SparkPassFunctions","published":1,"updated":"2017-02-15T08:08:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emk002ybnavwpaf3lhn","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">class MyClass {</div><div class=\"line\">  val field = &quot;Hello&quot;</div><div class=\"line\">  def doStuff(rdd: RDD[String]): RDD[String] = {</div><div class=\"line\">  val field_ = this.field</div><div class=\"line\">  rdd.map(x =&gt; field_ + x)}</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">class MyClass &#123;</div><div class=\"line\">  val field = &quot;Hello&quot;</div><div class=\"line\">  def doStuff(rdd: RDD[String]): RDD[String] = &#123;</div><div class=\"line\">  val field_ = this.field</div><div class=\"line\">  rdd.map(x =&gt; field_ + x)&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"UVa455","date":"2016-12-21T15:44:56.000Z","toc":true,"_content":"\n\ninspired by my wife, and i got the code below\n```\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\nint main ( int argc, char *argv[] )\n{\n    char buf[81];\n    int i = 0;\n    memset(buf,0,sizeof(buf));\n    while(scanf(\"%s\",buf)!=EOF){\n        for(i=1;i<strlen(buf);i++){\n            if ( strlen(buf)%i==0 ){\n                if (strncmp(buf,buf+i,strlen(buf)-i)==0) {\n                    printf ( \" k is %d\\n\",i );\n                    break;\n                }\n            }\n        }\n        if(i==strlen(buf)){\n            printf ( \"k is %d\\n\",i );\n        }\n        memset(buf,0,sizeof(buf));\n    }\n    return EXIT_SUCCESS;\n```\n","source":"_posts/UVa455.md","raw":"---\ntitle: UVa455\ndate: 2016-12-21 23:44:56\ntags: 竞赛\ncategories: C/C++\ntoc: true\n---\n\n\ninspired by my wife, and i got the code below\n```\n#include <stdlib.h>\n#include <stdio.h>\n#include <strings.h>\nint main ( int argc, char *argv[] )\n{\n    char buf[81];\n    int i = 0;\n    memset(buf,0,sizeof(buf));\n    while(scanf(\"%s\",buf)!=EOF){\n        for(i=1;i<strlen(buf);i++){\n            if ( strlen(buf)%i==0 ){\n                if (strncmp(buf,buf+i,strlen(buf)-i)==0) {\n                    printf ( \" k is %d\\n\",i );\n                    break;\n                }\n            }\n        }\n        if(i==strlen(buf)){\n            printf ( \"k is %d\\n\",i );\n        }\n        memset(buf,0,sizeof(buf));\n    }\n    return EXIT_SUCCESS;\n```\n","slug":"UVa455","published":1,"updated":"2017-02-15T08:08:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1eml0030bnaviv9f8xf2","content":"<p>inspired by my wife, and i got the code below<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">int main ( int argc, char *argv[] )</div><div class=\"line\">{</div><div class=\"line\">    char buf[81];</div><div class=\"line\">    int i = 0;</div><div class=\"line\">    memset(buf,0,sizeof(buf));</div><div class=\"line\">    while(scanf(&quot;%s&quot;,buf)!=EOF){</div><div class=\"line\">        for(i=1;i&lt;strlen(buf);i++){</div><div class=\"line\">            if ( strlen(buf)%i==0 ){</div><div class=\"line\">                if (strncmp(buf,buf+i,strlen(buf)-i)==0) {</div><div class=\"line\">                    printf ( &quot; k is %d\\n&quot;,i );</div><div class=\"line\">                    break;</div><div class=\"line\">                }</div><div class=\"line\">            }</div><div class=\"line\">        }</div><div class=\"line\">        if(i==strlen(buf)){</div><div class=\"line\">            printf ( &quot;k is %d\\n&quot;,i );</div><div class=\"line\">        }</div><div class=\"line\">        memset(buf,0,sizeof(buf));</div><div class=\"line\">    }</div><div class=\"line\">    return EXIT_SUCCESS;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>inspired by my wife, and i got the code below<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;strings.h&gt;</div><div class=\"line\">int main ( int argc, char *argv[] )</div><div class=\"line\">&#123;</div><div class=\"line\">    char buf[81];</div><div class=\"line\">    int i = 0;</div><div class=\"line\">    memset(buf,0,sizeof(buf));</div><div class=\"line\">    while(scanf(&quot;%s&quot;,buf)!=EOF)&#123;</div><div class=\"line\">        for(i=1;i&lt;strlen(buf);i++)&#123;</div><div class=\"line\">            if ( strlen(buf)%i==0 )&#123;</div><div class=\"line\">                if (strncmp(buf,buf+i,strlen(buf)-i)==0) &#123;</div><div class=\"line\">                    printf ( &quot; k is %d\\n&quot;,i );</div><div class=\"line\">                    break;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if(i==strlen(buf))&#123;</div><div class=\"line\">            printf ( &quot;k is %d\\n&quot;,i );</div><div class=\"line\">        &#125;</div><div class=\"line\">        memset(buf,0,sizeof(buf));</div><div class=\"line\">    &#125;</div><div class=\"line\">    return EXIT_SUCCESS;</div></pre></td></tr></table></figure></p>\n"},{"title":"UpperBound","date":"2017-09-18T09:09:20.000Z","_content":"\nWhile upper type bounds limit a type to a subtype of another type, lower type bounds declare a type to be a supertype of another type. The term B >: A expresses that the type parameter B or the abstract type B refer to a supertype of type A. In most cases, A will be the type parameter of the class and B will be the type parameter of a method.\n\nHere is an example where this is useful:\n\n```\ntrait Node[+B] {\n  def prepend(elem: B): Unit\n}\n\ncase class ListNode[+B](h: B, t: Node[B]) extends Node[B] {\n  def prepend(elem: B) = ListNode[B](elem, this)\n  def head: B = h\n  def tail = t\n}\n\ncase class Nil[+B]() extends Node[B] {\n  def prepend(elem: B) = ListNode[B](elem, this)\n}\n```\n\nThis program implements a singly-linked list. Nil represents an empty element (i.e. an empty list). class ListNode is a node which contains an element of type B (head) and a reference to the rest of the list (tail). The class Node and its subtypes are covariant because we have +B.\n\nHowever, this program does not compile because the parameter elem in prepend is of type B, which we declared covariant. This doesn’t work because functions are contravariant in their parameter types and covariant in their result types.\n\nTo fix this, we need to flip the variance of the type of the parameter elem in prepend. We do this by introducing a new type parameter U that has B as a lower type bound.\n\n```\ntrait Node[+B] {\n  def prepend[U >: B](elem: U)\n}\n\ncase class ListNode[+B](h: B, t: Node[B]) extends Node[B] {\n  def prepend[U >: B](elem: U) = ListNode[U](elem, this)\n  def head: B = h\n  def tail = t\n}\n\ncase class Nil[+B]() extends Node[B] {\n  def prepend[U >: B](elem: U) = ListNode[U](elem, this)\n}\n```\n\nNow we can do the following:\n\ntrait Mammal\ncase class AfricanSwallow() extends Mammal\ncase class EuropeanSwallow() extends Mammal\n\n\nval africanSwallowList= ListNode[AfricanSwallow](AfricanSwallow(), Nil())\nval mammalList: Node[Mammal] = africanSwallowList\nmammalList.prepend(new EuropeanSwallow)\n\nThe Node[Mammal] can be assigned the africanSwallowList but then accept EuropeanSwallows.\n\n","source":"_posts/UpperBound.md","raw":"---\ntitle: UpperBound\ndate: 2017-09-18 17:09:20\ntags:\n---\n\nWhile upper type bounds limit a type to a subtype of another type, lower type bounds declare a type to be a supertype of another type. The term B >: A expresses that the type parameter B or the abstract type B refer to a supertype of type A. In most cases, A will be the type parameter of the class and B will be the type parameter of a method.\n\nHere is an example where this is useful:\n\n```\ntrait Node[+B] {\n  def prepend(elem: B): Unit\n}\n\ncase class ListNode[+B](h: B, t: Node[B]) extends Node[B] {\n  def prepend(elem: B) = ListNode[B](elem, this)\n  def head: B = h\n  def tail = t\n}\n\ncase class Nil[+B]() extends Node[B] {\n  def prepend(elem: B) = ListNode[B](elem, this)\n}\n```\n\nThis program implements a singly-linked list. Nil represents an empty element (i.e. an empty list). class ListNode is a node which contains an element of type B (head) and a reference to the rest of the list (tail). The class Node and its subtypes are covariant because we have +B.\n\nHowever, this program does not compile because the parameter elem in prepend is of type B, which we declared covariant. This doesn’t work because functions are contravariant in their parameter types and covariant in their result types.\n\nTo fix this, we need to flip the variance of the type of the parameter elem in prepend. We do this by introducing a new type parameter U that has B as a lower type bound.\n\n```\ntrait Node[+B] {\n  def prepend[U >: B](elem: U)\n}\n\ncase class ListNode[+B](h: B, t: Node[B]) extends Node[B] {\n  def prepend[U >: B](elem: U) = ListNode[U](elem, this)\n  def head: B = h\n  def tail = t\n}\n\ncase class Nil[+B]() extends Node[B] {\n  def prepend[U >: B](elem: U) = ListNode[U](elem, this)\n}\n```\n\nNow we can do the following:\n\ntrait Mammal\ncase class AfricanSwallow() extends Mammal\ncase class EuropeanSwallow() extends Mammal\n\n\nval africanSwallowList= ListNode[AfricanSwallow](AfricanSwallow(), Nil())\nval mammalList: Node[Mammal] = africanSwallowList\nmammalList.prepend(new EuropeanSwallow)\n\nThe Node[Mammal] can be assigned the africanSwallowList but then accept EuropeanSwallows.\n\n","slug":"UpperBound","published":1,"updated":"2017-09-18T09:11:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emm0033bnav1lousikn","content":"<p>While upper type bounds limit a type to a subtype of another type, lower type bounds declare a type to be a supertype of another type. The term B &gt;: A expresses that the type parameter B or the abstract type B refer to a supertype of type A. In most cases, A will be the type parameter of the class and B will be the type parameter of a method.</p>\n<p>Here is an example where this is useful:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">trait Node[+B] {</div><div class=\"line\">  def prepend(elem: B): Unit</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] {</div><div class=\"line\">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class=\"line\">  def head: B = h</div><div class=\"line\">  def tail = t</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">case class Nil[+B]() extends Node[B] {</div><div class=\"line\">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>This program implements a singly-linked list. Nil represents an empty element (i.e. an empty list). class ListNode is a node which contains an element of type B (head) and a reference to the rest of the list (tail). The class Node and its subtypes are covariant because we have +B.</p>\n<p>However, this program does not compile because the parameter elem in prepend is of type B, which we declared covariant. This doesn&#x2019;t work because functions are contravariant in their parameter types and covariant in their result types.</p>\n<p>To fix this, we need to flip the variance of the type of the parameter elem in prepend. We do this by introducing a new type parameter U that has B as a lower type bound.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">trait Node[+B] {</div><div class=\"line\">  def prepend[U &gt;: B](elem: U)</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] {</div><div class=\"line\">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class=\"line\">  def head: B = h</div><div class=\"line\">  def tail = t</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\">case class Nil[+B]() extends Node[B] {</div><div class=\"line\">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>Now we can do the following:</p>\n<p>trait Mammal<br>case class AfricanSwallow() extends Mammal<br>case class EuropeanSwallow() extends Mammal</p>\n<p>val africanSwallowList= ListNode<a href=\"AfricanSwallow(\">AfricanSwallow</a>, Nil())<br>val mammalList: Node[Mammal] = africanSwallowList<br>mammalList.prepend(new EuropeanSwallow)</p>\n<p>The Node[Mammal] can be assigned the africanSwallowList but then accept EuropeanSwallows.</p>\n","excerpt":"","more":"<p>While upper type bounds limit a type to a subtype of another type, lower type bounds declare a type to be a supertype of another type. The term B &gt;: A expresses that the type parameter B or the abstract type B refer to a supertype of type A. In most cases, A will be the type parameter of the class and B will be the type parameter of a method.</p>\n<p>Here is an example where this is useful:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">trait Node[+B] &#123;</div><div class=\"line\">  def prepend(elem: B): Unit</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] &#123;</div><div class=\"line\">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class=\"line\">  def head: B = h</div><div class=\"line\">  def tail = t</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">case class Nil[+B]() extends Node[B] &#123;</div><div class=\"line\">  def prepend(elem: B) = ListNode[B](elem, this)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>This program implements a singly-linked list. Nil represents an empty element (i.e. an empty list). class ListNode is a node which contains an element of type B (head) and a reference to the rest of the list (tail). The class Node and its subtypes are covariant because we have +B.</p>\n<p>However, this program does not compile because the parameter elem in prepend is of type B, which we declared covariant. This doesn’t work because functions are contravariant in their parameter types and covariant in their result types.</p>\n<p>To fix this, we need to flip the variance of the type of the parameter elem in prepend. We do this by introducing a new type parameter U that has B as a lower type bound.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">trait Node[+B] &#123;</div><div class=\"line\">  def prepend[U &gt;: B](elem: U)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">case class ListNode[+B](h: B, t: Node[B]) extends Node[B] &#123;</div><div class=\"line\">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class=\"line\">  def head: B = h</div><div class=\"line\">  def tail = t</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">case class Nil[+B]() extends Node[B] &#123;</div><div class=\"line\">  def prepend[U &gt;: B](elem: U) = ListNode[U](elem, this)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Now we can do the following:</p>\n<p>trait Mammal<br>case class AfricanSwallow() extends Mammal<br>case class EuropeanSwallow() extends Mammal</p>\n<p>val africanSwallowList= ListNode<a href=\"AfricanSwallow(\">AfricanSwallow</a>, Nil())<br>val mammalList: Node[Mammal] = africanSwallowList<br>mammalList.prepend(new EuropeanSwallow)</p>\n<p>The Node[Mammal] can be assigned the africanSwallowList but then accept EuropeanSwallows.</p>\n"},{"title":"ScalaTest","date":"2019-08-06T09:41:02.000Z","_content":"# text\n\n# text\n\n\n","source":"_posts/ScalaTest.md","raw":"---\ntitle: ScalaTest\ndate: 2019-08-06 17:41:02\ntags:\n---\n# text\n\n# text\n\n\n","slug":"ScalaTest","published":1,"updated":"2019-08-06T09:41:22.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emn0037bnavik82ytn6","content":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1><h1 id=\"text-1\"><a href=\"#text-1\" class=\"headerlink\" title=\"text\"></a>text</h1>","excerpt":"","more":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1><h1 id=\"text-1\"><a href=\"#text-1\" class=\"headerlink\" title=\"text\"></a>text</h1>"},{"title":"arthas技巧","date":"2020-06-03T14:54:19.000Z","_content":"如果有一些类比较复杂，那么有可能jad命令反编绎失败。那么后面的mc命令也会失败。\n\n这时，可以在本地修改代码，然后把.class文件上传到服务器上。\n\n有一些服务器的权限比较严格，不允许直接上传文件，那么可以用一些技巧来绕过。比如传用base64命令：\n\n在本地先转换.class文件为base64，再保存为result.txt\nbase64 < Test.class > result.txt\n到服务器上，新建result.txt，复制本地的内容，粘贴再保存\n\n把服务器上的 result.txt还原为.class\n\nbase64 -d < result.txt > Test.class\n用md5命令计算哈希值，校验是否一致\n\n\n[arthas能排查启动过慢问题么](https://github.com/alibaba/arthas/issues/1096)\n[线程池监控](https://github.com/alibaba/arthas/issues/100)\n[需求：watch的输出是否可以加上线程名信息？](https://github.com/alibaba/arthas/issues/466)\n\n\n\n","source":"_posts/arthas技巧.md","raw":"---\ntitle: arthas技巧\ndate: 2020-06-03 22:54:19\ntags:\n---\n如果有一些类比较复杂，那么有可能jad命令反编绎失败。那么后面的mc命令也会失败。\n\n这时，可以在本地修改代码，然后把.class文件上传到服务器上。\n\n有一些服务器的权限比较严格，不允许直接上传文件，那么可以用一些技巧来绕过。比如传用base64命令：\n\n在本地先转换.class文件为base64，再保存为result.txt\nbase64 < Test.class > result.txt\n到服务器上，新建result.txt，复制本地的内容，粘贴再保存\n\n把服务器上的 result.txt还原为.class\n\nbase64 -d < result.txt > Test.class\n用md5命令计算哈希值，校验是否一致\n\n\n[arthas能排查启动过慢问题么](https://github.com/alibaba/arthas/issues/1096)\n[线程池监控](https://github.com/alibaba/arthas/issues/100)\n[需求：watch的输出是否可以加上线程名信息？](https://github.com/alibaba/arthas/issues/466)\n\n\n\n","slug":"arthas技巧","published":1,"updated":"2020-06-04T07:24:04.416Z","_id":"ckb0g1emn003abnavhfm4fob9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E9B;&#x7C7B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x53EF;&#x80FD;jad&#x547D;&#x4EE4;&#x53CD;&#x7F16;&#x7ECE;&#x5931;&#x8D25;&#x3002;&#x90A3;&#x4E48;&#x540E;&#x9762;&#x7684;mc&#x547D;&#x4EE4;&#x4E5F;&#x4F1A;&#x5931;&#x8D25;&#x3002;</p>\n<p>&#x8FD9;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x5730;&#x4FEE;&#x6539;&#x4EE3;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x628A;.class&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;</p>\n<p>&#x6709;&#x4E00;&#x4E9B;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6743;&#x9650;&#x6BD4;&#x8F83;&#x4E25;&#x683C;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x76F4;&#x63A5;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E9B;&#x6280;&#x5DE7;&#x6765;&#x7ED5;&#x8FC7;&#x3002;&#x6BD4;&#x5982;&#x4F20;&#x7528;base64&#x547D;&#x4EE4;&#xFF1A;</p>\n<p>&#x5728;&#x672C;&#x5730;&#x5148;&#x8F6C;&#x6362;.class&#x6587;&#x4EF6;&#x4E3A;base64&#xFF0C;&#x518D;&#x4FDD;&#x5B58;&#x4E3A;result.txt<br>base64 &lt; Test.class &gt; result.txt<br>&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x65B0;&#x5EFA;result.txt&#xFF0C;&#x590D;&#x5236;&#x672C;&#x5730;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7C98;&#x8D34;&#x518D;&#x4FDD;&#x5B58;</p>\n<p>&#x628A;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684; result.txt&#x8FD8;&#x539F;&#x4E3A;.class</p>\n<p>base64 -d &lt; result.txt &gt; Test.class<br>&#x7528;md5&#x547D;&#x4EE4;&#x8BA1;&#x7B97;&#x54C8;&#x5E0C;&#x503C;&#xFF0C;&#x6821;&#x9A8C;&#x662F;&#x5426;&#x4E00;&#x81F4;</p>\n<p><a href=\"https://github.com/alibaba/arthas/issues/1096\" target=\"_blank\" rel=\"external\">arthas&#x80FD;&#x6392;&#x67E5;&#x542F;&#x52A8;&#x8FC7;&#x6162;&#x95EE;&#x9898;&#x4E48;</a><br><a href=\"https://github.com/alibaba/arthas/issues/100\" target=\"_blank\" rel=\"external\">&#x7EBF;&#x7A0B;&#x6C60;&#x76D1;&#x63A7;</a><br><a href=\"https://github.com/alibaba/arthas/issues/466\" target=\"_blank\" rel=\"external\">&#x9700;&#x6C42;&#xFF1A;watch&#x7684;&#x8F93;&#x51FA;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x52A0;&#x4E0A;&#x7EBF;&#x7A0B;&#x540D;&#x4FE1;&#x606F;&#xFF1F;</a></p>\n","excerpt":"","more":"<p>如果有一些类比较复杂，那么有可能jad命令反编绎失败。那么后面的mc命令也会失败。</p>\n<p>这时，可以在本地修改代码，然后把.class文件上传到服务器上。</p>\n<p>有一些服务器的权限比较严格，不允许直接上传文件，那么可以用一些技巧来绕过。比如传用base64命令：</p>\n<p>在本地先转换.class文件为base64，再保存为result.txt<br>base64 &lt; Test.class &gt; result.txt<br>到服务器上，新建result.txt，复制本地的内容，粘贴再保存</p>\n<p>把服务器上的 result.txt还原为.class</p>\n<p>base64 -d &lt; result.txt &gt; Test.class<br>用md5命令计算哈希值，校验是否一致</p>\n<p><a href=\"https://github.com/alibaba/arthas/issues/1096\">arthas能排查启动过慢问题么</a><br><a href=\"https://github.com/alibaba/arthas/issues/100\">线程池监控</a><br><a href=\"https://github.com/alibaba/arthas/issues/466\">需求：watch的输出是否可以加上线程名信息？</a></p>\n"},{"title":"Code Highlight","date":"2014-03-15T12:17:16.000Z","description":"A collection of Hello World applications from helloworld.org.","toc":true,"_content":"\n## C ##\n\n``` c\n// C\n#include <stdio.h>\nint main(void)\n{\n    printf(\"Hello World\\n\");\n    return 0;\n}\n```\n\n## C++ ##\n\n``` c++\n// C++\n#include <iostream.h>\nint main(void)\n{\n    cout << \"Hello World\" << endl;\n    return 0;\n}\n```\n\n<!-- more -->\n\n## JAVA ##\n\n``` java\nclass helloWorld\n{\n    public static void main(String args[])\n    {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n## Assembler ##\n\n``` arm\n#include <stdio.h>\n\nchar format[] = \"%s %s\\n\";\nchar hello[] = \"Hello\";\nchar world[] = \"world\";\nvoid main( void )\n{\n   __asm\n   {\n      mov  eax, offset world\n      push eax\n      mov  eax, offset hello\n      push eax\n      mov  eax, offset format\n      push eax\n      call printf\n      pop  ebx\n      pop  ebx\n      pop  ebx\n   }\n}\n```\n\n## .Net ##\n\n``` cs\n// Hello World .NET\n\n#using <mscorlib.dll>\nusing namespace System;\n\nint _tmain()\n{\n    Console::WriteLine(S\"Hello World\");\n    return 0;\n}\n```\n\n## Erlang ##\n\n``` erlang\n-module(hello).\n-export([world/0]).\n\nworld() -> io:format(\"Hello World\").\n```\n\n## Ruby ##\n\n``` ruby\n#!/usr/local/bin/ruby -w\nputs \"Hello World\"\n```\n\n## BASIC ##\n\n``` basic\n// Texas Instruments TI-81 BASIC\nPrgm1:HELLO...\n:Disp \"HELLO WORLD\"\n```\n\n## Perl ##\n\n``` perl\n#!/usr/bin perl -w  \nprint (\"Hello World\");  \n```\n\n## Python ##\n\n``` python\n#!/bin/python\nprint(\"Hello World\")\n```\n\n## Bash ##\n\n``` bash\n#!/bin/bash\necho \"Hello World\"\n```\n\n## Brainfuck ##\n\n``` brainfuck\n>+++++++++[<++++++++>-]<.>+++++++[<++++>-]<+.+++++++..+++.[-]\n>++++++++[<++++>-] <.>+++++++++++[<++++++++>-]<-.--------.+++\n.------.--------.[-]>++++++++[<++++>- ]<+.[-]++++++++++.\n```\n\n## php ##\n\n``` php\n<?=\"Hello world\\n\" ?> \n```\n\n## Pascal ##\n\n``` pascal\nProgram HelloWorld;\n\nBegin\n  Writeln ('Hello World!');\nEnd.\n```\n\n## Delphi ##\n\n``` delphi\n// Delphi, thanks to C0derr\nprogram Project1;\nuses\n  qdialogs;\nconst\n  s='Hello, World!';\nbegin\n  showmessage(s);\nend.\n```\n","source":"_posts/code-highlight.md","raw":"title: \"Code Highlight\"\ndate: \"2014-03-15 20:17:16\"\ntags: highlight\ncategories: Demo\ndescription: \"A collection of Hello World applications from helloworld.org.\"\ntoc: true\n---\n\n## C ##\n\n``` c\n// C\n#include <stdio.h>\nint main(void)\n{\n    printf(\"Hello World\\n\");\n    return 0;\n}\n```\n\n## C++ ##\n\n``` c++\n// C++\n#include <iostream.h>\nint main(void)\n{\n    cout << \"Hello World\" << endl;\n    return 0;\n}\n```\n\n<!-- more -->\n\n## JAVA ##\n\n``` java\nclass helloWorld\n{\n    public static void main(String args[])\n    {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n## Assembler ##\n\n``` arm\n#include <stdio.h>\n\nchar format[] = \"%s %s\\n\";\nchar hello[] = \"Hello\";\nchar world[] = \"world\";\nvoid main( void )\n{\n   __asm\n   {\n      mov  eax, offset world\n      push eax\n      mov  eax, offset hello\n      push eax\n      mov  eax, offset format\n      push eax\n      call printf\n      pop  ebx\n      pop  ebx\n      pop  ebx\n   }\n}\n```\n\n## .Net ##\n\n``` cs\n// Hello World .NET\n\n#using <mscorlib.dll>\nusing namespace System;\n\nint _tmain()\n{\n    Console::WriteLine(S\"Hello World\");\n    return 0;\n}\n```\n\n## Erlang ##\n\n``` erlang\n-module(hello).\n-export([world/0]).\n\nworld() -> io:format(\"Hello World\").\n```\n\n## Ruby ##\n\n``` ruby\n#!/usr/local/bin/ruby -w\nputs \"Hello World\"\n```\n\n## BASIC ##\n\n``` basic\n// Texas Instruments TI-81 BASIC\nPrgm1:HELLO...\n:Disp \"HELLO WORLD\"\n```\n\n## Perl ##\n\n``` perl\n#!/usr/bin perl -w  \nprint (\"Hello World\");  \n```\n\n## Python ##\n\n``` python\n#!/bin/python\nprint(\"Hello World\")\n```\n\n## Bash ##\n\n``` bash\n#!/bin/bash\necho \"Hello World\"\n```\n\n## Brainfuck ##\n\n``` brainfuck\n>+++++++++[<++++++++>-]<.>+++++++[<++++>-]<+.+++++++..+++.[-]\n>++++++++[<++++>-] <.>+++++++++++[<++++++++>-]<-.--------.+++\n.------.--------.[-]>++++++++[<++++>- ]<+.[-]++++++++++.\n```\n\n## php ##\n\n``` php\n<?=\"Hello world\\n\" ?> \n```\n\n## Pascal ##\n\n``` pascal\nProgram HelloWorld;\n\nBegin\n  Writeln ('Hello World!');\nEnd.\n```\n\n## Delphi ##\n\n``` delphi\n// Delphi, thanks to C0derr\nprogram Project1;\nuses\n  qdialogs;\nconst\n  s='Hello, World!';\nbegin\n  showmessage(s);\nend.\n```\n","slug":"code-highlight","published":1,"updated":"2017-02-14T05:42:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emo003cbnav0ujhxofe","content":"<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// C</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello World\\n&quot;</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"C-1\"><a href=\"#C-1\" class=\"headerlink\" title=\"C++\"></a>C++</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// C++</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Hello World&quot;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"JAVA\"><a href=\"#JAVA\" class=\"headerlink\" title=\"JAVA\"></a>JAVA</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">helloWorld</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span></div><div class=\"line\">    {</div><div class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h2><figure class=\"highlight arm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">#include</span> &lt;stdio.h&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">char</span> format[] = <span class=\"string\">&quot;%s %s\\n&quot;</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">char</span> hello[] = <span class=\"string\">&quot;Hello&quot;</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">char</span> world[] = <span class=\"string\">&quot;world&quot;</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">void</span> main( void )</div><div class=\"line\">{</div><div class=\"line\">   __asm</div><div class=\"line\">   {</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset world</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset hello</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset format</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      call printf</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">   }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"Net\"><a href=\"#Net\" class=\"headerlink\" title=\".Net\"></a>.Net</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Hello World .NET</div><div class=\"line\"></div><div class=\"line\">#using &lt;mscorlib.dll&gt;</div><div class=\"line\">using namespace System;</div><div class=\"line\"></div><div class=\"line\">int _tmain()</div><div class=\"line\">{</div><div class=\"line\">    Console::WriteLine(S&quot;Hello World&quot;);</div><div class=\"line\">    return 0;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<h2 id=\"Erlang\"><a href=\"#Erlang\" class=\"headerlink\" title=\"Erlang\"></a>Erlang</h2><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">-module</span><span class=\"params\">(hello)</span>.</div><div class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([world/<span class=\"number\">0</span>])</span>.</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">world</span><span class=\"params\">()</span> -&gt;</span> io:format(<span class=\"string\">&quot;Hello World&quot;</span>).</div></pre></td></tr></table></figure>\n<h2 id=\"Ruby\"><a href=\"#Ruby\" class=\"headerlink\" title=\"Ruby\"></a>Ruby</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/local/bin/ruby -w</span></div><div class=\"line\">puts <span class=\"string\">&quot;Hello World&quot;</span></div></pre></td></tr></table></figure>\n<h2 id=\"BASIC\"><a href=\"#BASIC\" class=\"headerlink\" title=\"BASIC\"></a>BASIC</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Texas Instruments TI-81 BASIC</div><div class=\"line\">Prgm1:HELLO...</div><div class=\"line\">:Disp &quot;HELLO WORLD&quot;</div></pre></td></tr></table></figure>\n<h2 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin perl -w  </span></div><div class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">&quot;Hello World&quot;</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/bin/python</span></div><div class=\"line\">print(<span class=\"string\">&quot;Hello World&quot;</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Hello World&quot;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Brainfuck\"><a href=\"#Brainfuck\" class=\"headerlink\" title=\"Brainfuck\"></a>Brainfuck</h2><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"string\">.</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span></div><div class=\"line\">&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span> &lt;<span class=\"string\">.</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span></div><div class=\"line\"><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span> <span class=\"title\">]</span>&lt;<span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span></div></pre></td></tr></table></figure>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?</span>=<span class=\"string\">&quot;Hello world\\n&quot;</span> <span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Pascal\"><a href=\"#Pascal\" class=\"headerlink\" title=\"Pascal\"></a>Pascal</h2><figure class=\"highlight pascal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Program</span> HelloWorld;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Begin</span></div><div class=\"line\">  Writeln (<span class=\"string\">&apos;Hello World!&apos;</span>);</div><div class=\"line\"><span class=\"keyword\">End</span>.</div></pre></td></tr></table></figure>\n<h2 id=\"Delphi\"><a href=\"#Delphi\" class=\"headerlink\" title=\"Delphi\"></a>Delphi</h2><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Delphi, thanks to C0derr</span></div><div class=\"line\"><span class=\"keyword\">program</span> Project1;</div><div class=\"line\"><span class=\"keyword\">uses</span></div><div class=\"line\">  qdialogs;</div><div class=\"line\"><span class=\"keyword\">const</span></div><div class=\"line\">  s=<span class=\"string\">&apos;Hello, World!&apos;</span>;</div><div class=\"line\"><span class=\"keyword\">begin</span></div><div class=\"line\">  showmessage(s);</div><div class=\"line\"><span class=\"keyword\">end</span>.</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// C</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello World\\n\"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"C-1\"><a href=\"#C-1\" class=\"headerlink\" title=\"C++\"></a>C++</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// C++</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Hello World\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<h2 id=\"JAVA\"><a href=\"#JAVA\" class=\"headerlink\" title=\"JAVA\"></a>JAVA</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">helloWorld</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"Hello World\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Assembler\"><a href=\"#Assembler\" class=\"headerlink\" title=\"Assembler\"></a>Assembler</h2><figure class=\"highlight arm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">#include</span> &lt;stdio.h&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"symbol\">char</span> format[] = <span class=\"string\">\"%s %s\\n\"</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">char</span> hello[] = <span class=\"string\">\"Hello\"</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">char</span> world[] = <span class=\"string\">\"world\"</span><span class=\"comment\">;</span></div><div class=\"line\"><span class=\"symbol\">void</span> main( void )</div><div class=\"line\">&#123;</div><div class=\"line\">   __asm</div><div class=\"line\">   &#123;</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset world</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset hello</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      <span class=\"keyword\">mov </span> eax, offset format</div><div class=\"line\">      <span class=\"keyword\">push </span>eax</div><div class=\"line\">      call printf</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">      <span class=\"keyword\">pop </span> ebx</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Net\"><a href=\"#Net\" class=\"headerlink\" title=\".Net\"></a>.Net</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Hello World .NET</div><div class=\"line\"></div><div class=\"line\">#using &lt;mscorlib.dll&gt;</div><div class=\"line\">using namespace System;</div><div class=\"line\"></div><div class=\"line\">int _tmain()</div><div class=\"line\">&#123;</div><div class=\"line\">    Console::WriteLine(S\"Hello World\");</div><div class=\"line\">    return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Erlang\"><a href=\"#Erlang\" class=\"headerlink\" title=\"Erlang\"></a>Erlang</h2><figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">-module</span><span class=\"params\">(hello)</span>.</div><div class=\"line\"><span class=\"keyword\">-export</span><span class=\"params\">([world/<span class=\"number\">0</span>])</span>.</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"title\">world</span><span class=\"params\">()</span> -&gt;</span> io:format(<span class=\"string\">\"Hello World\"</span>).</div></pre></td></tr></table></figure>\n<h2 id=\"Ruby\"><a href=\"#Ruby\" class=\"headerlink\" title=\"Ruby\"></a>Ruby</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/local/bin/ruby -w</span></div><div class=\"line\">puts <span class=\"string\">\"Hello World\"</span></div></pre></td></tr></table></figure>\n<h2 id=\"BASIC\"><a href=\"#BASIC\" class=\"headerlink\" title=\"BASIC\"></a>BASIC</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Texas Instruments TI-81 BASIC</div><div class=\"line\">Prgm1:HELLO...</div><div class=\"line\">:Disp \"HELLO WORLD\"</div></pre></td></tr></table></figure>\n<h2 id=\"Perl\"><a href=\"#Perl\" class=\"headerlink\" title=\"Perl\"></a>Perl</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin perl -w  </span></div><div class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">\"Hello World\"</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/bin/python</span></div><div class=\"line\">print(<span class=\"string\">\"Hello World\"</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello World\"</span></div></pre></td></tr></table></figure>\n<h2 id=\"Brainfuck\"><a href=\"#Brainfuck\" class=\"headerlink\" title=\"Brainfuck\"></a>Brainfuck</h2><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"string\">.</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span></div><div class=\"line\">&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span> &lt;<span class=\"string\">.</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span><span class=\"title\">]</span>&lt;<span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span></div><div class=\"line\"><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span>&gt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"title\">[</span>&lt;<span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span>&gt;<span class=\"literal\">-</span> <span class=\"title\">]</span>&lt;<span class=\"literal\">+</span><span class=\"string\">.</span><span class=\"title\">[</span><span class=\"literal\">-</span><span class=\"title\">]</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"literal\">+</span><span class=\"string\">.</span></div></pre></td></tr></table></figure>\n<h2 id=\"php\"><a href=\"#php\" class=\"headerlink\" title=\"php\"></a>php</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?</span>=<span class=\"string\">\"Hello world\\n\"</span> <span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Pascal\"><a href=\"#Pascal\" class=\"headerlink\" title=\"Pascal\"></a>Pascal</h2><figure class=\"highlight pascal\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Program</span> HelloWorld;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">Begin</span></div><div class=\"line\">  Writeln (<span class=\"string\">'Hello World!'</span>);</div><div class=\"line\"><span class=\"keyword\">End</span>.</div></pre></td></tr></table></figure>\n<h2 id=\"Delphi\"><a href=\"#Delphi\" class=\"headerlink\" title=\"Delphi\"></a>Delphi</h2><figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Delphi, thanks to C0derr</span></div><div class=\"line\"><span class=\"keyword\">program</span> Project1;</div><div class=\"line\"><span class=\"keyword\">uses</span></div><div class=\"line\">  qdialogs;</div><div class=\"line\"><span class=\"keyword\">const</span></div><div class=\"line\">  s=<span class=\"string\">'Hello, World!'</span>;</div><div class=\"line\"><span class=\"keyword\">begin</span></div><div class=\"line\">  showmessage(s);</div><div class=\"line\"><span class=\"keyword\">end</span>.</div></pre></td></tr></table></figure>"},{"title":"SciPyLearn","date":"2019-12-19T12:31:22.000Z","_content":"# SciPy\n\n\nhttps://docs.sympy.org/latest/tutorial/\nhttps://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html\n\n","source":"_posts/SciPyLearn.md","raw":"---\ntitle: SciPyLearn\ndate: 2019-12-19 20:31:22\ntags: python\n---\n# SciPy\n\n\nhttps://docs.sympy.org/latest/tutorial/\nhttps://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html\n\n","slug":"SciPyLearn","published":1,"updated":"2019-12-19T12:38:14.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emp003fbnavejpjq2ub","content":"<h1 id=\"SciPy\"><a href=\"#SciPy\" class=\"headerlink\" title=\"SciPy\"></a>SciPy</h1><p><a href=\"https://docs.sympy.org/latest/tutorial/\" target=\"_blank\" rel=\"external\">https://docs.sympy.org/latest/tutorial/</a><br><a href=\"https://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html\" target=\"_blank\" rel=\"external\">https://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html</a></p>\n","excerpt":"","more":"<h1 id=\"SciPy\"><a href=\"#SciPy\" class=\"headerlink\" title=\"SciPy\"></a>SciPy</h1><p><a href=\"https://docs.sympy.org/latest/tutorial/\">https://docs.sympy.org/latest/tutorial/</a><br><a href=\"https://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html\">https://wizardforcel.gitbooks.io/scipy-lecture-notes/content/index.html</a></p>\n"},{"title":"install tensorflow","date":"2016-12-28T07:04:08.000Z","toc":true,"_content":"\nanaconda 提供了python科学计算的环境，为各种python软件包安装和管理提供了遍历，按照官方文档的方式即可以安装tensorflow. \n\n## 创建tensorflow的虚拟环境\n```\nconda create -n tensorflow python=3.5\n```\n\n## 安装tensorflow \n```\n$ source activate tensorflow\n(tensorflow)$  # Your prompt should change\n\n# Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:\n(tensorflow)$ conda install -c conda-forge tensorflow\n```\n\n如果网络状况不好，那么可以采用pip安装。\n\n```\n$ source activate tensorflow\n(tensorflow)$  # Your prompt should change\n```\n\n```\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.12.0-py3-none-any.whl\n```\n\n**请注意这里不能采用pip3安装，因为anaconda环境中pip3安装是有问题的**\n```\npip install --ignore-installed --upgrade $TF_BINARY_URL\n```\n\n\n## 测试是否安装成功\n\n```\nimport tensorflow as tf\nprint(tf.__versioin__)\n```\n\n\n\n","source":"_posts/install-tensorflow.md","raw":"---\ntitle: install tensorflow\ndate: 2016-12-28 15:04:08\ntags: tensorflow\ncategories: tensorflow\ntoc: true\n---\n\nanaconda 提供了python科学计算的环境，为各种python软件包安装和管理提供了遍历，按照官方文档的方式即可以安装tensorflow. \n\n## 创建tensorflow的虚拟环境\n```\nconda create -n tensorflow python=3.5\n```\n\n## 安装tensorflow \n```\n$ source activate tensorflow\n(tensorflow)$  # Your prompt should change\n\n# Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:\n(tensorflow)$ conda install -c conda-forge tensorflow\n```\n\n如果网络状况不好，那么可以采用pip安装。\n\n```\n$ source activate tensorflow\n(tensorflow)$  # Your prompt should change\n```\n\n```\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.12.0-py3-none-any.whl\n```\n\n**请注意这里不能采用pip3安装，因为anaconda环境中pip3安装是有问题的**\n```\npip install --ignore-installed --upgrade $TF_BINARY_URL\n```\n\n\n## 测试是否安装成功\n\n```\nimport tensorflow as tf\nprint(tf.__versioin__)\n```\n\n\n\n","slug":"install-tensorflow","published":1,"updated":"2017-02-15T08:08:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emq003jbnav4sg4rj84","content":"<p>anaconda &#x63D0;&#x4F9B;&#x4E86;python&#x79D1;&#x5B66;&#x8BA1;&#x7B97;&#x7684;&#x73AF;&#x5883;&#xFF0C;&#x4E3A;&#x5404;&#x79CD;python&#x8F6F;&#x4EF6;&#x5305;&#x5B89;&#x88C5;&#x548C;&#x7BA1;&#x7406;&#x63D0;&#x4F9B;&#x4E86;&#x904D;&#x5386;&#xFF0C;&#x6309;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x65B9;&#x5F0F;&#x5373;&#x53EF;&#x4EE5;&#x5B89;&#x88C5;tensorflow. </p>\n<h2 id=\"&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;\"><a href=\"#&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;\" class=\"headerlink\" title=\"&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;\"></a>&#x521B;&#x5EFA;tensorflow&#x7684;&#x865A;&#x62DF;&#x73AF;&#x5883;</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">conda create -n tensorflow python=3.5</div></pre></td></tr></table></figure>\n<h2 id=\"&#x5B89;&#x88C5;tensorflow\"><a href=\"#&#x5B89;&#x88C5;tensorflow\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;tensorflow\"></a>&#x5B89;&#x88C5;tensorflow</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ source activate tensorflow</div><div class=\"line\">(tensorflow)$  # Your prompt should change</div><div class=\"line\"></div><div class=\"line\"># Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:</div><div class=\"line\">(tensorflow)$ conda install -c conda-forge tensorflow</div></pre></td></tr></table></figure>\n<p>&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x72B6;&#x51B5;&#x4E0D;&#x597D;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x91C7;&#x7528;pip&#x5B89;&#x88C5;&#x3002;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ source activate tensorflow</div><div class=\"line\">(tensorflow)$  # Your prompt should change</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.12.0-py3-none-any.whl</div></pre></td></tr></table></figure>\n<p><strong>&#x8BF7;&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x4E0D;&#x80FD;&#x91C7;&#x7528;pip3&#x5B89;&#x88C5;&#xFF0C;&#x56E0;&#x4E3A;anaconda&#x73AF;&#x5883;&#x4E2D;pip3&#x5B89;&#x88C5;&#x662F;&#x6709;&#x95EE;&#x9898;&#x7684;</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install --ignore-installed --upgrade $TF_BINARY_URL</div></pre></td></tr></table></figure></p>\n<h2 id=\"&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;\"><a href=\"#&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;\" class=\"headerlink\" title=\"&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;\"></a>&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">import tensorflow as tf</div><div class=\"line\">print(tf.__versioin__)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>anaconda 提供了python科学计算的环境，为各种python软件包安装和管理提供了遍历，按照官方文档的方式即可以安装tensorflow. </p>\n<h2 id=\"创建tensorflow的虚拟环境\"><a href=\"#创建tensorflow的虚拟环境\" class=\"headerlink\" title=\"创建tensorflow的虚拟环境\"></a>创建tensorflow的虚拟环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">conda create -n tensorflow python=3.5</div></pre></td></tr></table></figure>\n<h2 id=\"安装tensorflow\"><a href=\"#安装tensorflow\" class=\"headerlink\" title=\"安装tensorflow\"></a>安装tensorflow</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ source activate tensorflow</div><div class=\"line\">(tensorflow)$  # Your prompt should change</div><div class=\"line\"></div><div class=\"line\"># Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:</div><div class=\"line\">(tensorflow)$ conda install -c conda-forge tensorflow</div></pre></td></tr></table></figure>\n<p>如果网络状况不好，那么可以采用pip安装。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ source activate tensorflow</div><div class=\"line\">(tensorflow)$  # Your prompt should change</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.12.0-py3-none-any.whl</div></pre></td></tr></table></figure>\n<p><strong>请注意这里不能采用pip3安装，因为anaconda环境中pip3安装是有问题的</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install --ignore-installed --upgrade $TF_BINARY_URL</div></pre></td></tr></table></figure></p>\n<h2 id=\"测试是否安装成功\"><a href=\"#测试是否安装成功\" class=\"headerlink\" title=\"测试是否安装成功\"></a>测试是否安装成功</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">import tensorflow as tf</div><div class=\"line\">print(tf.__versioin__)</div></pre></td></tr></table></figure>\n"},{"title":"Lorem Ipsum","date":"2014-03-15T12:17:16.000Z","top":true,"toc":true,"_content":"\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n![Lorem Ipsum](/hexo-theme-freemind/images/lorem-ipsum/lorem-ipsum.jpg)\n\n<!-- more -->\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n","source":"_posts/lorem-ipsum.md","raw":"title: \"Lorem Ipsum\"\ndate: \"2014-03-15 20:17:16\"\ntags: English\ncategories: Test\ntop: true\ntoc: true\n---\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n![Lorem Ipsum](/hexo-theme-freemind/images/lorem-ipsum/lorem-ipsum.jpg)\n\n<!-- more -->\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n","slug":"lorem-ipsum","published":1,"updated":"2017-02-15T08:08:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emr003lbnaviq7w2z1t","content":"<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<p><img src=\"/hexo-theme-freemind/images/lorem-ipsum/lorem-ipsum.jpg\" alt=\"Lorem Ipsum\"></p>\n<a id=\"more\"></a>\n<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>\n","excerpt":"<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n<p><img src=\"/hexo-theme-freemind/images/lorem-ipsum/lorem-ipsum.jpg\" alt=\"Lorem Ipsum\"></p>","more":"<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>"},{"title":"Questions and Answers（中文）","date":"2014-03-16T10:10:16.000Z","description":"Frequently asked questions and my answers.","feature":"/hexo-theme-freemind/images/qna/qna.jpg","_content":"\n{% label Q danger %} `Freemind` 这名字有何含义？\n\n{% label A success %} `Freemind` 命名出自 [Pluskid](http://freemind.pluskid.org/) 的博客。这个主题很大程度借鉴了他的博客的布局和样式。\n\n{% label Q danger %} 现在都有这么多 Hexo 的主题了，为啥又要写一个？\n\n{% label A success %} 实际上我这个主题在我使用 Hexo 前已经创建了。我在半年前将博客迁移到 Hexo ，因为我已经习惯了原来的主题，所以顺便把主题也移植了过来。\n\n<!-- more -->\n\n{% label Q danger %} 为啥还用 CSS 写样式，而不用更高端大气的 stylus ？\n\n{% label A success %} 嗯，stylus 的确很酷。不过我不想再把以前的样式重写成 stylus 了。所以暂时先保留原来的 CSS。\n\n{% label Q danger %} 你的博客不错用，如何贡献？\n\n{% label A success %} 有人喜欢我的东西我就很高兴咯。如果想做出贡献，你可以：\n\n* 为本主题的 [Github 项目](https://github.com/wzpan/hexo-theme-freemind) 加颗星；\n* Fork 这个项目，尽情DIY，然后给我发 pull request;\n* 这个项目遵循 MIT 开源协议，你可以在本主题基础上创建你的主题。不过如果你能在你的主题页面中声明主题基于 Freemind 就再好不过了。\n\n{% label Q danger %} [你自己的博客](http://hahack.com) 看起来跟这个主题有点不一样呀，为什么？\n\n{% label A success %} 是的。我在开源这个主题前做了些简化。不是所有人都需要我的博客里的一些特性，比如 [Wiki](http://hahack.com/wiki) 页面。\n\n{% label Q danger %} 如何指定某些页面生成 ToC(Table of Contents) ？\n\n{% label A success %} 在[文章头部](https://github.com/wzpan/hexo-theme-freemind#front-matter)添加 `toc: true` 。\n\n{% label Q danger %} 从哪里可以找到你的这几篇文档的 Markdown 源码？\n\n{% label A success %} 在项目的 [source](https://github.com/wzpan/hexo-theme-freemind/tree/source) 分支。\n","source":"_posts/qna-cn.md","raw":"title: \"Questions and Answers（中文）\"\ndate: \"2014-03-16 18:10:16\"\ntags: Q&A\ncategories: Docs\ndescription: \"Frequently asked questions and my answers.\"\nfeature: /hexo-theme-freemind/images/qna/qna.jpg\n---\n\n{% label Q danger %} `Freemind` 这名字有何含义？\n\n{% label A success %} `Freemind` 命名出自 [Pluskid](http://freemind.pluskid.org/) 的博客。这个主题很大程度借鉴了他的博客的布局和样式。\n\n{% label Q danger %} 现在都有这么多 Hexo 的主题了，为啥又要写一个？\n\n{% label A success %} 实际上我这个主题在我使用 Hexo 前已经创建了。我在半年前将博客迁移到 Hexo ，因为我已经习惯了原来的主题，所以顺便把主题也移植了过来。\n\n<!-- more -->\n\n{% label Q danger %} 为啥还用 CSS 写样式，而不用更高端大气的 stylus ？\n\n{% label A success %} 嗯，stylus 的确很酷。不过我不想再把以前的样式重写成 stylus 了。所以暂时先保留原来的 CSS。\n\n{% label Q danger %} 你的博客不错用，如何贡献？\n\n{% label A success %} 有人喜欢我的东西我就很高兴咯。如果想做出贡献，你可以：\n\n* 为本主题的 [Github 项目](https://github.com/wzpan/hexo-theme-freemind) 加颗星；\n* Fork 这个项目，尽情DIY，然后给我发 pull request;\n* 这个项目遵循 MIT 开源协议，你可以在本主题基础上创建你的主题。不过如果你能在你的主题页面中声明主题基于 Freemind 就再好不过了。\n\n{% label Q danger %} [你自己的博客](http://hahack.com) 看起来跟这个主题有点不一样呀，为什么？\n\n{% label A success %} 是的。我在开源这个主题前做了些简化。不是所有人都需要我的博客里的一些特性，比如 [Wiki](http://hahack.com/wiki) 页面。\n\n{% label Q danger %} 如何指定某些页面生成 ToC(Table of Contents) ？\n\n{% label A success %} 在[文章头部](https://github.com/wzpan/hexo-theme-freemind#front-matter)添加 `toc: true` 。\n\n{% label Q danger %} 从哪里可以找到你的这几篇文档的 Markdown 源码？\n\n{% label A success %} 在项目的 [source](https://github.com/wzpan/hexo-theme-freemind/tree/source) 分支。\n","slug":"qna-cn","published":1,"updated":"2017-02-15T08:10:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ems003obnavevihi29k","content":"<span class=\"label label-danger\">Q</span> <code>Freemind</code> &#x8FD9;&#x540D;&#x5B57;&#x6709;&#x4F55;&#x542B;&#x4E49;&#xFF1F;<br><br><span class=\"label label-success\">A</span> <code>Freemind</code> &#x547D;&#x540D;&#x51FA;&#x81EA; <a href=\"http://freemind.pluskid.org/\" target=\"_blank\" rel=\"external\">Pluskid</a> &#x7684;&#x535A;&#x5BA2;&#x3002;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x501F;&#x9274;&#x4E86;&#x4ED6;&#x7684;&#x535A;&#x5BA2;&#x7684;&#x5E03;&#x5C40;&#x548C;&#x6837;&#x5F0F;&#x3002;<br><br><span class=\"label label-danger\">Q</span> &#x73B0;&#x5728;&#x90FD;&#x6709;&#x8FD9;&#x4E48;&#x591A; Hexo &#x7684;&#x4E3B;&#x9898;&#x4E86;&#xFF0C;&#x4E3A;&#x5565;&#x53C8;&#x8981;&#x5199;&#x4E00;&#x4E2A;&#xFF1F;<br><br><span class=\"label label-success\">A</span> &#x5B9E;&#x9645;&#x4E0A;&#x6211;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x5728;&#x6211;&#x4F7F;&#x7528; Hexo &#x524D;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#x4E86;&#x3002;&#x6211;&#x5728;&#x534A;&#x5E74;&#x524D;&#x5C06;&#x535A;&#x5BA2;&#x8FC1;&#x79FB;&#x5230; Hexo &#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x5DF2;&#x7ECF;&#x4E60;&#x60EF;&#x4E86;&#x539F;&#x6765;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x987A;&#x4FBF;&#x628A;&#x4E3B;&#x9898;&#x4E5F;&#x79FB;&#x690D;&#x4E86;&#x8FC7;&#x6765;&#x3002;<br><br><a id=\"more\"></a>\n<p><span class=\"label label-danger\">Q</span> &#x4E3A;&#x5565;&#x8FD8;&#x7528; CSS &#x5199;&#x6837;&#x5F0F;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x66F4;&#x9AD8;&#x7AEF;&#x5927;&#x6C14;&#x7684; stylus &#xFF1F;</p>\n<p><span class=\"label label-success\">A</span> &#x55EF;&#xFF0C;stylus &#x7684;&#x786E;&#x5F88;&#x9177;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x4E0D;&#x60F3;&#x518D;&#x628A;&#x4EE5;&#x524D;&#x7684;&#x6837;&#x5F0F;&#x91CD;&#x5199;&#x6210; stylus &#x4E86;&#x3002;&#x6240;&#x4EE5;&#x6682;&#x65F6;&#x5148;&#x4FDD;&#x7559;&#x539F;&#x6765;&#x7684; CSS&#x3002;</p>\n<p><span class=\"label label-danger\">Q</span> &#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E0D;&#x9519;&#x7528;&#xFF0C;&#x5982;&#x4F55;&#x8D21;&#x732E;&#xFF1F;</p>\n<p><span class=\"label label-success\">A</span> &#x6709;&#x4EBA;&#x559C;&#x6B22;&#x6211;&#x7684;&#x4E1C;&#x897F;&#x6211;&#x5C31;&#x5F88;&#x9AD8;&#x5174;&#x54AF;&#x3002;&#x5982;&#x679C;&#x60F3;&#x505A;&#x51FA;&#x8D21;&#x732E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#xFF1A;</p>\n<ul>\n<li>&#x4E3A;&#x672C;&#x4E3B;&#x9898;&#x7684; <a href=\"https://github.com/wzpan/hexo-theme-freemind\" target=\"_blank\" rel=\"external\">Github &#x9879;&#x76EE;</a> &#x52A0;&#x9897;&#x661F;&#xFF1B;</li>\n<li>Fork &#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x5C3D;&#x60C5;DIY&#xFF0C;&#x7136;&#x540E;&#x7ED9;&#x6211;&#x53D1; pull request;</li>\n<li>&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x9075;&#x5FAA; MIT &#x5F00;&#x6E90;&#x534F;&#x8BAE;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x4E3B;&#x9898;&#x57FA;&#x7840;&#x4E0A;&#x521B;&#x5EFA;&#x4F60;&#x7684;&#x4E3B;&#x9898;&#x3002;&#x4E0D;&#x8FC7;&#x5982;&#x679C;&#x4F60;&#x80FD;&#x5728;&#x4F60;&#x7684;&#x4E3B;&#x9898;&#x9875;&#x9762;&#x4E2D;&#x58F0;&#x660E;&#x4E3B;&#x9898;&#x57FA;&#x4E8E; Freemind &#x5C31;&#x518D;&#x597D;&#x4E0D;&#x8FC7;&#x4E86;&#x3002;</li>\n</ul>\n<p><span class=\"label label-danger\">Q</span> <a href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;</a> &#x770B;&#x8D77;&#x6765;&#x8DDF;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x6709;&#x70B9;&#x4E0D;&#x4E00;&#x6837;&#x5440;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;</p>\n<p><span class=\"label label-success\">A</span> &#x662F;&#x7684;&#x3002;&#x6211;&#x5728;&#x5F00;&#x6E90;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x524D;&#x505A;&#x4E86;&#x4E9B;&#x7B80;&#x5316;&#x3002;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x9700;&#x8981;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x91CC;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x6027;&#xFF0C;&#x6BD4;&#x5982; <a href=\"http://hahack.com/wiki\" target=\"_blank\" rel=\"external\">Wiki</a> &#x9875;&#x9762;&#x3002;</p>\n<p><span class=\"label label-danger\">Q</span> &#x5982;&#x4F55;&#x6307;&#x5B9A;&#x67D0;&#x4E9B;&#x9875;&#x9762;&#x751F;&#x6210; ToC(Table of Contents) &#xFF1F;</p>\n<p><span class=\"label label-success\">A</span> &#x5728;<a href=\"https://github.com/wzpan/hexo-theme-freemind#front-matter\" target=\"_blank\" rel=\"external\">&#x6587;&#x7AE0;&#x5934;&#x90E8;</a>&#x6DFB;&#x52A0; <code>toc: true</code> &#x3002;</p>\n<p><span class=\"label label-danger\">Q</span> &#x4ECE;&#x54EA;&#x91CC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x4F60;&#x7684;&#x8FD9;&#x51E0;&#x7BC7;&#x6587;&#x6863;&#x7684; Markdown &#x6E90;&#x7801;&#xFF1F;</p>\n<p><span class=\"label label-success\">A</span> &#x5728;&#x9879;&#x76EE;&#x7684; <a href=\"https://github.com/wzpan/hexo-theme-freemind/tree/source\" target=\"_blank\" rel=\"external\">source</a> &#x5206;&#x652F;&#x3002;</p>\n","excerpt":"<span class=\"label label-danger\">Q</span> <code>Freemind</code> 这名字有何含义？<br><br><span class=\"label label-success\">A</span> <code>Freemind</code> 命名出自 <a href=\"http://freemind.pluskid.org/\">Pluskid</a> 的博客。这个主题很大程度借鉴了他的博客的布局和样式。<br><br><span class=\"label label-danger\">Q</span> 现在都有这么多 Hexo 的主题了，为啥又要写一个？<br><br><span class=\"label label-success\">A</span> 实际上我这个主题在我使用 Hexo 前已经创建了。我在半年前将博客迁移到 Hexo ，因为我已经习惯了原来的主题，所以顺便把主题也移植了过来。<br><br>","more":"<p><span class=\"label label-danger\">Q</span> 为啥还用 CSS 写样式，而不用更高端大气的 stylus ？</p>\n<p><span class=\"label label-success\">A</span> 嗯，stylus 的确很酷。不过我不想再把以前的样式重写成 stylus 了。所以暂时先保留原来的 CSS。</p>\n<p><span class=\"label label-danger\">Q</span> 你的博客不错用，如何贡献？</p>\n<p><span class=\"label label-success\">A</span> 有人喜欢我的东西我就很高兴咯。如果想做出贡献，你可以：</p>\n<ul>\n<li>为本主题的 <a href=\"https://github.com/wzpan/hexo-theme-freemind\">Github 项目</a> 加颗星；</li>\n<li>Fork 这个项目，尽情DIY，然后给我发 pull request;</li>\n<li>这个项目遵循 MIT 开源协议，你可以在本主题基础上创建你的主题。不过如果你能在你的主题页面中声明主题基于 Freemind 就再好不过了。</li>\n</ul>\n<p><span class=\"label label-danger\">Q</span> <a href=\"http://hahack.com\">你自己的博客</a> 看起来跟这个主题有点不一样呀，为什么？</p>\n<p><span class=\"label label-success\">A</span> 是的。我在开源这个主题前做了些简化。不是所有人都需要我的博客里的一些特性，比如 <a href=\"http://hahack.com/wiki\">Wiki</a> 页面。</p>\n<p><span class=\"label label-danger\">Q</span> 如何指定某些页面生成 ToC(Table of Contents) ？</p>\n<p><span class=\"label label-success\">A</span> 在<a href=\"https://github.com/wzpan/hexo-theme-freemind#front-matter\">文章头部</a>添加 <code>toc: true</code> 。</p>\n<p><span class=\"label label-danger\">Q</span> 从哪里可以找到你的这几篇文档的 Markdown 源码？</p>\n<p><span class=\"label label-success\">A</span> 在项目的 <a href=\"https://github.com/wzpan/hexo-theme-freemind/tree/source\">source</a> 分支。</p>"},{"title":"gradel2maven","date":"2019-09-04T08:57:07.000Z","_content":"# get pom.xml file from project built by gradle\n[参考文档](https://www.cnblogs.com/chenhui7373/p/8598337.html)\n\n\n","source":"_posts/gradel2maven.md","raw":"---\ntitle: gradel2maven\ndate: 2019-09-04 16:57:07\ntags: maven gradle\n---\n# get pom.xml file from project built by gradle\n[参考文档](https://www.cnblogs.com/chenhui7373/p/8598337.html)\n\n\n","slug":"gradel2maven","published":1,"updated":"2019-09-04T08:58:39.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emt003sbnavt7g702b2","content":"<h1 id=\"get-pom-xml-file-from-project-built-by-gradle\"><a href=\"#get-pom-xml-file-from-project-built-by-gradle\" class=\"headerlink\" title=\"get pom.xml file from project built by gradle\"></a>get pom.xml file from project built by gradle</h1><p><a href=\"https://www.cnblogs.com/chenhui7373/p/8598337.html\" target=\"_blank\" rel=\"external\">&#x53C2;&#x8003;&#x6587;&#x6863;</a></p>\n","excerpt":"","more":"<h1 id=\"get-pom-xml-file-from-project-built-by-gradle\"><a href=\"#get-pom-xml-file-from-project-built-by-gradle\" class=\"headerlink\" title=\"get pom.xml file from project built by gradle\"></a>get pom.xml file from project built by gradle</h1><p><a href=\"https://www.cnblogs.com/chenhui7373/p/8598337.html\">参考文档</a></p>\n"},{"title":"Questions and Answers","date":"2014-03-16T10:17:16.000Z","description":"Frequently asked questions and my answers.","feature":"/hexo-theme-freemind/images/qna/qna.jpg","_content":"\n{% label Q danger %} What does `Freemind` stands for?\n\n{% label A success %} `Freemind` is named after [Pluskid's blog](http://freemind.pluskid.org/). This theme is greatly inspired by his blog layouts and stylesheets.\n\n{% label Q danger %} There're already so many themes for Hexo. Why create this one?\n\n{% label A success %} In fact I created this theme before I turned to use Hexo. I switched to Hexo about half an year ago, including my theme, since I have already got used to it and don't wanna change it for now.\n\n<!-- more -->\n\n{% label Q danger %} Why use raw CSS stylesheets instead of more fashionable stylus?\n\n{% label A success %} Yes, stylus is cool. But I don't want to wrote my stylesheets again in stylus. So let's just keep them.\n\n{% label Q danger %} I love your theme. How to contribute?\n\n{% label A success %} Great that you love it. To devote your contribution, you can:\n\n* Star its [Github project](https://github.com/wzpan/hexo-theme-freemind);\n* Fork this project, make your change, and then send me your pull request;\n* Since it is public under MIT license, you can make your own theme based on mine. But it will be nicer if you claimed that your work is based on mine in your theme project page.\n\n{% label Q danger %} [Your blog](http://hahack.com) looks a little different to this theme. Why such difference?\n\n{% label A success %} Yes. I modified the theme a little bit as I open sourced this theme. I actually did some simplification *e.g.* I removed the whole [Wiki](http://hahack.com/wiki) page because I don't think that everybody need this.\n\n{% label Q danger %} How to generate ToC(Table of Contents) in a certain page?\n\n{% label A success %} Add `toc: true` in the [front-matter](https://github.com/wzpan/hexo-theme-freemind#front-matter).\n\n{% label Q danger %} Where can I find your markdown source files of these docs?\n\n{% label A success %} In the [source](https://github.com/wzpan/hexo-theme-freemind/tree/source) branch.\n","source":"_posts/qna.md","raw":"title: \"Questions and Answers\"\ndate: \"2014-03-16 18:17:16\"\ntags: Q&A\ncategories: Docs\ndescription: \"Frequently asked questions and my answers.\"\nfeature: /hexo-theme-freemind/images/qna/qna.jpg\n---\n\n{% label Q danger %} What does `Freemind` stands for?\n\n{% label A success %} `Freemind` is named after [Pluskid's blog](http://freemind.pluskid.org/). This theme is greatly inspired by his blog layouts and stylesheets.\n\n{% label Q danger %} There're already so many themes for Hexo. Why create this one?\n\n{% label A success %} In fact I created this theme before I turned to use Hexo. I switched to Hexo about half an year ago, including my theme, since I have already got used to it and don't wanna change it for now.\n\n<!-- more -->\n\n{% label Q danger %} Why use raw CSS stylesheets instead of more fashionable stylus?\n\n{% label A success %} Yes, stylus is cool. But I don't want to wrote my stylesheets again in stylus. So let's just keep them.\n\n{% label Q danger %} I love your theme. How to contribute?\n\n{% label A success %} Great that you love it. To devote your contribution, you can:\n\n* Star its [Github project](https://github.com/wzpan/hexo-theme-freemind);\n* Fork this project, make your change, and then send me your pull request;\n* Since it is public under MIT license, you can make your own theme based on mine. But it will be nicer if you claimed that your work is based on mine in your theme project page.\n\n{% label Q danger %} [Your blog](http://hahack.com) looks a little different to this theme. Why such difference?\n\n{% label A success %} Yes. I modified the theme a little bit as I open sourced this theme. I actually did some simplification *e.g.* I removed the whole [Wiki](http://hahack.com/wiki) page because I don't think that everybody need this.\n\n{% label Q danger %} How to generate ToC(Table of Contents) in a certain page?\n\n{% label A success %} Add `toc: true` in the [front-matter](https://github.com/wzpan/hexo-theme-freemind#front-matter).\n\n{% label Q danger %} Where can I find your markdown source files of these docs?\n\n{% label A success %} In the [source](https://github.com/wzpan/hexo-theme-freemind/tree/source) branch.\n","slug":"qna","published":1,"updated":"2017-02-15T08:10:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emu003vbnavxfbdmluq","content":"<span class=\"label label-danger\">Q</span> What does <code>Freemind</code> stands for?<br><br><span class=\"label label-success\">A</span> <code>Freemind</code> is named after <a href=\"http://freemind.pluskid.org/\" target=\"_blank\" rel=\"external\">Pluskid&#x2019;s blog</a>. This theme is greatly inspired by his blog layouts and stylesheets.<br><br><span class=\"label label-danger\">Q</span> There&#x2019;re already so many themes for Hexo. Why create this one?<br><br><span class=\"label label-success\">A</span> In fact I created this theme before I turned to use Hexo. I switched to Hexo about half an year ago, including my theme, since I have already got used to it and don&#x2019;t wanna change it for now.<br><br><a id=\"more\"></a>\n<p><span class=\"label label-danger\">Q</span> Why use raw CSS stylesheets instead of more fashionable stylus?</p>\n<p><span class=\"label label-success\">A</span> Yes, stylus is cool. But I don&#x2019;t want to wrote my stylesheets again in stylus. So let&#x2019;s just keep them.</p>\n<p><span class=\"label label-danger\">Q</span> I love your theme. How to contribute?</p>\n<p><span class=\"label label-success\">A</span> Great that you love it. To devote your contribution, you can:</p>\n<ul>\n<li>Star its <a href=\"https://github.com/wzpan/hexo-theme-freemind\" target=\"_blank\" rel=\"external\">Github project</a>;</li>\n<li>Fork this project, make your change, and then send me your pull request;</li>\n<li>Since it is public under MIT license, you can make your own theme based on mine. But it will be nicer if you claimed that your work is based on mine in your theme project page.</li>\n</ul>\n<p><span class=\"label label-danger\">Q</span> <a href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">Your blog</a> looks a little different to this theme. Why such difference?</p>\n<p><span class=\"label label-success\">A</span> Yes. I modified the theme a little bit as I open sourced this theme. I actually did some simplification <em>e.g.</em> I removed the whole <a href=\"http://hahack.com/wiki\" target=\"_blank\" rel=\"external\">Wiki</a> page because I don&#x2019;t think that everybody need this.</p>\n<p><span class=\"label label-danger\">Q</span> How to generate ToC(Table of Contents) in a certain page?</p>\n<p><span class=\"label label-success\">A</span> Add <code>toc: true</code> in the <a href=\"https://github.com/wzpan/hexo-theme-freemind#front-matter\" target=\"_blank\" rel=\"external\">front-matter</a>.</p>\n<p><span class=\"label label-danger\">Q</span> Where can I find your markdown source files of these docs?</p>\n<p><span class=\"label label-success\">A</span> In the <a href=\"https://github.com/wzpan/hexo-theme-freemind/tree/source\" target=\"_blank\" rel=\"external\">source</a> branch.</p>\n","excerpt":"<span class=\"label label-danger\">Q</span> What does <code>Freemind</code> stands for?<br><br><span class=\"label label-success\">A</span> <code>Freemind</code> is named after <a href=\"http://freemind.pluskid.org/\">Pluskid’s blog</a>. This theme is greatly inspired by his blog layouts and stylesheets.<br><br><span class=\"label label-danger\">Q</span> There’re already so many themes for Hexo. Why create this one?<br><br><span class=\"label label-success\">A</span> In fact I created this theme before I turned to use Hexo. I switched to Hexo about half an year ago, including my theme, since I have already got used to it and don’t wanna change it for now.<br><br>","more":"<p><span class=\"label label-danger\">Q</span> Why use raw CSS stylesheets instead of more fashionable stylus?</p>\n<p><span class=\"label label-success\">A</span> Yes, stylus is cool. But I don’t want to wrote my stylesheets again in stylus. So let’s just keep them.</p>\n<p><span class=\"label label-danger\">Q</span> I love your theme. How to contribute?</p>\n<p><span class=\"label label-success\">A</span> Great that you love it. To devote your contribution, you can:</p>\n<ul>\n<li>Star its <a href=\"https://github.com/wzpan/hexo-theme-freemind\">Github project</a>;</li>\n<li>Fork this project, make your change, and then send me your pull request;</li>\n<li>Since it is public under MIT license, you can make your own theme based on mine. But it will be nicer if you claimed that your work is based on mine in your theme project page.</li>\n</ul>\n<p><span class=\"label label-danger\">Q</span> <a href=\"http://hahack.com\">Your blog</a> looks a little different to this theme. Why such difference?</p>\n<p><span class=\"label label-success\">A</span> Yes. I modified the theme a little bit as I open sourced this theme. I actually did some simplification <em>e.g.</em> I removed the whole <a href=\"http://hahack.com/wiki\">Wiki</a> page because I don’t think that everybody need this.</p>\n<p><span class=\"label label-danger\">Q</span> How to generate ToC(Table of Contents) in a certain page?</p>\n<p><span class=\"label label-success\">A</span> Add <code>toc: true</code> in the <a href=\"https://github.com/wzpan/hexo-theme-freemind#front-matter\">front-matter</a>.</p>\n<p><span class=\"label label-danger\">Q</span> Where can I find your markdown source files of these docs?</p>\n<p><span class=\"label label-success\">A</span> In the <a href=\"https://github.com/wzpan/hexo-theme-freemind/tree/source\">source</a> branch.</p>"},{"title":"save spark rdd into Mysql","date":"2016-12-05T14:12:19.000Z","toc":true,"_content":"\n```\nimport java.util.Properties\nval target_df = targetRdd.toDF()\nval prop = new Properties()\nprop.put(\"user\", \"username\")\nprop.put(\"password\", \"password\")\nret_df.write.mode(\"append\").jdbc(\"jdbc:mysql://host:port/database\",\"table\",prop)\n```\n\n","source":"_posts/save-spark-rdd-into-Mysql.md","raw":"---\ntitle: save spark rdd into Mysql\ndate: 2016-12-05 22:12:19\ntags:\ncategories: Spark\ntoc: true\n---\n\n```\nimport java.util.Properties\nval target_df = targetRdd.toDF()\nval prop = new Properties()\nprop.put(\"user\", \"username\")\nprop.put(\"password\", \"password\")\nret_df.write.mode(\"append\").jdbc(\"jdbc:mysql://host:port/database\",\"table\",prop)\n```\n\n","slug":"save-spark-rdd-into-Mysql","published":1,"updated":"2017-02-15T08:08:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emv003xbnavou4p60uv","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Properties</div><div class=\"line\">val target_df = targetRdd.toDF()</div><div class=\"line\">val prop = new Properties()</div><div class=\"line\">prop.put(&quot;user&quot;, &quot;username&quot;)</div><div class=\"line\">prop.put(&quot;password&quot;, &quot;password&quot;)</div><div class=\"line\">ret_df.write.mode(&quot;append&quot;).jdbc(&quot;jdbc:mysql://host:port/database&quot;,&quot;table&quot;,prop)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">import java.util.Properties</div><div class=\"line\">val target_df = targetRdd.toDF()</div><div class=\"line\">val prop = new Properties()</div><div class=\"line\">prop.put(&quot;user&quot;, &quot;username&quot;)</div><div class=\"line\">prop.put(&quot;password&quot;, &quot;password&quot;)</div><div class=\"line\">ret_df.write.mode(&quot;append&quot;).jdbc(&quot;jdbc:mysql://host:port/database&quot;,&quot;table&quot;,prop)</div></pre></td></tr></table></figure>\n"},{"title":"简体中文测试","date":"2013-12-25T12:17:16.000Z","feature":"/hexo-theme-freemind/images/xinjing/pusa2.jpg","description":"观音心经 - 般若波罗蜜多心经。","_content":"\n观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。\n\n舍利子，色不异空，空不异色；色即是空，空即是色。受、想、行、识，亦复如是。\n\n舍利子，是诸法空相，不生不灭，不垢不净，不增不减，是故空中无色，无受、想、行、识；无眼、耳、鼻、舌、身、意；无色、声、香、味、触、法；无眼界，乃至无意识界；无无明，亦无无明尽；乃至无老死，亦无老死尽。无苦、集、灭、道，无智亦无得，以无所得故。\n\n菩提萨埵(`duǒ`)，依般若波罗蜜多故，心无罣碍(`guà ài`)。无罣碍，故无有恐怖，远离颠倒梦想，究竟涅盘。三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。<!-- more -->\n\n故知般若波罗蜜多，大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。\n\n故说般若波罗蜜多咒， 即说咒曰，\n\n> 揭谛揭谛 波罗揭谛 波罗僧揭谛 菩提萨婆诃\n","source":"_posts/simplified-chinese-test.md","raw":"title: 简体中文测试\ndate: \"2013-12-25 20:17:16\"\ntags: 简体\ncategories: Test\nfeature: /hexo-theme-freemind/images/xinjing/pusa2.jpg\ndescription: \"观音心经 - 般若波罗蜜多心经。\"\n---\n\n观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。\n\n舍利子，色不异空，空不异色；色即是空，空即是色。受、想、行、识，亦复如是。\n\n舍利子，是诸法空相，不生不灭，不垢不净，不增不减，是故空中无色，无受、想、行、识；无眼、耳、鼻、舌、身、意；无色、声、香、味、触、法；无眼界，乃至无意识界；无无明，亦无无明尽；乃至无老死，亦无老死尽。无苦、集、灭、道，无智亦无得，以无所得故。\n\n菩提萨埵(`duǒ`)，依般若波罗蜜多故，心无罣碍(`guà ài`)。无罣碍，故无有恐怖，远离颠倒梦想，究竟涅盘。三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。<!-- more -->\n\n故知般若波罗蜜多，大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。\n\n故说般若波罗蜜多咒， 即说咒曰，\n\n> 揭谛揭谛 波罗揭谛 波罗僧揭谛 菩提萨婆诃\n","slug":"simplified-chinese-test","published":1,"updated":"2017-02-14T05:42:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emw0040bnav7w4g2uh9","content":"<p>&#x89C2;&#x81EA;&#x5728;&#x83E9;&#x8428;&#xFF0C;&#x884C;&#x6DF1;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x65F6;&#xFF0C;&#x7167;&#x89C1;&#x4E94;&#x8574;&#x7686;&#x7A7A;&#xFF0C;&#x5EA6;&#x4E00;&#x5207;&#x82E6;&#x5384;&#x3002;</p>\n<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x8272;&#x4E0D;&#x5F02;&#x7A7A;&#xFF0C;&#x7A7A;&#x4E0D;&#x5F02;&#x8272;&#xFF1B;&#x8272;&#x5373;&#x662F;&#x7A7A;&#xFF0C;&#x7A7A;&#x5373;&#x662F;&#x8272;&#x3002;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8BC6;&#xFF0C;&#x4EA6;&#x590D;&#x5982;&#x662F;&#x3002;</p>\n<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x662F;&#x8BF8;&#x6CD5;&#x7A7A;&#x76F8;&#xFF0C;&#x4E0D;&#x751F;&#x4E0D;&#x706D;&#xFF0C;&#x4E0D;&#x57A2;&#x4E0D;&#x51C0;&#xFF0C;&#x4E0D;&#x589E;&#x4E0D;&#x51CF;&#xFF0C;&#x662F;&#x6545;&#x7A7A;&#x4E2D;&#x65E0;&#x8272;&#xFF0C;&#x65E0;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8BC6;&#xFF1B;&#x65E0;&#x773C;&#x3001;&#x8033;&#x3001;&#x9F3B;&#x3001;&#x820C;&#x3001;&#x8EAB;&#x3001;&#x610F;&#xFF1B;&#x65E0;&#x8272;&#x3001;&#x58F0;&#x3001;&#x9999;&#x3001;&#x5473;&#x3001;&#x89E6;&#x3001;&#x6CD5;&#xFF1B;&#x65E0;&#x773C;&#x754C;&#xFF0C;&#x4E43;&#x81F3;&#x65E0;&#x610F;&#x8BC6;&#x754C;&#xFF1B;&#x65E0;&#x65E0;&#x660E;&#xFF0C;&#x4EA6;&#x65E0;&#x65E0;&#x660E;&#x5C3D;&#xFF1B;&#x4E43;&#x81F3;&#x65E0;&#x8001;&#x6B7B;&#xFF0C;&#x4EA6;&#x65E0;&#x8001;&#x6B7B;&#x5C3D;&#x3002;&#x65E0;&#x82E6;&#x3001;&#x96C6;&#x3001;&#x706D;&#x3001;&#x9053;&#xFF0C;&#x65E0;&#x667A;&#x4EA6;&#x65E0;&#x5F97;&#xFF0C;&#x4EE5;&#x65E0;&#x6240;&#x5F97;&#x6545;&#x3002;</p>\n<p>&#x83E9;&#x63D0;&#x8428;&#x57F5;(<code>du&#x1D2;</code>)&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5FC3;&#x65E0;&#x7F63;&#x788D;(<code>gu&#xE0; &#xE0;i</code>)&#x3002;&#x65E0;&#x7F63;&#x788D;&#xFF0C;&#x6545;&#x65E0;&#x6709;&#x6050;&#x6016;&#xFF0C;&#x8FDC;&#x79BB;&#x98A0;&#x5012;&#x68A6;&#x60F3;&#xFF0C;&#x7A76;&#x7ADF;&#x6D85;&#x76D8;&#x3002;&#x4E09;&#x4E16;&#x8BF8;&#x4F5B;&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5F97;&#x963F;&#x8028;&#x591A;&#x7F57;&#x4E09;&#x85D0;&#x4E09;&#x83E9;&#x63D0;&#x3002;<a id=\"more\"></a></p>\n<p>&#x6545;&#x77E5;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#xFF0C;&#x5927;&#x795E;&#x5492;&#xFF0C;&#x662F;&#x5927;&#x660E;&#x5492;&#xFF0C;&#x662F;&#x65E0;&#x4E0A;&#x5492;&#xFF0C;&#x662F;&#x65E0;&#x7B49;&#x7B49;&#x5492;&#xFF0C;&#x80FD;&#x9664;&#x4E00;&#x5207;&#x82E6;&#xFF0C;&#x771F;&#x5B9E;&#x4E0D;&#x865A;&#x3002;</p>\n<p>&#x6545;&#x8BF4;&#x822C;&#x82E5;&#x6CE2;&#x7F57;&#x871C;&#x591A;&#x5492;&#xFF0C; &#x5373;&#x8BF4;&#x5492;&#x66F0;&#xFF0C;</p>\n<blockquote>\n<p>&#x63ED;&#x8C1B;&#x63ED;&#x8C1B; &#x6CE2;&#x7F57;&#x63ED;&#x8C1B; &#x6CE2;&#x7F57;&#x50E7;&#x63ED;&#x8C1B; &#x83E9;&#x63D0;&#x8428;&#x5A46;&#x8BC3;</p>\n</blockquote>\n","excerpt":"<p>观自在菩萨，行深般若波罗蜜多时，照见五蕴皆空，度一切苦厄。</p>\n<p>舍利子，色不异空，空不异色；色即是空，空即是色。受、想、行、识，亦复如是。</p>\n<p>舍利子，是诸法空相，不生不灭，不垢不净，不增不减，是故空中无色，无受、想、行、识；无眼、耳、鼻、舌、身、意；无色、声、香、味、触、法；无眼界，乃至无意识界；无无明，亦无无明尽；乃至无老死，亦无老死尽。无苦、集、灭、道，无智亦无得，以无所得故。</p>\n<p>菩提萨埵(<code>duǒ</code>)，依般若波罗蜜多故，心无罣碍(<code>guà ài</code>)。无罣碍，故无有恐怖，远离颠倒梦想，究竟涅盘。三世诸佛，依般若波罗蜜多故，得阿耨多罗三藐三菩提。","more":"</p>\n<p>故知般若波罗蜜多，大神咒，是大明咒，是无上咒，是无等等咒，能除一切苦，真实不虚。</p>\n<p>故说般若波罗蜜多咒， 即说咒曰，</p>\n<blockquote>\n<p>揭谛揭谛 波罗揭谛 波罗僧揭谛 菩提萨婆诃</p>\n</blockquote>"},{"title":"scala隐式转换","date":"2017-09-08T08:27:10.000Z","_content":"# SCALA 隐式转换\n\n","source":"_posts/scala隐式转换.md","raw":"---\ntitle: scala隐式转换\ndate: 2017-09-08 16:27:10\ntags: scala\n---\n# SCALA 隐式转换\n\n","slug":"scala隐式转换","published":1,"updated":"2017-09-08T08:27:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emx0043bnav2510exq6","content":"<h1 id=\"SCALA-&#x9690;&#x5F0F;&#x8F6C;&#x6362;\"><a href=\"#SCALA-&#x9690;&#x5F0F;&#x8F6C;&#x6362;\" class=\"headerlink\" title=\"SCALA &#x9690;&#x5F0F;&#x8F6C;&#x6362;\"></a>SCALA &#x9690;&#x5F0F;&#x8F6C;&#x6362;</h1>","excerpt":"","more":"<h1 id=\"SCALA-隐式转换\"><a href=\"#SCALA-隐式转换\" class=\"headerlink\" title=\"SCALA 隐式转换\"></a>SCALA 隐式转换</h1>"},{"title":"SpringLearn","date":"2020-05-07T06:23:46.000Z","_content":"\n## 手动构造XMLBeanFactory \n\n```\npublic static void main(String[] args) {\n    ClassPathResource classPathResource = new ClassPathResource(\"spring.xml\");\n    XmlBeanFactory xmlBeanFactory = new XmlBeanFactory(classPathResource);\n    Hello bean = xmlBeanFactory.getBean(Hello.class);\n    bean.sayHello();\n}\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    <bean id=\"myDao\" class=\"com.example.restservice.impl.MyDaoImpl\"/>\n    <bean id=\"hello\" class=\"com.example.restservice.mypojo.HelloImpl\"/>\n</beans>\n\n\n\n\n```\norg.springframework.context.support.FileSystemXmlApplicationContext#FileSystemXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)\norg.springframework.context.support.AbstractApplicationContext#refresh\n```\n","source":"_posts/SpringLearn.md","raw":"---\ntitle: SpringLearn\ndate: 2020-05-07 14:23:46\ntags: Spring\n---\n\n## 手动构造XMLBeanFactory \n\n```\npublic static void main(String[] args) {\n    ClassPathResource classPathResource = new ClassPathResource(\"spring.xml\");\n    XmlBeanFactory xmlBeanFactory = new XmlBeanFactory(classPathResource);\n    Hello bean = xmlBeanFactory.getBean(Hello.class);\n    bean.sayHello();\n}\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n    <bean id=\"myDao\" class=\"com.example.restservice.impl.MyDaoImpl\"/>\n    <bean id=\"hello\" class=\"com.example.restservice.mypojo.HelloImpl\"/>\n</beans>\n\n\n\n\n```\norg.springframework.context.support.FileSystemXmlApplicationContext#FileSystemXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)\norg.springframework.context.support.AbstractApplicationContext#refresh\n```\n","slug":"SpringLearn","published":1,"updated":"2020-05-08T12:17:53.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1emz0047bnav8oezmkw7","content":"<h2 id=\"&#x624B;&#x52A8;&#x6784;&#x9020;XMLBeanFactory\"><a href=\"#&#x624B;&#x52A8;&#x6784;&#x9020;XMLBeanFactory\" class=\"headerlink\" title=\"&#x624B;&#x52A8;&#x6784;&#x9020;XMLBeanFactory\"></a>&#x624B;&#x52A8;&#x6784;&#x9020;XMLBeanFactory</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void main(String[] args) {</div><div class=\"line\">    ClassPathResource classPathResource = new ClassPathResource(&quot;spring.xml&quot;);</div><div class=\"line\">    XmlBeanFactory xmlBeanFactory = new XmlBeanFactory(classPathResource);</div><div class=\"line\">    Hello bean = xmlBeanFactory.getBean(Hello.class);</div><div class=\"line\">    bean.sayHello();</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n<p>&lt;?xml version=&#x201D;1.0&#x201D; encoding=&#x201D;UTF-8&#x201D;?&gt;</p>\n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemalocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"><br>    <bean id=\"myDao\" class=\"com.example.restservice.impl.MyDaoImpl\"><br>    <bean id=\"hello\" class=\"com.example.restservice.mypojo.HelloImpl\"><br></bean></bean></beans>\n\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.context.support.FileSystemXmlApplicationContext#FileSystemXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)</div><div class=\"line\">org.springframework.context.support.AbstractApplicationContext#refresh</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"手动构造XMLBeanFactory\"><a href=\"#手动构造XMLBeanFactory\" class=\"headerlink\" title=\"手动构造XMLBeanFactory\"></a>手动构造XMLBeanFactory</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void main(String[] args) &#123;</div><div class=\"line\">    ClassPathResource classPathResource = new ClassPathResource(&quot;spring.xml&quot;);</div><div class=\"line\">    XmlBeanFactory xmlBeanFactory = new XmlBeanFactory(classPathResource);</div><div class=\"line\">    Hello bean = xmlBeanFactory.getBean(Hello.class);</div><div class=\"line\">    bean.sayHello();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;</p>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"><br>    <bean id=\"myDao\" class=\"com.example.restservice.impl.MyDaoImpl\"/><br>    <bean id=\"hello\" class=\"com.example.restservice.mypojo.HelloImpl\"/><br></beans>\n\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.context.support.FileSystemXmlApplicationContext#FileSystemXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)</div><div class=\"line\">org.springframework.context.support.AbstractApplicationContext#refresh</div></pre></td></tr></table></figure>\n"},{"title":"reflction_on_data_develop_ahout_4_years","date":"2019-05-30T04:54:31.000Z","_content":"# \n\n#\n\n#\n\n","source":"_posts/reflction-on-data-develop-ahout-4-years.md","raw":"---\ntitle: reflction_on_data_develop_ahout_4_years\ndate: 2019-05-30 12:54:31\ntags: data\n---\n# \n\n#\n\n#\n\n","slug":"reflction-on-data-develop-ahout-4-years","published":1,"updated":"2019-05-30T04:55:05.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en0004abnavw8zdcv2p","content":"<p># </p>\n<p>#</p>\n<p>#</p>\n","excerpt":"","more":"<p># </p>\n<p>#</p>\n<p>#</p>\n"},{"title":"Tag Plugins（中文）","date":"2014-03-16T02:10:16.000Z","description":"Introduce tag plugins in freemind.","feature":"/hexo-theme-freemind/images/tag-plugins/plugins.jpg","toc":true,"_content":"\nFreemind 主题提供了丰富的 tag plugins，以充分利用 Bootstrap 的威力。\n\n在使用这些 tag plugins 之前，你需要先安装 [hexo-tag-bootstrap](https://github.com/wzpan/hexo-tag-bootstrap) 。在你的 Hexo 博客目录，执行下列命令：\n\n```\n$ npm install hexo-tag-bootstrap --save\n```\n\n然后就可以像使用其他 hexo tag plugins 一样使用这些 Bootstrap tag plugins 了。\n\n<!-- more -->\n\n## 文本颜色 ##\n\n插入一段文本，并用特殊的颜色高亮它。\n\n### 语法 ###\n\n```\n{% textcolor [style] %}\n  text string\n{% endtextcolor %}\n```\n\n### 示例 ###\n\n```\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n```\n\n### 结果 ###\n\n{% textcolor muted %}Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.{% endtextcolor %}\n\n{% textcolor primary %}Nullam id dolor id nibh ultricies vehicula ut id elit.{% endtextcolor %}\n\n{% textcolor success %}Duis mollis, est non commodo luctus, nisi erat porttitor ligula.{% endtextcolor %}\n\n{% textcolor info %}Maecenas sed diam eget risus varius blandit sit amet non magna.{% endtextcolor %}\n\n{% textcolor warning %}Etiam porta sem malesuada magna mollis euismod.{% endtextcolor %}\n\n{% textcolor danger %}Donec ullamcorper nulla non metus auctor fringilla.{% endtextcolor %}\n\n## 按钮（Buttons） ##\n\n插入一个按钮，按钮可以带有链接、文本，并可以指定样式。\n\n### 语法 ###\n\n```\n{% btn url text [style] %}\n```\n\n### 示例 ###\n\n```\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n```\n\n### 结果 ###\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n\n## 标签（Labels） ##\n\n插入一个标签，并为其指定文本和样式。\n\n### 语法 ###\n\n```\n{% label text [style] %}\n```\n\n### 示例 ###\n\n```\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n```\n\n### 结果 ###\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n## 徽章（Badges） ##\n\n插入一个徽章，并为其指定文本。\n\n### 语法 ###\n\n```\n{% badge text %}\n```\n\n### 示例 ###\n\n```\n{% badge 42 %}\n```\n\n### 结果 ###\n\n{% badge 42 %}\n\n## 警报（Alerts） ##\n\n插入一段警报文本信息，并为其指定样式。\n\n### 语法 ###\n\n```\n{% alert [style] %}\n   Alert string\n{% endalert %}\n```\n\n### 示例 ###\n\n```\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n```\n\n### 结果 ###\n\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n\n","source":"_posts/tag-plugins-cn.md","raw":"title: \"Tag Plugins（中文）\"\ndate: \"2014-03-16 10:10:16\"\ntags: plugins\ncategories: Docs\ndescription: \"Introduce tag plugins in freemind.\"\nfeature: /hexo-theme-freemind/images/tag-plugins/plugins.jpg\ntoc: true\n---\n\nFreemind 主题提供了丰富的 tag plugins，以充分利用 Bootstrap 的威力。\n\n在使用这些 tag plugins 之前，你需要先安装 [hexo-tag-bootstrap](https://github.com/wzpan/hexo-tag-bootstrap) 。在你的 Hexo 博客目录，执行下列命令：\n\n```\n$ npm install hexo-tag-bootstrap --save\n```\n\n然后就可以像使用其他 hexo tag plugins 一样使用这些 Bootstrap tag plugins 了。\n\n<!-- more -->\n\n## 文本颜色 ##\n\n插入一段文本，并用特殊的颜色高亮它。\n\n### 语法 ###\n\n```\n{% textcolor [style] %}\n  text string\n{% endtextcolor %}\n```\n\n### 示例 ###\n\n```\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n```\n\n### 结果 ###\n\n{% textcolor muted %}Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.{% endtextcolor %}\n\n{% textcolor primary %}Nullam id dolor id nibh ultricies vehicula ut id elit.{% endtextcolor %}\n\n{% textcolor success %}Duis mollis, est non commodo luctus, nisi erat porttitor ligula.{% endtextcolor %}\n\n{% textcolor info %}Maecenas sed diam eget risus varius blandit sit amet non magna.{% endtextcolor %}\n\n{% textcolor warning %}Etiam porta sem malesuada magna mollis euismod.{% endtextcolor %}\n\n{% textcolor danger %}Donec ullamcorper nulla non metus auctor fringilla.{% endtextcolor %}\n\n## 按钮（Buttons） ##\n\n插入一个按钮，按钮可以带有链接、文本，并可以指定样式。\n\n### 语法 ###\n\n```\n{% btn url text [style] %}\n```\n\n### 示例 ###\n\n```\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n```\n\n### 结果 ###\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n\n## 标签（Labels） ##\n\n插入一个标签，并为其指定文本和样式。\n\n### 语法 ###\n\n```\n{% label text [style] %}\n```\n\n### 示例 ###\n\n```\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n```\n\n### 结果 ###\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n## 徽章（Badges） ##\n\n插入一个徽章，并为其指定文本。\n\n### 语法 ###\n\n```\n{% badge text %}\n```\n\n### 示例 ###\n\n```\n{% badge 42 %}\n```\n\n### 结果 ###\n\n{% badge 42 %}\n\n## 警报（Alerts） ##\n\n插入一段警报文本信息，并为其指定样式。\n\n### 语法 ###\n\n```\n{% alert [style] %}\n   Alert string\n{% endalert %}\n```\n\n### 示例 ###\n\n```\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n```\n\n### 结果 ###\n\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n\n","slug":"tag-plugins-cn","published":1,"updated":"2017-02-14T05:42:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en1004cbnav1uobttp4","content":"<p>Freemind &#x4E3B;&#x9898;&#x63D0;&#x4F9B;&#x4E86;&#x4E30;&#x5BCC;&#x7684; tag plugins&#xFF0C;&#x4EE5;&#x5145;&#x5206;&#x5229;&#x7528; Bootstrap &#x7684;&#x5A01;&#x529B;&#x3002;</p>\n<p>&#x5728;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B; tag plugins &#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5148;&#x5B89;&#x88C5; <a href=\"https://github.com/wzpan/hexo-tag-bootstrap\" target=\"_blank\" rel=\"external\">hexo-tag-bootstrap</a> &#x3002;&#x5728;&#x4F60;&#x7684; Hexo &#x535A;&#x5BA2;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;&#x4E0B;&#x5217;&#x547D;&#x4EE4;&#xFF1A;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>\n<p>&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x50CF;&#x4F7F;&#x7528;&#x5176;&#x4ED6; hexo tag plugins &#x4E00;&#x6837;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B; Bootstrap tag plugins &#x4E86;&#x3002;</p>\n<a id=\"more\"></a>\n<h2 id=\"&#x6587;&#x672C;&#x989C;&#x8272;\"><a href=\"#&#x6587;&#x672C;&#x989C;&#x8272;\" class=\"headerlink\" title=\"&#x6587;&#x672C;&#x989C;&#x8272;\"></a>&#x6587;&#x672C;&#x989C;&#x8272;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x6BB5;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x7528;&#x7279;&#x6B8A;&#x7684;&#x989C;&#x8272;&#x9AD8;&#x4EAE;&#x5B83;&#x3002;</p>\n<h3 id=\"&#x8BED;&#x6CD5;\"><a href=\"#&#x8BED;&#x6CD5;\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% textcolor [style] %}</div><div class=\"line\">  text string</div><div class=\"line\">{% endtextcolor %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x793A;&#x4F8B;\"><a href=\"#&#x793A;&#x4F8B;\" class=\"headerlink\" title=\"&#x793A;&#x4F8B;\"></a>&#x793A;&#x4F8B;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% textcolor muted %}</div><div class=\"line\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor primary %}</div><div class=\"line\">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor success %}</div><div class=\"line\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor info %}</div><div class=\"line\">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor warning %}</div><div class=\"line\">Etiam porta sem malesuada magna mollis euismod.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor danger %}</div><div class=\"line\">Donec ullamcorper nulla non metus auctor fringilla.</div><div class=\"line\">{% endtextcolor %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x7ED3;&#x679C;\"><a href=\"#&#x7ED3;&#x679C;\" class=\"headerlink\" title=\"&#x7ED3;&#x679C;\"></a>&#x7ED3;&#x679C;</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<h2 id=\"&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;\"><a href=\"#&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;\" class=\"headerlink\" title=\"&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;\"></a>&#x6309;&#x94AE;&#xFF08;Buttons&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x6309;&#x94AE;&#x53EF;&#x4EE5;&#x5E26;&#x6709;&#x94FE;&#x63A5;&#x3001;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6837;&#x5F0F;&#x3002;</p>\n<h3 id=\"&#x8BED;&#x6CD5;-1\"><a href=\"#&#x8BED;&#x6CD5;-1\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% btn url text [style] %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x793A;&#x4F8B;-1\"><a href=\"#&#x793A;&#x4F8B;-1\" class=\"headerlink\" title=\"&#x793A;&#x4F8B;\"></a>&#x793A;&#x4F8B;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% btn http://hahack.com hahack %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack primary %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack success %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack warning %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack danger %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack info %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x7ED3;&#x679C;-1\"><a href=\"#&#x7ED3;&#x679C;-1\" class=\"headerlink\" title=\"&#x7ED3;&#x679C;\"></a>&#x7ED3;&#x679C;</h3><a class=\"btn btn-default\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<h2 id=\"&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;\"><a href=\"#&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;\" class=\"headerlink\" title=\"&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;\"></a>&#x6807;&#x7B7E;&#xFF08;Labels&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x548C;&#x6837;&#x5F0F;&#x3002;</p>\n<h3 id=\"&#x8BED;&#x6CD5;-2\"><a href=\"#&#x8BED;&#x6CD5;-2\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% label text [style] %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x793A;&#x4F8B;-2\"><a href=\"#&#x793A;&#x4F8B;-2\" class=\"headerlink\" title=\"&#x793A;&#x4F8B;\"></a>&#x793A;&#x4F8B;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% label default %}</div><div class=\"line\"></div><div class=\"line\">{% label warinng warning %}</div><div class=\"line\"></div><div class=\"line\">{% label success success %}</div><div class=\"line\"></div><div class=\"line\">{% label danger danger %}</div><div class=\"line\"></div><div class=\"line\">{% label primary primary %}</div><div class=\"line\"></div><div class=\"line\">{% label info info %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x7ED3;&#x679C;-2\"><a href=\"#&#x7ED3;&#x679C;-2\" class=\"headerlink\" title=\"&#x7ED3;&#x679C;\"></a>&#x7ED3;&#x679C;</h3><span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<h2 id=\"&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;\"><a href=\"#&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;\" class=\"headerlink\" title=\"&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;\"></a>&#x5FBD;&#x7AE0;&#xFF08;Badges&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5FBD;&#x7AE0;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x3002;</p>\n<h3 id=\"&#x8BED;&#x6CD5;-3\"><a href=\"#&#x8BED;&#x6CD5;-3\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% badge text %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x793A;&#x4F8B;-3\"><a href=\"#&#x793A;&#x4F8B;-3\" class=\"headerlink\" title=\"&#x793A;&#x4F8B;\"></a>&#x793A;&#x4F8B;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% badge 42 %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x7ED3;&#x679C;-3\"><a href=\"#&#x7ED3;&#x679C;-3\" class=\"headerlink\" title=\"&#x7ED3;&#x679C;\"></a>&#x7ED3;&#x679C;</h3><span class=\"badge\">42</span>\n<h2 id=\"&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;\"><a href=\"#&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;\" class=\"headerlink\" title=\"&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;\"></a>&#x8B66;&#x62A5;&#xFF08;Alerts&#xFF09;</h2><p>&#x63D2;&#x5165;&#x4E00;&#x6BB5;&#x8B66;&#x62A5;&#x6587;&#x672C;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E3A;&#x5176;&#x6307;&#x5B9A;&#x6837;&#x5F0F;&#x3002;</p>\n<h3 id=\"&#x8BED;&#x6CD5;-4\"><a href=\"#&#x8BED;&#x6CD5;-4\" class=\"headerlink\" title=\"&#x8BED;&#x6CD5;\"></a>&#x8BED;&#x6CD5;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% alert [style] %}</div><div class=\"line\">   Alert string</div><div class=\"line\">{% endalert %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x793A;&#x4F8B;-4\"><a href=\"#&#x793A;&#x4F8B;-4\" class=\"headerlink\" title=\"&#x793A;&#x4F8B;\"></a>&#x793A;&#x4F8B;</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% alert warning %}</div><div class=\"line\">Best check yo self, you&apos;re not looking too good.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert danger %}</div><div class=\"line\">Change a few things up and try submitting again.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert success %}</div><div class=\"line\">You successfully read this important alert message.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert info %}</div><div class=\"line\">This alert needs your attention, but it&apos;s not super important.</div><div class=\"line\">{% endalert %}</div></pre></td></tr></table></figure>\n<h3 id=\"&#x7ED3;&#x679C;-4\"><a href=\"#&#x7ED3;&#x679C;-4\" class=\"headerlink\" title=\"&#x7ED3;&#x679C;\"></a>&#x7ED3;&#x679C;</h3><div class=\"alert alert-warning\"><i class=\"fa fa-bell\"></i>  Best check yo self, you&apos;re not looking too good.</div>\n<div class=\"alert alert-danger\"><i class=\"fa fa-bug\"></i>  Change a few things up and try submitting again.</div>\n<div class=\"alert alert-success\"><i class=\"fa fa-lightbulb-o\"></i>  You successfully read this important alert message.</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  This alert needs your attention, but it&apos;s not super important.</div>\n","excerpt":"<p>Freemind 主题提供了丰富的 tag plugins，以充分利用 Bootstrap 的威力。</p>\n<p>在使用这些 tag plugins 之前，你需要先安装 <a href=\"https://github.com/wzpan/hexo-tag-bootstrap\">hexo-tag-bootstrap</a> 。在你的 Hexo 博客目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>\n<p>然后就可以像使用其他 hexo tag plugins 一样使用这些 Bootstrap tag plugins 了。</p>","more":"<h2 id=\"文本颜色\"><a href=\"#文本颜色\" class=\"headerlink\" title=\"文本颜色\"></a>文本颜色</h2><p>插入一段文本，并用特殊的颜色高亮它。</p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% textcolor [style] %&#125;</div><div class=\"line\">  text string</div><div class=\"line\">&#123;% endtextcolor %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% textcolor muted %&#125;</div><div class=\"line\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor primary %&#125;</div><div class=\"line\">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor success %&#125;</div><div class=\"line\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor info %&#125;</div><div class=\"line\">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor warning %&#125;</div><div class=\"line\">Etiam porta sem malesuada magna mollis euismod.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor danger %&#125;</div><div class=\"line\">Donec ullamcorper nulla non metus auctor fringilla.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<h2 id=\"按钮（Buttons）\"><a href=\"#按钮（Buttons）\" class=\"headerlink\" title=\"按钮（Buttons）\"></a>按钮（Buttons）</h2><p>插入一个按钮，按钮可以带有链接、文本，并可以指定样式。</p>\n<h3 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% btn url text [style] %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% btn http://hahack.com hahack %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack primary %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack success %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack warning %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack danger %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack info %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"结果-1\"><a href=\"#结果-1\" class=\"headerlink\" title=\"结果\"></a>结果</h3><a class=\"btn btn-default\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://hahack.com\">hahack</a>\n<h2 id=\"标签（Labels）\"><a href=\"#标签（Labels）\" class=\"headerlink\" title=\"标签（Labels）\"></a>标签（Labels）</h2><p>插入一个标签，并为其指定文本和样式。</p>\n<h3 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% label text [style] %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% label default %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label warinng warning %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label success success %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label danger danger %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label primary primary %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label info info %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"结果-2\"><a href=\"#结果-2\" class=\"headerlink\" title=\"结果\"></a>结果</h3><span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<h2 id=\"徽章（Badges）\"><a href=\"#徽章（Badges）\" class=\"headerlink\" title=\"徽章（Badges）\"></a>徽章（Badges）</h2><p>插入一个徽章，并为其指定文本。</p>\n<h3 id=\"语法-3\"><a href=\"#语法-3\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% badge text %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% badge 42 %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"结果-3\"><a href=\"#结果-3\" class=\"headerlink\" title=\"结果\"></a>结果</h3><span class=\"badge\">42</span>\n<h2 id=\"警报（Alerts）\"><a href=\"#警报（Alerts）\" class=\"headerlink\" title=\"警报（Alerts）\"></a>警报（Alerts）</h2><p>插入一段警报文本信息，并为其指定样式。</p>\n<h3 id=\"语法-4\"><a href=\"#语法-4\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% alert [style] %&#125;</div><div class=\"line\">   Alert string</div><div class=\"line\">&#123;% endalert %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"示例-4\"><a href=\"#示例-4\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% alert warning %&#125;</div><div class=\"line\">Best check yo self, you&apos;re not looking too good.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert danger %&#125;</div><div class=\"line\">Change a few things up and try submitting again.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert success %&#125;</div><div class=\"line\">You successfully read this important alert message.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert info %&#125;</div><div class=\"line\">This alert needs your attention, but it&apos;s not super important.</div><div class=\"line\">&#123;% endalert %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"结果-4\"><a href=\"#结果-4\" class=\"headerlink\" title=\"结果\"></a>结果</h3><div class=\"alert alert-warning\"><i class=\"fa fa-bell\"></i>  Best check yo self, you're not looking too good.</div>\n<div class=\"alert alert-danger\"><i class=\"fa fa-bug\"></i>  Change a few things up and try submitting again.</div>\n<div class=\"alert alert-success\"><i class=\"fa fa-lightbulb-o\"></i>  You successfully read this important alert message.</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  This alert needs your attention, but it's not super important.</div>"},{"title":"Tag Plugins","date":"2014-03-16T02:17:16.000Z","description":"Introduce tag plugins in freemind.","feature":"/hexo-theme-freemind/images/tag-plugins/plugins.jpg","toc":true,"_content":"\nThe freemind theme offers several new tag plugins, so as to fully take advantages of Bootstrap.\n\nTo use these tag plugins, you need to install [hexo-tag-bootstrap](https://github.com/wzpan/hexo-tag-bootstrap) first. In your blog root folder, execute the following command:\n\n```\n$ npm install hexo-tag-bootstrap --save\n```\n\nThen you can use these tag plugins in your blog, as easily as you normally do using hexo tag plugins. \n\n<!-- more -->\n\n## Text Color ##\n\nConvey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.\n\n### Syntax ###\n\n```\n{% textcolor [style] %}\n  text string\n{% endtextcolor %}\n```\n\n### Examples ###\n\n```\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n```\n\n### Results ###\n\n{% textcolor muted %}Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.{% endtextcolor %}\n\n{% textcolor primary %}Nullam id dolor id nibh ultricies vehicula ut id elit.{% endtextcolor %}\n\n{% textcolor success %}Duis mollis, est non commodo luctus, nisi erat porttitor ligula.{% endtextcolor %}\n\n{% textcolor info %}Maecenas sed diam eget risus varius blandit sit amet non magna.{% endtextcolor %}\n\n{% textcolor warning %}Etiam porta sem malesuada magna mollis euismod.{% endtextcolor %}\n\n{% textcolor danger %}Donec ullamcorper nulla non metus auctor fringilla.{% endtextcolor %}\n\n## Buttons ##\n\nInserts a button with target links, text and specified color.\n\n### Syntax ###\n\n```\n{% btn url text [style] %}\n```\n\n### Examples ###\n\n```\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n```\n\n### Results ###\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n\n## Labels ##\n\nInserts a label with text and specified color.\n\n### Syntax ###\n\n```\n{% label text [style] %}\n```\n\n### Examples ###\n\n```\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n```\n\n### Results ###\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n## Badges ##\n\nInserts a badge with text.\n\n\n### Syntax ###\n\n```\n{% badge text %}\n```\n\n### Examples ###\n\n```\n{% badge 42 %}\n```\n\n### Results ###\n\n{% badge 42 %}\n\n## Alerts ##\n\nInserts alert messages with text and specified color.\n\n### Syntax ###\n\n```\n{% alert [style] %}\n   Alert string\n{% endalert %}\n```\n\n### Examples ###\n\n```\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n```\n\n### Results ###\n\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n\n","source":"_posts/tag-plugins.md","raw":"title: \"Tag Plugins\"\ndate: \"2014-03-16 10:17:16\"\ntags: plugins\ncategories: Docs\ndescription: \"Introduce tag plugins in freemind.\"\nfeature: /hexo-theme-freemind/images/tag-plugins/plugins.jpg\ntoc: true\n---\n\nThe freemind theme offers several new tag plugins, so as to fully take advantages of Bootstrap.\n\nTo use these tag plugins, you need to install [hexo-tag-bootstrap](https://github.com/wzpan/hexo-tag-bootstrap) first. In your blog root folder, execute the following command:\n\n```\n$ npm install hexo-tag-bootstrap --save\n```\n\nThen you can use these tag plugins in your blog, as easily as you normally do using hexo tag plugins. \n\n<!-- more -->\n\n## Text Color ##\n\nConvey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.\n\n### Syntax ###\n\n```\n{% textcolor [style] %}\n  text string\n{% endtextcolor %}\n```\n\n### Examples ###\n\n```\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n```\n\n### Results ###\n\n{% textcolor muted %}Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.{% endtextcolor %}\n\n{% textcolor primary %}Nullam id dolor id nibh ultricies vehicula ut id elit.{% endtextcolor %}\n\n{% textcolor success %}Duis mollis, est non commodo luctus, nisi erat porttitor ligula.{% endtextcolor %}\n\n{% textcolor info %}Maecenas sed diam eget risus varius blandit sit amet non magna.{% endtextcolor %}\n\n{% textcolor warning %}Etiam porta sem malesuada magna mollis euismod.{% endtextcolor %}\n\n{% textcolor danger %}Donec ullamcorper nulla non metus auctor fringilla.{% endtextcolor %}\n\n## Buttons ##\n\nInserts a button with target links, text and specified color.\n\n### Syntax ###\n\n```\n{% btn url text [style] %}\n```\n\n### Examples ###\n\n```\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n```\n\n### Results ###\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://hahack.com hahack info %}\n\n## Labels ##\n\nInserts a label with text and specified color.\n\n### Syntax ###\n\n```\n{% label text [style] %}\n```\n\n### Examples ###\n\n```\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n```\n\n### Results ###\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n## Badges ##\n\nInserts a badge with text.\n\n\n### Syntax ###\n\n```\n{% badge text %}\n```\n\n### Examples ###\n\n```\n{% badge 42 %}\n```\n\n### Results ###\n\n{% badge 42 %}\n\n## Alerts ##\n\nInserts alert messages with text and specified color.\n\n### Syntax ###\n\n```\n{% alert [style] %}\n   Alert string\n{% endalert %}\n```\n\n### Examples ###\n\n```\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n```\n\n### Results ###\n\n{% alert warning %}\nBest check yo self, you're not looking too good.\n{% endalert %}\n\n{% alert danger %}\nChange a few things up and try submitting again.\n{% endalert %}\n\n{% alert success %}\nYou successfully read this important alert message.\n{% endalert %}\n\n{% alert info %}\nThis alert needs your attention, but it's not super important.\n{% endalert %}\n\n","slug":"tag-plugins","published":1,"updated":"2017-02-14T05:42:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en2004fbnavwafkhswv","content":"<p>The freemind theme offers several new tag plugins, so as to fully take advantages of Bootstrap.</p>\n<p>To use these tag plugins, you need to install <a href=\"https://github.com/wzpan/hexo-tag-bootstrap\" target=\"_blank\" rel=\"external\">hexo-tag-bootstrap</a> first. In your blog root folder, execute the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>\n<p>Then you can use these tag plugins in your blog, as easily as you normally do using hexo tag plugins. </p>\n<a id=\"more\"></a>\n<h2 id=\"Text-Color\"><a href=\"#Text-Color\" class=\"headerlink\" title=\"Text Color\"></a>Text Color</h2><p>Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.</p>\n<h3 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% textcolor [style] %}</div><div class=\"line\">  text string</div><div class=\"line\">{% endtextcolor %}</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% textcolor muted %}</div><div class=\"line\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor primary %}</div><div class=\"line\">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor success %}</div><div class=\"line\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor info %}</div><div class=\"line\">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor warning %}</div><div class=\"line\">Etiam porta sem malesuada magna mollis euismod.</div><div class=\"line\">{% endtextcolor %}</div><div class=\"line\"></div><div class=\"line\">{% textcolor danger %}</div><div class=\"line\">Donec ullamcorper nulla non metus auctor fringilla.</div><div class=\"line\">{% endtextcolor %}</div></pre></td></tr></table></figure>\n<h3 id=\"Results\"><a href=\"#Results\" class=\"headerlink\" title=\"Results\"></a>Results</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<h2 id=\"Buttons\"><a href=\"#Buttons\" class=\"headerlink\" title=\"Buttons\"></a>Buttons</h2><p>Inserts a button with target links, text and specified color.</p>\n<h3 id=\"Syntax-1\"><a href=\"#Syntax-1\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% btn url text [style] %}</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% btn http://hahack.com hahack %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack primary %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack success %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack warning %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack danger %}</div><div class=\"line\"></div><div class=\"line\">{% btn http://hahack.com hahack info %}</div></pre></td></tr></table></figure>\n<h3 id=\"Results-1\"><a href=\"#Results-1\" class=\"headerlink\" title=\"Results\"></a>Results</h3><a class=\"btn btn-default\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<h2 id=\"Labels\"><a href=\"#Labels\" class=\"headerlink\" title=\"Labels\"></a>Labels</h2><p>Inserts a label with text and specified color.</p>\n<h3 id=\"Syntax-2\"><a href=\"#Syntax-2\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% label text [style] %}</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-2\"><a href=\"#Examples-2\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% label default %}</div><div class=\"line\"></div><div class=\"line\">{% label warinng warning %}</div><div class=\"line\"></div><div class=\"line\">{% label success success %}</div><div class=\"line\"></div><div class=\"line\">{% label danger danger %}</div><div class=\"line\"></div><div class=\"line\">{% label primary primary %}</div><div class=\"line\"></div><div class=\"line\">{% label info info %}</div></pre></td></tr></table></figure>\n<h3 id=\"Results-2\"><a href=\"#Results-2\" class=\"headerlink\" title=\"Results\"></a>Results</h3><span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<h2 id=\"Badges\"><a href=\"#Badges\" class=\"headerlink\" title=\"Badges\"></a>Badges</h2><p>Inserts a badge with text.</p>\n<h3 id=\"Syntax-3\"><a href=\"#Syntax-3\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% badge text %}</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-3\"><a href=\"#Examples-3\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% badge 42 %}</div></pre></td></tr></table></figure>\n<h3 id=\"Results-3\"><a href=\"#Results-3\" class=\"headerlink\" title=\"Results\"></a>Results</h3><span class=\"badge\">42</span>\n<h2 id=\"Alerts\"><a href=\"#Alerts\" class=\"headerlink\" title=\"Alerts\"></a>Alerts</h2><p>Inserts alert messages with text and specified color.</p>\n<h3 id=\"Syntax-4\"><a href=\"#Syntax-4\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% alert [style] %}</div><div class=\"line\">   Alert string</div><div class=\"line\">{% endalert %}</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-4\"><a href=\"#Examples-4\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">{% alert warning %}</div><div class=\"line\">Best check yo self, you&apos;re not looking too good.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert danger %}</div><div class=\"line\">Change a few things up and try submitting again.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert success %}</div><div class=\"line\">You successfully read this important alert message.</div><div class=\"line\">{% endalert %}</div><div class=\"line\"></div><div class=\"line\">{% alert info %}</div><div class=\"line\">This alert needs your attention, but it&apos;s not super important.</div><div class=\"line\">{% endalert %}</div></pre></td></tr></table></figure>\n<h3 id=\"Results-4\"><a href=\"#Results-4\" class=\"headerlink\" title=\"Results\"></a>Results</h3><div class=\"alert alert-warning\"><i class=\"fa fa-bell\"></i>  Best check yo self, you&apos;re not looking too good.</div>\n<div class=\"alert alert-danger\"><i class=\"fa fa-bug\"></i>  Change a few things up and try submitting again.</div>\n<div class=\"alert alert-success\"><i class=\"fa fa-lightbulb-o\"></i>  You successfully read this important alert message.</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  This alert needs your attention, but it&apos;s not super important.</div>\n","excerpt":"<p>The freemind theme offers several new tag plugins, so as to fully take advantages of Bootstrap.</p>\n<p>To use these tag plugins, you need to install <a href=\"https://github.com/wzpan/hexo-tag-bootstrap\">hexo-tag-bootstrap</a> first. In your blog root folder, execute the following command:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-tag-bootstrap --save</div></pre></td></tr></table></figure>\n<p>Then you can use these tag plugins in your blog, as easily as you normally do using hexo tag plugins. </p>","more":"<h2 id=\"Text-Color\"><a href=\"#Text-Color\" class=\"headerlink\" title=\"Text Color\"></a>Text Color</h2><p>Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.</p>\n<h3 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% textcolor [style] %&#125;</div><div class=\"line\">  text string</div><div class=\"line\">&#123;% endtextcolor %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% textcolor muted %&#125;</div><div class=\"line\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor primary %&#125;</div><div class=\"line\">Nullam id dolor id nibh ultricies vehicula ut id elit.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor success %&#125;</div><div class=\"line\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor info %&#125;</div><div class=\"line\">Maecenas sed diam eget risus varius blandit sit amet non magna.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor warning %&#125;</div><div class=\"line\">Etiam porta sem malesuada magna mollis euismod.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% textcolor danger %&#125;</div><div class=\"line\">Donec ullamcorper nulla non metus auctor fringilla.</div><div class=\"line\">&#123;% endtextcolor %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Results\"><a href=\"#Results\" class=\"headerlink\" title=\"Results\"></a>Results</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<h2 id=\"Buttons\"><a href=\"#Buttons\" class=\"headerlink\" title=\"Buttons\"></a>Buttons</h2><p>Inserts a button with target links, text and specified color.</p>\n<h3 id=\"Syntax-1\"><a href=\"#Syntax-1\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% btn url text [style] %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% btn http://hahack.com hahack %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack primary %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack success %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack warning %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack danger %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% btn http://hahack.com hahack info %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Results-1\"><a href=\"#Results-1\" class=\"headerlink\" title=\"Results\"></a>Results</h3><a class=\"btn btn-default\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://hahack.com\">hahack</a>\n<h2 id=\"Labels\"><a href=\"#Labels\" class=\"headerlink\" title=\"Labels\"></a>Labels</h2><p>Inserts a label with text and specified color.</p>\n<h3 id=\"Syntax-2\"><a href=\"#Syntax-2\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% label text [style] %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-2\"><a href=\"#Examples-2\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% label default %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label warinng warning %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label success success %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label danger danger %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label primary primary %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% label info info %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Results-2\"><a href=\"#Results-2\" class=\"headerlink\" title=\"Results\"></a>Results</h3><span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<h2 id=\"Badges\"><a href=\"#Badges\" class=\"headerlink\" title=\"Badges\"></a>Badges</h2><p>Inserts a badge with text.</p>\n<h3 id=\"Syntax-3\"><a href=\"#Syntax-3\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% badge text %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-3\"><a href=\"#Examples-3\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% badge 42 %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Results-3\"><a href=\"#Results-3\" class=\"headerlink\" title=\"Results\"></a>Results</h3><span class=\"badge\">42</span>\n<h2 id=\"Alerts\"><a href=\"#Alerts\" class=\"headerlink\" title=\"Alerts\"></a>Alerts</h2><p>Inserts alert messages with text and specified color.</p>\n<h3 id=\"Syntax-4\"><a href=\"#Syntax-4\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% alert [style] %&#125;</div><div class=\"line\">   Alert string</div><div class=\"line\">&#123;% endalert %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-4\"><a href=\"#Examples-4\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% alert warning %&#125;</div><div class=\"line\">Best check yo self, you&apos;re not looking too good.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert danger %&#125;</div><div class=\"line\">Change a few things up and try submitting again.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert success %&#125;</div><div class=\"line\">You successfully read this important alert message.</div><div class=\"line\">&#123;% endalert %&#125;</div><div class=\"line\"></div><div class=\"line\">&#123;% alert info %&#125;</div><div class=\"line\">This alert needs your attention, but it&apos;s not super important.</div><div class=\"line\">&#123;% endalert %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Results-4\"><a href=\"#Results-4\" class=\"headerlink\" title=\"Results\"></a>Results</h3><div class=\"alert alert-warning\"><i class=\"fa fa-bell\"></i>  Best check yo self, you're not looking too good.</div>\n<div class=\"alert alert-danger\"><i class=\"fa fa-bug\"></i>  Change a few things up and try submitting again.</div>\n<div class=\"alert alert-success\"><i class=\"fa fa-lightbulb-o\"></i>  You successfully read this important alert message.</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  This alert needs your attention, but it's not super important.</div>"},{"title":"test","date":"2017-01-25T13:09:45.000Z","toc":true,"_content":"# aa\n## bb\n-   asdf\n-   asdf\n-   asdf\n-   asdf\n-   asdf\n\n## cc\n\n### ccc\n\n\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n\n\n\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://www.baidu.com baidu info %}\n\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n\n\n{% textcolor info %}\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa \n{% endtextcolor %}\n{% textcolor info %}\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa \n{% endtextcolor %}\n\n{% btn http://hahack.com asdfasdfasdfasdf %}\n{% btn http://hahack.com text success %}\n{% btn http://github.com asdfasdfasdf %}\n\n\n{% alert info %}\n    asdfasdfassfdsfssfasdf\n    adsfasdfadsfasfadsfafdasfd\n    asdfasdfasdfafsaf\n{% endalert %}\n\n\n\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n\n\n![avatar](https://adeshpande3.github.io/assets/Cover.png)\n# asdf\n[asdf](http://www.baidu.com)]\n\n-   asdf\n-   asdf\n-   asdf\n-   as\n-   dfa\n-   sdf\n-   asdf\n-\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2017-01-25 21:09:45\ntags:\ntoc: true\n---\n# aa\n## bb\n-   asdf\n-   asdf\n-   asdf\n-   asdf\n-   asdf\n\n## cc\n\n### ccc\n\n\n{% textcolor muted %}\nFusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n{% endtextcolor %}\n{% textcolor primary %}\nNullam id dolor id nibh ultricies vehicula ut id elit.\n{% endtextcolor %}\n{% textcolor success %}\nDuis mollis, est non commodo luctus, nisi erat porttitor ligula.\n{% endtextcolor %}\n{% textcolor info %}\nMaecenas sed diam eget risus varius blandit sit amet non magna.\n{% endtextcolor %}\n{% textcolor warning %}\nEtiam porta sem malesuada magna mollis euismod.\n{% endtextcolor %}\n{% textcolor danger %}\nDonec ullamcorper nulla non metus auctor fringilla.\n{% endtextcolor %}\n\n\n\n\n{% btn http://hahack.com hahack %}\n\n{% btn http://hahack.com hahack primary %}\n\n{% btn http://hahack.com hahack success %}\n\n{% btn http://hahack.com hahack warning %}\n\n{% btn http://hahack.com hahack danger %}\n\n{% btn http://www.baidu.com baidu info %}\n\n\n{% label default %}\n\n{% label warinng warning %}\n\n{% label success success %}\n\n{% label danger danger %}\n\n{% label primary primary %}\n\n{% label info info %}\n\n\n\n{% textcolor info %}\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa \n{% endtextcolor %}\n{% textcolor info %}\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa \n{% endtextcolor %}\n\n{% btn http://hahack.com asdfasdfasdfasdf %}\n{% btn http://hahack.com text success %}\n{% btn http://github.com asdfasdfasdf %}\n\n\n{% alert info %}\n    asdfasdfassfdsfssfasdf\n    adsfasdfadsfasfadsfafdasfd\n    asdfasdfasdfafsaf\n{% endalert %}\n\n\n\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n{% alert info %}\n    asdfasdfasdfassdf\n{% endalert %}\n\n\n![avatar](https://adeshpande3.github.io/assets/Cover.png)\n# asdf\n[asdf](http://www.baidu.com)]\n\n-   asdf\n-   asdf\n-   asdf\n-   as\n-   dfa\n-   sdf\n-   asdf\n-\n","slug":"test","published":1,"updated":"2017-04-24T12:59:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en2004hbnavizwzl7u1","content":"<h1 id=\"aa\"><a href=\"#aa\" class=\"headerlink\" title=\"aa\"></a>aa</h1><h2 id=\"bb\"><a href=\"#bb\" class=\"headerlink\" title=\"bb\"></a>bb</h2><ul>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n</ul>\n<h2 id=\"cc\"><a href=\"#cc\" class=\"headerlink\" title=\"cc\"></a>cc</h2><h3 id=\"ccc\"><a href=\"#ccc\" class=\"headerlink\" title=\"ccc\"></a>ccc</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<a class=\"btn btn-default\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://www.baidu.com\" target=\"_blank\" rel=\"external\">baidu</a>\n<span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<p class=\"text-info\">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>\n<p class=\"text-info\">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>\n<a class=\"btn btn-default\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">asdfasdfasdfasdf</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\" target=\"_blank\" rel=\"external\">text</a>\n<a class=\"btn btn-default\" href=\"http://github.com\" target=\"_blank\" rel=\"external\">asdfasdfasdf</a>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfassfdsfssfasdf\nadsfasdfadsfasfadsfafdasfd\nasdfasdfasdfafsaf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<p><img src=\"https://adeshpande3.github.io/assets/Cover.png\" alt=\"avatar\"></p>\n<h1 id=\"asdf\"><a href=\"#asdf\" class=\"headerlink\" title=\"asdf\"></a>asdf</h1><p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"external\">asdf</a>]</p>\n<ul>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>as</li>\n<li>dfa</li>\n<li>sdf</li>\n<li>asdf<br>-</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"aa\"><a href=\"#aa\" class=\"headerlink\" title=\"aa\"></a>aa</h1><h2 id=\"bb\"><a href=\"#bb\" class=\"headerlink\" title=\"bb\"></a>bb</h2><ul>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n</ul>\n<h2 id=\"cc\"><a href=\"#cc\" class=\"headerlink\" title=\"cc\"></a>cc</h2><h3 id=\"ccc\"><a href=\"#ccc\" class=\"headerlink\" title=\"ccc\"></a>ccc</h3><p class=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n<p class=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n<p class=\"text-success\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n<p class=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n<p class=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n<p class=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n<a class=\"btn btn-default\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-primary\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-warning\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-danger\" href=\"http://hahack.com\">hahack</a>\n<a class=\"btn btn-info\" href=\"http://www.baidu.com\">baidu</a>\n<span class=\"label label-default\">default</span>\n<span class=\"label label-warning\">warinng</span>\n<span class=\"label label-success\">success</span>\n<span class=\"label label-danger\">danger</span>\n<span class=\"label label-primary\">primary</span>\n<span class=\"label label-info\">info</span>\n<p class=\"text-info\">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>\n<p class=\"text-info\">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa </p>\n<a class=\"btn btn-default\" href=\"http://hahack.com\">asdfasdfasdfasdf</a>\n<a class=\"btn btn-success\" href=\"http://hahack.com\">text</a>\n<a class=\"btn btn-default\" href=\"http://github.com\">asdfasdfasdf</a>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfassfdsfssfasdf\nadsfasdfadsfasfadsfafdasfd\nasdfasdfasdfafsaf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<div class=\"alert alert-info\"><i class=\"fa fa-info\"></i>  asdfasdfasdfassdf</div>\n<p><img src=\"https://adeshpande3.github.io/assets/Cover.png\" alt=\"avatar\"></p>\n<h1 id=\"asdf\"><a href=\"#asdf\" class=\"headerlink\" title=\"asdf\"></a>asdf</h1><p><a href=\"http://www.baidu.com\">asdf</a>]</p>\n<ul>\n<li>asdf</li>\n<li>asdf</li>\n<li>asdf</li>\n<li>as</li>\n<li>dfa</li>\n<li>sdf</li>\n<li>asdf<br>-</li>\n</ul>\n"},{"title":"繁體中文測試","date":"2013-12-25T13:17:16.000Z","feature":"/hexo-theme-freemind/images/xinjing/pusa1.jpg","description":"观音心经 - 般若波罗蜜多心经。","toc":true,"_content":"\n觀自在菩薩，行深般若波羅蜜多時，照見五蘊皆空，度一切苦厄。\n\n舍利子，色不異空，空不異色；色即是空，空即是色。受、想、行、識，亦復如是。\n\n舍利子，是諸法空相，不生不滅，不垢不淨，不增不減，是故空中無色，無受、想、行、識；無眼、耳、鼻、舌、身、意；無色、聲、香、味、觸、法；無眼界，乃至無意識界；無無明，亦無無明盡；乃至無老死，亦無老死盡。無苦、集、滅、道，無智亦無得，以無所得故。\n\n菩提薩埵(`duǒ`)，依般若波羅蜜多故，心無罣礙(`guà ài`)。無罣礙，故無有恐怖，遠離顛倒夢想，究竟涅槃。三世諸佛，依般若波羅蜜多故，得阿耨多羅三藐三菩提。<!-- more -->\n\n故知般若波羅蜜多，是大神咒，是大明咒，是無上咒，是無等等咒，能除一切苦，真實不虛。\n\n故說般若波羅蜜多咒，即說咒曰：\n\n> 揭諦、揭諦，波羅揭諦，波羅僧揭諦，菩提薩婆訶。\n","source":"_posts/traditional-chinese-test.md","raw":"title: 繁體中文測試\ndate: \"2013-12-25 21:17:16\"\ntags: 繁體\ncategories: Test\nfeature: /hexo-theme-freemind/images/xinjing/pusa1.jpg\ndescription: \"观音心经 - 般若波罗蜜多心经。\"\ntoc: true\n---\n\n觀自在菩薩，行深般若波羅蜜多時，照見五蘊皆空，度一切苦厄。\n\n舍利子，色不異空，空不異色；色即是空，空即是色。受、想、行、識，亦復如是。\n\n舍利子，是諸法空相，不生不滅，不垢不淨，不增不減，是故空中無色，無受、想、行、識；無眼、耳、鼻、舌、身、意；無色、聲、香、味、觸、法；無眼界，乃至無意識界；無無明，亦無無明盡；乃至無老死，亦無老死盡。無苦、集、滅、道，無智亦無得，以無所得故。\n\n菩提薩埵(`duǒ`)，依般若波羅蜜多故，心無罣礙(`guà ài`)。無罣礙，故無有恐怖，遠離顛倒夢想，究竟涅槃。三世諸佛，依般若波羅蜜多故，得阿耨多羅三藐三菩提。<!-- more -->\n\n故知般若波羅蜜多，是大神咒，是大明咒，是無上咒，是無等等咒，能除一切苦，真實不虛。\n\n故說般若波羅蜜多咒，即說咒曰：\n\n> 揭諦、揭諦，波羅揭諦，波羅僧揭諦，菩提薩婆訶。\n","slug":"traditional-chinese-test","published":1,"updated":"2017-02-15T08:07:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en3004kbnavw6und8rh","content":"<p>&#x89C0;&#x81EA;&#x5728;&#x83E9;&#x85A9;&#xFF0C;&#x884C;&#x6DF1;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6642;&#xFF0C;&#x7167;&#x898B;&#x4E94;&#x860A;&#x7686;&#x7A7A;&#xFF0C;&#x5EA6;&#x4E00;&#x5207;&#x82E6;&#x5384;&#x3002;</p>\n<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x8272;&#x4E0D;&#x7570;&#x7A7A;&#xFF0C;&#x7A7A;&#x4E0D;&#x7570;&#x8272;&#xFF1B;&#x8272;&#x5373;&#x662F;&#x7A7A;&#xFF0C;&#x7A7A;&#x5373;&#x662F;&#x8272;&#x3002;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8B58;&#xFF0C;&#x4EA6;&#x5FA9;&#x5982;&#x662F;&#x3002;</p>\n<p>&#x820D;&#x5229;&#x5B50;&#xFF0C;&#x662F;&#x8AF8;&#x6CD5;&#x7A7A;&#x76F8;&#xFF0C;&#x4E0D;&#x751F;&#x4E0D;&#x6EC5;&#xFF0C;&#x4E0D;&#x57A2;&#x4E0D;&#x6DE8;&#xFF0C;&#x4E0D;&#x589E;&#x4E0D;&#x6E1B;&#xFF0C;&#x662F;&#x6545;&#x7A7A;&#x4E2D;&#x7121;&#x8272;&#xFF0C;&#x7121;&#x53D7;&#x3001;&#x60F3;&#x3001;&#x884C;&#x3001;&#x8B58;&#xFF1B;&#x7121;&#x773C;&#x3001;&#x8033;&#x3001;&#x9F3B;&#x3001;&#x820C;&#x3001;&#x8EAB;&#x3001;&#x610F;&#xFF1B;&#x7121;&#x8272;&#x3001;&#x8072;&#x3001;&#x9999;&#x3001;&#x5473;&#x3001;&#x89F8;&#x3001;&#x6CD5;&#xFF1B;&#x7121;&#x773C;&#x754C;&#xFF0C;&#x4E43;&#x81F3;&#x7121;&#x610F;&#x8B58;&#x754C;&#xFF1B;&#x7121;&#x7121;&#x660E;&#xFF0C;&#x4EA6;&#x7121;&#x7121;&#x660E;&#x76E1;&#xFF1B;&#x4E43;&#x81F3;&#x7121;&#x8001;&#x6B7B;&#xFF0C;&#x4EA6;&#x7121;&#x8001;&#x6B7B;&#x76E1;&#x3002;&#x7121;&#x82E6;&#x3001;&#x96C6;&#x3001;&#x6EC5;&#x3001;&#x9053;&#xFF0C;&#x7121;&#x667A;&#x4EA6;&#x7121;&#x5F97;&#xFF0C;&#x4EE5;&#x7121;&#x6240;&#x5F97;&#x6545;&#x3002;</p>\n<p>&#x83E9;&#x63D0;&#x85A9;&#x57F5;(<code>du&#x1D2;</code>)&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5FC3;&#x7121;&#x7F63;&#x7919;(<code>gu&#xE0; &#xE0;i</code>)&#x3002;&#x7121;&#x7F63;&#x7919;&#xFF0C;&#x6545;&#x7121;&#x6709;&#x6050;&#x6016;&#xFF0C;&#x9060;&#x96E2;&#x985B;&#x5012;&#x5922;&#x60F3;&#xFF0C;&#x7A76;&#x7ADF;&#x6D85;&#x69C3;&#x3002;&#x4E09;&#x4E16;&#x8AF8;&#x4F5B;&#xFF0C;&#x4F9D;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x6545;&#xFF0C;&#x5F97;&#x963F;&#x8028;&#x591A;&#x7F85;&#x4E09;&#x85D0;&#x4E09;&#x83E9;&#x63D0;&#x3002;<a id=\"more\"></a></p>\n<p>&#x6545;&#x77E5;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#xFF0C;&#x662F;&#x5927;&#x795E;&#x5492;&#xFF0C;&#x662F;&#x5927;&#x660E;&#x5492;&#xFF0C;&#x662F;&#x7121;&#x4E0A;&#x5492;&#xFF0C;&#x662F;&#x7121;&#x7B49;&#x7B49;&#x5492;&#xFF0C;&#x80FD;&#x9664;&#x4E00;&#x5207;&#x82E6;&#xFF0C;&#x771F;&#x5BE6;&#x4E0D;&#x865B;&#x3002;</p>\n<p>&#x6545;&#x8AAA;&#x822C;&#x82E5;&#x6CE2;&#x7F85;&#x871C;&#x591A;&#x5492;&#xFF0C;&#x5373;&#x8AAA;&#x5492;&#x66F0;&#xFF1A;</p>\n<blockquote>\n<p>&#x63ED;&#x8AE6;&#x3001;&#x63ED;&#x8AE6;&#xFF0C;&#x6CE2;&#x7F85;&#x63ED;&#x8AE6;&#xFF0C;&#x6CE2;&#x7F85;&#x50E7;&#x63ED;&#x8AE6;&#xFF0C;&#x83E9;&#x63D0;&#x85A9;&#x5A46;&#x8A36;&#x3002;</p>\n</blockquote>\n","excerpt":"<p>觀自在菩薩，行深般若波羅蜜多時，照見五蘊皆空，度一切苦厄。</p>\n<p>舍利子，色不異空，空不異色；色即是空，空即是色。受、想、行、識，亦復如是。</p>\n<p>舍利子，是諸法空相，不生不滅，不垢不淨，不增不減，是故空中無色，無受、想、行、識；無眼、耳、鼻、舌、身、意；無色、聲、香、味、觸、法；無眼界，乃至無意識界；無無明，亦無無明盡；乃至無老死，亦無老死盡。無苦、集、滅、道，無智亦無得，以無所得故。</p>\n<p>菩提薩埵(<code>duǒ</code>)，依般若波羅蜜多故，心無罣礙(<code>guà ài</code>)。無罣礙，故無有恐怖，遠離顛倒夢想，究竟涅槃。三世諸佛，依般若波羅蜜多故，得阿耨多羅三藐三菩提。","more":"</p>\n<p>故知般若波羅蜜多，是大神咒，是大明咒，是無上咒，是無等等咒，能除一切苦，真實不虛。</p>\n<p>故說般若波羅蜜多咒，即說咒曰：</p>\n<blockquote>\n<p>揭諦、揭諦，波羅揭諦，波羅僧揭諦，菩提薩婆訶。</p>\n</blockquote>"},{"title":"vim使用技巧","date":"2016-12-21T16:10:50.000Z","toc":true,"_content":"\n\n## dbext\n在命令式中输入如下指令，比如DBCompleteTables可以在vim的dictionary中存储当前数据库的表格名称。\n```\nDBCompleteTables\nDBCompleteProcedures\nDBCompleteViews\n```\n此时在vim中输入表格名称时候可以通过ctrl+x 和 ctrl+k 来实现自动不全表名称的功能。\n\n```\n\\slc\n```\n在table_name 上面停留光标然后执行\\slc则可以获取到这个表格的各个字段名称, 按p则可粘贴\n\n```\n**\\sh**\n```\n查看执行的历史，在ResultBuffer中输入Enter则执行该命令\n\n\n\n\n\n","source":"_posts/vim使用技巧.md","raw":"---\ntitle: vim使用技巧\ndate: 2016-12-22 00:10:50\ntags: VIM\ncategories: VIM\ntoc: true\n---\n\n\n## dbext\n在命令式中输入如下指令，比如DBCompleteTables可以在vim的dictionary中存储当前数据库的表格名称。\n```\nDBCompleteTables\nDBCompleteProcedures\nDBCompleteViews\n```\n此时在vim中输入表格名称时候可以通过ctrl+x 和 ctrl+k 来实现自动不全表名称的功能。\n\n```\n\\slc\n```\n在table_name 上面停留光标然后执行\\slc则可以获取到这个表格的各个字段名称, 按p则可粘贴\n\n```\n**\\sh**\n```\n查看执行的历史，在ResultBuffer中输入Enter则执行该命令\n\n\n\n\n\n","slug":"vim使用技巧","published":1,"updated":"2017-04-20T12:16:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en4004nbnav6vizkd4u","content":"<h2 id=\"dbext\"><a href=\"#dbext\" class=\"headerlink\" title=\"dbext\"></a>dbext</h2><p>&#x5728;&#x547D;&#x4EE4;&#x5F0F;&#x4E2D;&#x8F93;&#x5165;&#x5982;&#x4E0B;&#x6307;&#x4EE4;&#xFF0C;&#x6BD4;&#x5982;DBCompleteTables&#x53EF;&#x4EE5;&#x5728;vim&#x7684;dictionary&#x4E2D;&#x5B58;&#x50A8;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8868;&#x683C;&#x540D;&#x79F0;&#x3002;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">DBCompleteTables</div><div class=\"line\">DBCompleteProcedures</div><div class=\"line\">DBCompleteViews</div></pre></td></tr></table></figure></p>\n<p>&#x6B64;&#x65F6;&#x5728;vim&#x4E2D;&#x8F93;&#x5165;&#x8868;&#x683C;&#x540D;&#x79F0;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;ctrl+x &#x548C; ctrl+k &#x6765;&#x5B9E;&#x73B0;&#x81EA;&#x52A8;&#x4E0D;&#x5168;&#x8868;&#x540D;&#x79F0;&#x7684;&#x529F;&#x80FD;&#x3002;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\slc</div></pre></td></tr></table></figure>\n<p>&#x5728;table_name &#x4E0A;&#x9762;&#x505C;&#x7559;&#x5149;&#x6807;&#x7136;&#x540E;&#x6267;&#x884C;\\slc&#x5219;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;&#x8FD9;&#x4E2A;&#x8868;&#x683C;&#x7684;&#x5404;&#x4E2A;&#x5B57;&#x6BB5;&#x540D;&#x79F0;, &#x6309;p&#x5219;&#x53EF;&#x7C98;&#x8D34;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">**\\sh**</div></pre></td></tr></table></figure>\n<p>&#x67E5;&#x770B;&#x6267;&#x884C;&#x7684;&#x5386;&#x53F2;&#xFF0C;&#x5728;ResultBuffer&#x4E2D;&#x8F93;&#x5165;Enter&#x5219;&#x6267;&#x884C;&#x8BE5;&#x547D;&#x4EE4;</p>\n","excerpt":"","more":"<h2 id=\"dbext\"><a href=\"#dbext\" class=\"headerlink\" title=\"dbext\"></a>dbext</h2><p>在命令式中输入如下指令，比如DBCompleteTables可以在vim的dictionary中存储当前数据库的表格名称。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">DBCompleteTables</div><div class=\"line\">DBCompleteProcedures</div><div class=\"line\">DBCompleteViews</div></pre></td></tr></table></figure></p>\n<p>此时在vim中输入表格名称时候可以通过ctrl+x 和 ctrl+k 来实现自动不全表名称的功能。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\slc</div></pre></td></tr></table></figure>\n<p>在table_name 上面停留光标然后执行\\slc则可以获取到这个表格的各个字段名称, 按p则可粘贴</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">**\\sh**</div></pre></td></tr></table></figure>\n<p>查看执行的历史，在ResultBuffer中输入Enter则执行该命令</p>\n"},{"title":"关于支持向量机的几个问题","date":"2018-02-20T04:31:18.000Z","_content":"\n# 关于支持向量机的几个问题\n-   支持向量机的原始问题为啥要转换为对偶问题求解\n    非必须，但是转化对偶条件可以简化计算。转化为对偶问题计算可以将有约束的问题转化问题转化为无约束的问题，具体的做法是通过拉格朗日方程将针对x的约束条件，放到优化的目标函数里面。对于支持向量机而言，转化为对偶问题以后，可以采用platt提出的SMO算法，针对alpha（拉格朗日算子）进行启发式的求解，存在解析解，效率高。\n-   为啥要构造拉格朗日方程式\n    通过构造拉格朗日方程式可以获取一个在原优化目标函数可行域等同于原问题，在非可行域上趋近无穷大的问题。\n-   为啥不论原问题是凸的，对偶问题一定会是凸的？\n-   强对偶性才能够在SVM问题中成立\n    ![强对偶性成立条件](/myimages/WX20180302-140428.png)\n    **上面文件截取自知乎文章：https://zhuanlan.zhihu.com/p/24638007**\n-   KKT条件的作用是什么\n-   SMO算法的作用是啥, 从一些列的对偶变量中挑选出两个进行求解，原则是什么，为什么要挑选违反KKT条件最严重的点？\n-   什么样的函数成为核函数，支持向量机引入核函数的目的是什么？\n-   引入软间隔的损失函数怎么写，正则项是什么？\n-   为啥Hinge损失函数能够保证支持向量机的解的稀疏性\n-   支持向量回归的损失函数是什么？\n-   高斯核的gamma的含义是什么，怎么理解？\n\n","source":"_posts/关于支持向量机的几个问题.md","raw":"---\ntitle: 关于支持向量机的几个问题\ndate: 2018-02-20 12:31:18\ntags: SVM\n---\n\n# 关于支持向量机的几个问题\n-   支持向量机的原始问题为啥要转换为对偶问题求解\n    非必须，但是转化对偶条件可以简化计算。转化为对偶问题计算可以将有约束的问题转化问题转化为无约束的问题，具体的做法是通过拉格朗日方程将针对x的约束条件，放到优化的目标函数里面。对于支持向量机而言，转化为对偶问题以后，可以采用platt提出的SMO算法，针对alpha（拉格朗日算子）进行启发式的求解，存在解析解，效率高。\n-   为啥要构造拉格朗日方程式\n    通过构造拉格朗日方程式可以获取一个在原优化目标函数可行域等同于原问题，在非可行域上趋近无穷大的问题。\n-   为啥不论原问题是凸的，对偶问题一定会是凸的？\n-   强对偶性才能够在SVM问题中成立\n    ![强对偶性成立条件](/myimages/WX20180302-140428.png)\n    **上面文件截取自知乎文章：https://zhuanlan.zhihu.com/p/24638007**\n-   KKT条件的作用是什么\n-   SMO算法的作用是啥, 从一些列的对偶变量中挑选出两个进行求解，原则是什么，为什么要挑选违反KKT条件最严重的点？\n-   什么样的函数成为核函数，支持向量机引入核函数的目的是什么？\n-   引入软间隔的损失函数怎么写，正则项是什么？\n-   为啥Hinge损失函数能够保证支持向量机的解的稀疏性\n-   支持向量回归的损失函数是什么？\n-   高斯核的gamma的含义是什么，怎么理解？\n\n","slug":"关于支持向量机的几个问题","published":1,"updated":"2018-03-07T11:52:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en5004pbnavphlljqar","content":"<h1 id=\"&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;\"><a href=\"#&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;\" class=\"headerlink\" title=\"&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;\"></a>&#x5173;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x51E0;&#x4E2A;&#x95EE;&#x9898;</h1><ul>\n<li>&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x539F;&#x59CB;&#x95EE;&#x9898;&#x4E3A;&#x5565;&#x8981;&#x8F6C;&#x6362;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x6C42;&#x89E3;<br>&#x975E;&#x5FC5;&#x987B;&#xFF0C;&#x4F46;&#x662F;&#x8F6C;&#x5316;&#x5BF9;&#x5076;&#x6761;&#x4EF6;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x8BA1;&#x7B97;&#x3002;&#x8F6C;&#x5316;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x8BA1;&#x7B97;&#x53EF;&#x4EE5;&#x5C06;&#x6709;&#x7EA6;&#x675F;&#x7684;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x4E3A;&#x65E0;&#x7EA6;&#x675F;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x901A;&#x8FC7;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5C06;&#x9488;&#x5BF9;x&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x653E;&#x5230;&#x4F18;&#x5316;&#x7684;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x3002;&#x5BF9;&#x4E8E;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x800C;&#x8A00;&#xFF0C;&#x8F6C;&#x5316;&#x4E3A;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x4EE5;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;platt&#x63D0;&#x51FA;&#x7684;SMO&#x7B97;&#x6CD5;&#xFF0C;&#x9488;&#x5BF9;alpha&#xFF08;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x7B97;&#x5B50;&#xFF09;&#x8FDB;&#x884C;&#x542F;&#x53D1;&#x5F0F;&#x7684;&#x6C42;&#x89E3;&#xFF0C;&#x5B58;&#x5728;&#x89E3;&#x6790;&#x89E3;&#xFF0C;&#x6548;&#x7387;&#x9AD8;&#x3002;</li>\n<li>&#x4E3A;&#x5565;&#x8981;&#x6784;&#x9020;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5F0F;<br>&#x901A;&#x8FC7;&#x6784;&#x9020;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x65B9;&#x7A0B;&#x5F0F;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x5728;&#x539F;&#x4F18;&#x5316;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x53EF;&#x884C;&#x57DF;&#x7B49;&#x540C;&#x4E8E;&#x539F;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x975E;&#x53EF;&#x884C;&#x57DF;&#x4E0A;&#x8D8B;&#x8FD1;&#x65E0;&#x7A77;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002;</li>\n<li>&#x4E3A;&#x5565;&#x4E0D;&#x8BBA;&#x539F;&#x95EE;&#x9898;&#x662F;&#x51F8;&#x7684;&#xFF0C;&#x5BF9;&#x5076;&#x95EE;&#x9898;&#x4E00;&#x5B9A;&#x4F1A;&#x662F;&#x51F8;&#x7684;&#xFF1F;</li>\n<li>&#x5F3A;&#x5BF9;&#x5076;&#x6027;&#x624D;&#x80FD;&#x591F;&#x5728;SVM&#x95EE;&#x9898;&#x4E2D;&#x6210;&#x7ACB;<br><img src=\"/myimages/WX20180302-140428.png\" alt=\"&#x5F3A;&#x5BF9;&#x5076;&#x6027;&#x6210;&#x7ACB;&#x6761;&#x4EF6;\"><br><strong>&#x4E0A;&#x9762;&#x6587;&#x4EF6;&#x622A;&#x53D6;&#x81EA;&#x77E5;&#x4E4E;&#x6587;&#x7AE0;&#xFF1A;<a href=\"https://zhuanlan.zhihu.com/p/24638007\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/24638007</a></strong></li>\n<li>KKT&#x6761;&#x4EF6;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48;</li>\n<li>SMO&#x7B97;&#x6CD5;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5565;, &#x4ECE;&#x4E00;&#x4E9B;&#x5217;&#x7684;&#x5BF9;&#x5076;&#x53D8;&#x91CF;&#x4E2D;&#x6311;&#x9009;&#x51FA;&#x4E24;&#x4E2A;&#x8FDB;&#x884C;&#x6C42;&#x89E3;&#xFF0C;&#x539F;&#x5219;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x6311;&#x9009;&#x8FDD;&#x53CD;KKT&#x6761;&#x4EF6;&#x6700;&#x4E25;&#x91CD;&#x7684;&#x70B9;&#xFF1F;</li>\n<li>&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x51FD;&#x6570;&#x6210;&#x4E3A;&#x6838;&#x51FD;&#x6570;&#xFF0C;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x5F15;&#x5165;&#x6838;&#x51FD;&#x6570;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>\n<li>&#x5F15;&#x5165;&#x8F6F;&#x95F4;&#x9694;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x5199;&#xFF0C;&#x6B63;&#x5219;&#x9879;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>\n<li>&#x4E3A;&#x5565;Hinge&#x635F;&#x5931;&#x51FD;&#x6570;&#x80FD;&#x591F;&#x4FDD;&#x8BC1;&#x652F;&#x6301;&#x5411;&#x91CF;&#x673A;&#x7684;&#x89E3;&#x7684;&#x7A00;&#x758F;&#x6027;</li>\n<li>&#x652F;&#x6301;&#x5411;&#x91CF;&#x56DE;&#x5F52;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</li>\n<li>&#x9AD8;&#x65AF;&#x6838;&#x7684;gamma&#x7684;&#x542B;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x600E;&#x4E48;&#x7406;&#x89E3;&#xFF1F;</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"关于支持向量机的几个问题\"><a href=\"#关于支持向量机的几个问题\" class=\"headerlink\" title=\"关于支持向量机的几个问题\"></a>关于支持向量机的几个问题</h1><ul>\n<li>支持向量机的原始问题为啥要转换为对偶问题求解<br>非必须，但是转化对偶条件可以简化计算。转化为对偶问题计算可以将有约束的问题转化问题转化为无约束的问题，具体的做法是通过拉格朗日方程将针对x的约束条件，放到优化的目标函数里面。对于支持向量机而言，转化为对偶问题以后，可以采用platt提出的SMO算法，针对alpha（拉格朗日算子）进行启发式的求解，存在解析解，效率高。</li>\n<li>为啥要构造拉格朗日方程式<br>通过构造拉格朗日方程式可以获取一个在原优化目标函数可行域等同于原问题，在非可行域上趋近无穷大的问题。</li>\n<li>为啥不论原问题是凸的，对偶问题一定会是凸的？</li>\n<li>强对偶性才能够在SVM问题中成立<br><img src=\"/myimages/WX20180302-140428.png\" alt=\"强对偶性成立条件\"><br><strong>上面文件截取自知乎文章：<a href=\"https://zhuanlan.zhihu.com/p/24638007\">https://zhuanlan.zhihu.com/p/24638007</a></strong></li>\n<li>KKT条件的作用是什么</li>\n<li>SMO算法的作用是啥, 从一些列的对偶变量中挑选出两个进行求解，原则是什么，为什么要挑选违反KKT条件最严重的点？</li>\n<li>什么样的函数成为核函数，支持向量机引入核函数的目的是什么？</li>\n<li>引入软间隔的损失函数怎么写，正则项是什么？</li>\n<li>为啥Hinge损失函数能够保证支持向量机的解的稀疏性</li>\n<li>支持向量回归的损失函数是什么？</li>\n<li>高斯核的gamma的含义是什么，怎么理解？</li>\n</ul>\n"},{"title":"函数式编程","date":"2017-09-10T10:04:22.000Z","_content":"# 函数式编程\n最早接触函数式编程是公司的一位实习生同学介绍的概念，当时在他在PYTHON解释行上\n","source":"_posts/函数式编程.md","raw":"---\ntitle: 函数式编程\ndate: 2017-09-10 18:04:22\ntags: Scala\n---\n# 函数式编程\n最早接触函数式编程是公司的一位实习生同学介绍的概念，当时在他在PYTHON解释行上\n","slug":"函数式编程","published":1,"updated":"2017-09-10T10:11:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en6004tbnavt2jpjoed","content":"<h1 id=\"&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;\"><a href=\"#&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;\" class=\"headerlink\" title=\"&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;\"></a>&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;</h1><p>&#x6700;&#x65E9;&#x63A5;&#x89E6;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x662F;&#x516C;&#x53F8;&#x7684;&#x4E00;&#x4F4D;&#x5B9E;&#x4E60;&#x751F;&#x540C;&#x5B66;&#x4ECB;&#x7ECD;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5F53;&#x65F6;&#x5728;&#x4ED6;&#x5728;PYTHON&#x89E3;&#x91CA;&#x884C;&#x4E0A;</p>\n","excerpt":"","more":"<h1 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h1><p>最早接触函数式编程是公司的一位实习生同学介绍的概念，当时在他在PYTHON解释行上</p>\n"},{"layout":"scala","title":"是现成安全的吗？","date":"2019-04-09T08:42:49.000Z","_content":"","source":"_posts/是现成安全的吗？.md","raw":"layout: scala\ntitle: 是现成安全的吗？\ndate: 2019-04-09 16:42:49\ntags:\n---\n","slug":"是现成安全的吗？","published":1,"updated":"2019-04-09T08:42:49.470Z","comments":1,"photos":[],"link":"","_id":"ckb0g1en6004vbnavj54w4tmm","content":"","excerpt":"","more":""},{"title":"perf","date":"2020-04-15T05:04:19.000Z","_content":"\n# perf \n\n\n## JAVA FLAME GRAGH\n\n```\n[JAVA I](http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html#Java)\n[JAVA II](https://www.slideshare.net/brendangregg/java-performance-analysis-on-linux-with-flame-graphs)\n```\n\n\n","source":"_posts/perf.md","raw":"---\ntitle: perf\ndate: 2020-04-15 13:04:19\ntags:\n---\n\n# perf \n\n\n## JAVA FLAME GRAGH\n\n```\n[JAVA I](http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html#Java)\n[JAVA II](https://www.slideshare.net/brendangregg/java-performance-analysis-on-linux-with-flame-graphs)\n```\n\n\n","slug":"perf","published":1,"updated":"2020-04-15T05:08:05.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en7004xbnav15xb29cl","content":"<h1 id=\"perf\"><a href=\"#perf\" class=\"headerlink\" title=\"perf\"></a>perf</h1><h2 id=\"JAVA-FLAME-GRAGH\"><a href=\"#JAVA-FLAME-GRAGH\" class=\"headerlink\" title=\"JAVA FLAME GRAGH\"></a>JAVA FLAME GRAGH</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[JAVA I](http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html#Java)</div><div class=\"line\">[JAVA II](https://www.slideshare.net/brendangregg/java-performance-analysis-on-linux-with-flame-graphs)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"perf\"><a href=\"#perf\" class=\"headerlink\" title=\"perf\"></a>perf</h1><h2 id=\"JAVA-FLAME-GRAGH\"><a href=\"#JAVA-FLAME-GRAGH\" class=\"headerlink\" title=\"JAVA FLAME GRAGH\"></a>JAVA FLAME GRAGH</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[JAVA I](http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html#Java)</div><div class=\"line\">[JAVA II](https://www.slideshare.net/brendangregg/java-performance-analysis-on-linux-with-flame-graphs)</div></pre></td></tr></table></figure>\n"},{"title":"如何判断一个项目或者一个需求的价值","date":"2019-09-27T05:00:32.000Z","_content":"\n# 如何评估一个需求或者一个项目是否应该做\n\n```\n在实际的开发过程中会有一些需求，或者改造可能在不同团队之间扯皮。问题如同皮球一般被踢来踢去，就是得不到解决。每一方都有自己的考量，无论是基于利益、成本、风险亦或是现实状况来看，都非常有道理。\n\n在这样的场景下进行沟通，协商无疑是很困难的。 \n\n有一种共识可能在各方之间形成润滑作用，而且也比较合理，那就是解决问题的方向应该是“边际成本最低”.\n```\n\n\n\n","source":"_posts/如何判断一个项目或者一个需求的价值.md","raw":"---\ntitle: 如何判断一个项目或者一个需求的价值\ndate: 2019-09-27 13:00:32\ntags:\n---\n\n# 如何评估一个需求或者一个项目是否应该做\n\n```\n在实际的开发过程中会有一些需求，或者改造可能在不同团队之间扯皮。问题如同皮球一般被踢来踢去，就是得不到解决。每一方都有自己的考量，无论是基于利益、成本、风险亦或是现实状况来看，都非常有道理。\n\n在这样的场景下进行沟通，协商无疑是很困难的。 \n\n有一种共识可能在各方之间形成润滑作用，而且也比较合理，那就是解决问题的方向应该是“边际成本最低”.\n```\n\n\n\n","slug":"如何判断一个项目或者一个需求的价值","published":1,"updated":"2019-09-27T05:11:37.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en8004zbnavhse0ifw1","content":"<h1 id=\"&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;\"><a href=\"#&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;\" class=\"headerlink\" title=\"&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;\"></a>&#x5982;&#x4F55;&#x8BC4;&#x4F30;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x505A;</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#x5728;&#x5B9E;&#x9645;&#x7684;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x9700;&#x6C42;&#xFF0C;&#x6216;&#x8005;&#x6539;&#x9020;&#x53EF;&#x80FD;&#x5728;&#x4E0D;&#x540C;&#x56E2;&#x961F;&#x4E4B;&#x95F4;&#x626F;&#x76AE;&#x3002;&#x95EE;&#x9898;&#x5982;&#x540C;&#x76AE;&#x7403;&#x4E00;&#x822C;&#x88AB;&#x8E22;&#x6765;&#x8E22;&#x53BB;&#xFF0C;&#x5C31;&#x662F;&#x5F97;&#x4E0D;&#x5230;&#x89E3;&#x51B3;&#x3002;&#x6BCF;&#x4E00;&#x65B9;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x8003;&#x91CF;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x57FA;&#x4E8E;&#x5229;&#x76CA;&#x3001;&#x6210;&#x672C;&#x3001;&#x98CE;&#x9669;&#x4EA6;&#x6216;&#x662F;&#x73B0;&#x5B9E;&#x72B6;&#x51B5;&#x6765;&#x770B;&#xFF0C;&#x90FD;&#x975E;&#x5E38;&#x6709;&#x9053;&#x7406;&#x3002;</div><div class=\"line\"></div><div class=\"line\">&#x5728;&#x8FD9;&#x6837;&#x7684;&#x573A;&#x666F;&#x4E0B;&#x8FDB;&#x884C;&#x6C9F;&#x901A;&#xFF0C;&#x534F;&#x5546;&#x65E0;&#x7591;&#x662F;&#x5F88;&#x56F0;&#x96BE;&#x7684;&#x3002; </div><div class=\"line\"></div><div class=\"line\">&#x6709;&#x4E00;&#x79CD;&#x5171;&#x8BC6;&#x53EF;&#x80FD;&#x5728;&#x5404;&#x65B9;&#x4E4B;&#x95F4;&#x5F62;&#x6210;&#x6DA6;&#x6ED1;&#x4F5C;&#x7528;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x6BD4;&#x8F83;&#x5408;&#x7406;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5411;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x8FB9;&#x9645;&#x6210;&#x672C;&#x6700;&#x4F4E;&#x201D;.</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"如何评估一个需求或者一个项目是否应该做\"><a href=\"#如何评估一个需求或者一个项目是否应该做\" class=\"headerlink\" title=\"如何评估一个需求或者一个项目是否应该做\"></a>如何评估一个需求或者一个项目是否应该做</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">在实际的开发过程中会有一些需求，或者改造可能在不同团队之间扯皮。问题如同皮球一般被踢来踢去，就是得不到解决。每一方都有自己的考量，无论是基于利益、成本、风险亦或是现实状况来看，都非常有道理。</div><div class=\"line\"></div><div class=\"line\">在这样的场景下进行沟通，协商无疑是很困难的。 </div><div class=\"line\"></div><div class=\"line\">有一种共识可能在各方之间形成润滑作用，而且也比较合理，那就是解决问题的方向应该是“边际成本最低”.</div></pre></td></tr></table></figure>\n"},{"title":"机器学习相关材料","date":"2016-07-13T12:42:36.000Z","toc":true,"_content":"# 数学基础\n- 1、微积分 http://v.163.com/special/sp/singlevariablecalculus.html  http://open.163.com/special/opencourse/multivariable.html\n- 2、线性代数 http://open.163.com/special/opencourse/daishu.html\n- 3、概率统计http://open.163.com/special/Khan/probability.html\n想要深入学习机器学习，需要具有扎实的数学基础（矩阵分析和概率统计是基础的理论）\n\n# 进阶版本数学基础课程\n- 1、最优化理论（重点凸优化理论）  http://stanford.edu/~boyd/cvxbook/   http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian\n- 2、时变函数与泛函分析 http://ocw.nctu.edu.tw/course_list.php?page=2&bgid=1&gid=1  http://open.163.com/special/opencourse/fanhanfenxi.html\n- 3、随机过程 Hyperlink: Stochastic Process MIT View the complete course: Discrete Stochastic Processes\n\n# 机器学习基础课程\n- 1、Coursera上Andrew Ng Andrew Ng的《机器学习》\n- 2、林軒田(国立台湾大学) 機器學習基石\n\n# 机器学习基础课程\n- 1、 《统计学习方法》李航\n- 2、 《机器学习导论》\n- 3、 《PRML》\n- 4、 《图解机器学习》[日]杉山将\n- 5、   Machine Learning: A Probabilistic Prespective （Kevin Murphy）\n- 6、   Pattern Recognition and Machine Learning （Christopher Bishop）\n- 7、 《Spark机器学习》\n- 8、 《机器学习实战》\n- 9、 《贝叶斯思维:统计建模的Python学习法》\n- 10、Python自然语言处理》\n- 11、数学之美 （吴军）\n- 12、Web智能算法 （Haralambos Marmanis, Dmitry Babenko）\n- 13、集体智慧编程 （Toby Segaran）\n- 14、推荐系统实践\n- 15、计算广告学\n\n# 深度学习（注定将成为最近几年的爆发式增长）\n- 1、《Deep Learning》http://www.deeplearningbook.org\n- 2、  CSDN Blog http://blog.csdn.net/zouxy09/article/details/8775360\n- 3、《斯坦福大学深度学习教程》http://ufldl.stanford.edu/tutorial\n\n# 杂项\n[《Choosing a Machine Learning Classifier》](http://blog.echen.me/2011/04/27/choosing-a-machine-learning-classifier/)\n[《An Introduction to Deep Learning: From Perceptrons to Deep Networks》](https://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks)  [译文](http://www.cnblogs.com/xiaowanyer/p/3701944.html)\n[《The LION Way: Machine Learning plus Intelligent Optimization》](http://vdisk.weibo.com/s/ayG13we2vxyKl)\n[《分布式并行处理的数据》](http://web.stanford.edu/group/pdplab/pdphandbook)\n[《Deep Learning for Natural Language Processing and Related Applications》](https://www.microsoft.com/en-us/research/publication/deep-learning-for-natural-language-processing-and-related-applications-tutorial-at-icassp/)\n[《Neural Networks and Deep Learning》](http://neuralnetworksanddeeplearning.com/index.html)\n[《分布式机器学习的故事》](http://cxwangyi.github.io/notes/2014-01-20-distributed-machine-learning.html)\n[《Deep Learning 101》](http://markus.com/deep-learning-101/)\n[《Deep learning from the bottom up》](https://metacademy.org/roadmaps/rgrosse/deep_learning)\n[《Deep Learning（深度学习）学习笔记整理系列》](http://blog.csdn.net/zouxy09/article/details/8775360)\n[《Google Turns To Deep Learning Classification To Fight Web Spam》](http://www.seobythesea.com/2014/09/google-turns-deep-learning-classification-fight-web-spam/)\n[《Deep Learning Sentiment Analysis for Movie Reviews using Neo4j》](http://neo4j.com/blog/deep-learning-sentiment-analysis-movie-reviews-using-neo4j/)\n[《EMNLP上两篇关于股票趋势的应用论文 》](http://emnlp2014.org/papers/pdf/EMNLP2014148.pdf)\n[《Learning to Rank for Information Retrieval and Natural Language Processing》](http://www.morganclaypool.com/doi/abs/10.2200/S00607ED2V01Y201410HLT026)\n[《Geoffrey E. Hinton》](http://www.cs.toronto.edu/~hinton/)\n[《Andrej Karpathy的深度强化学习演示》 论文在这里](http://cs.stanford.edu/people/karpathy/convnetjs/demo/rldemo.html)\n[《用大数据和机器学习做股票价格预测》](http://eugenezhulenev.com/blog/2014/11/14/stock-price-prediction-with-big-data-and-machine-learning/)\n[《Use Google's Word2Vec for movie reviews》](https://www.kaggle.com/c/word2vec-nlp-tutorial)\n[《深度卷积神经网络下围棋》](https://www.technologyreview.com/s/533496/why-neural-networks-look-set-to-thrash-the-best-human-go-players-for-the-first-time/)\n[《机器学习经典算法详解及Python实现--线性回归（Linear Regression）算法》](http://blog.csdn.net/suipingsp/article/details/42101139)\n[《Caffe》](http://caffe.berkeleyvision.org/)\n[《GoogLeNet深度学习模型的Caffe复现 》 GoogleNet论文](https://github.com/BVLC/caffe/blob/master/models/bvlc_googlenet/readme.md)\n[《Deep Learning实战之word2vec》](http://techblog.youdao.com/?p=915)\n[《A Deep Dive into Recurrent Neural Nets》](http://nikhilbuduma.com/2015/01/11/a-deep-dive-into-recurrent-neural-networks/)\n[《Geoffrey E. Hinton个人主页》](http://www.cs.toronto.edu/~hinton/)\n[《Deep Learning on Hadoop 2.0》](https://www.paypal-engineering.com/2015/01/12/deep-learning-on-hadoop-2-0-2/)\n[《美团推荐算法实践》](http://tech.meituan.com/mt-recommend-practice.html)\n[《The Trouble with SVMs》](http://v1v3kn.tumblr.com/post/47193952400/the-trouble-with-svms)\n[《Gaussian Processes for Machine Learning》](http://www.gaussianprocess.org/gpml/)\n[《Introduction to ARMA Time Series Models – simplified》](http://www.analyticsvidhya.com/blog/2015/03/introduction-auto-regression-moving-average-time-series/)\n[《Neural Net in C++ Tutorial》](https://vimeo.com/19569529)\n[《Deep Learning Tutorials》](http://deeplearning.net/tutorial/)\n[《Deep Learning, The Curse of Dimensionality, and Autoencoders》](http://www.kdnuggets.com/2015/03/deep-learning-curse-dimensionality-autoencoders.html)\n[《Topic modeling with LDA: MLlib meets GraphX》](https://databricks.com/blog/2015/03/25/topic-modeling-with-lda-mllib-meets-graphx.html)\n[《Deep Learning for Multi-label Classification》](https://arxiv.org/abs/1502.05988)\n[《Google DeepMind publications》  AlphaGo团队官方论文](https://deepmind.com/research/publications/)\n[《AM207: Monte Carlo Methods, Stochastic Optimization》](http://am207.org/)\n[《Back-to-Basics Weekend Reading - Machine Learning》](http://www.allthingsdistributed.com/2015/04/machine-learning.html)\n[《A Probabilistic Theory of Deep Learning》](https://arxiv.org/abs/1504.00641)\n[《How does Quora use machine learning in 2015?》](http://www.quora.com/How-does-Quora-use-machine-learning-in-2015/answer/Xavier-Amatriain)\n[《Parallel Machine Learning with scikit-learn and IPython》](https://github.com/ogrisel/parallel_ml_tutorial)\n[《Time Series Econometrics - A Concise Course》](http://www.ssc.upenn.edu/~fdiebold/Teaching706/econ706Penn.html)\n[《A comparison of open source tools for sentiment analysis》](http://fotiad.is/blog/sentiment-analysis-comparison/)\n[《International Joint Conference on Artificial Intelligence Accepted paper》](http://ijcai-15.org/index.php/accepted-papers)\n[《How to Evaluate Machine Learning Models, Part 1: Orientation》](https://declara.com/content/21bO33gn)\n[《Learning scikit-learn: Machine Learning in Python》](http://nbviewer.jupyter.org/github/gmonce/scikit-learn-book/tree/master/)\n[《Lightning fast Machine Learning with Spark》](https://speakerdeck.com/nivdul/lightning-fast-machine-learning-with-spark)\n[《How we’re using machine learning to fight shell selling》](http://blog.wepay.com/how-were-using-machine-learning-to-fight-shell-selling/)\n[《Mining of Massive Datasets》](http://www.mmds.org/)\n[《Advances in Extreme Learning Machines》](https://aaltodoc.aalto.fi/bitstream/handle/123456789/15585/isbn9789526061498.pdf)\n[《The Curse of Dimensionality in classification》](http://www.visiondummy.com/2014/04/curse-dimensionality-affect-classification/)\n[《Demistifying LSTM Neural Networks》](http://blog.terminal.com/demistifying-long-short-term-memory-lstm-recurrent-neural-networks/)\n[《Decoding Dimensionality Reduction, PCA and SVD》](http://bigdata-madesimple.com/decoding-dimensionality-reduction-pca-and-svd/)\n[《What are the advantages of different classification algorithms?》](https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms/answer/Xavier-Amatriain)\n[《Kaggle R Tutorial on Machine Learning》 《Interactive R Tutorial: Machine Learning for the Titanic Competition》.](https://www.datacamp.com/courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic)\n[《Logistic Regression and Gradient Descent》](http://nbviewer.jupyter.org/github/tfolkman/learningwithdata/blob/master/Logistic%20Gradient%20Descent.ipynb)\n[《Stock Forecasting With Machine Learning - Seven Possible Errors》](http://www.anlytcs.com/2015/05/stock-forecasting-with-machine-learning.html)\n[《LR原理解析》](http://www.cnblogs.com/xiaowanyer/p/3701944.html)\n[《机器学习顶级会议和杂志》](http://icml.cc/2015/?page_id=175)\n[《贝耶斯回归材料》](http://blog.csdn.net/haoni123321/article/details/37913795)\n[《贝耶斯回归材料》](http://mindhacks.cn/2008/09/21/the-magical-bayesian-method)\n[《alphaGo原理解析》](https://www.youtube.com/watch?v=63FDxJ5e_Ew)\n[《理解卷积神经网络的文章》](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner's-Guide-To-Understanding-Convolutional-Neural-Networks/)\n[《Neural Networks and Deep Learning》](http://neuralnetworksanddeeplearning.com/)\n[ 通俗易懂介绍CNN ](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/)\n[ CS231n Convolutional Neural Networks for Visual Recognition ](http://cs231n.github.io/)\n","source":"_posts/机器学习相关材料.md","raw":"---\ntitle: 机器学习相关材料\ndate: 2016-07-13 20:42:36\ntags:\ncategories: MachineLearning\ntoc: true\n---\n# 数学基础\n- 1、微积分 http://v.163.com/special/sp/singlevariablecalculus.html  http://open.163.com/special/opencourse/multivariable.html\n- 2、线性代数 http://open.163.com/special/opencourse/daishu.html\n- 3、概率统计http://open.163.com/special/Khan/probability.html\n想要深入学习机器学习，需要具有扎实的数学基础（矩阵分析和概率统计是基础的理论）\n\n# 进阶版本数学基础课程\n- 1、最优化理论（重点凸优化理论）  http://stanford.edu/~boyd/cvxbook/   http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian\n- 2、时变函数与泛函分析 http://ocw.nctu.edu.tw/course_list.php?page=2&bgid=1&gid=1  http://open.163.com/special/opencourse/fanhanfenxi.html\n- 3、随机过程 Hyperlink: Stochastic Process MIT View the complete course: Discrete Stochastic Processes\n\n# 机器学习基础课程\n- 1、Coursera上Andrew Ng Andrew Ng的《机器学习》\n- 2、林軒田(国立台湾大学) 機器學習基石\n\n# 机器学习基础课程\n- 1、 《统计学习方法》李航\n- 2、 《机器学习导论》\n- 3、 《PRML》\n- 4、 《图解机器学习》[日]杉山将\n- 5、   Machine Learning: A Probabilistic Prespective （Kevin Murphy）\n- 6、   Pattern Recognition and Machine Learning （Christopher Bishop）\n- 7、 《Spark机器学习》\n- 8、 《机器学习实战》\n- 9、 《贝叶斯思维:统计建模的Python学习法》\n- 10、Python自然语言处理》\n- 11、数学之美 （吴军）\n- 12、Web智能算法 （Haralambos Marmanis, Dmitry Babenko）\n- 13、集体智慧编程 （Toby Segaran）\n- 14、推荐系统实践\n- 15、计算广告学\n\n# 深度学习（注定将成为最近几年的爆发式增长）\n- 1、《Deep Learning》http://www.deeplearningbook.org\n- 2、  CSDN Blog http://blog.csdn.net/zouxy09/article/details/8775360\n- 3、《斯坦福大学深度学习教程》http://ufldl.stanford.edu/tutorial\n\n# 杂项\n[《Choosing a Machine Learning Classifier》](http://blog.echen.me/2011/04/27/choosing-a-machine-learning-classifier/)\n[《An Introduction to Deep Learning: From Perceptrons to Deep Networks》](https://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks)  [译文](http://www.cnblogs.com/xiaowanyer/p/3701944.html)\n[《The LION Way: Machine Learning plus Intelligent Optimization》](http://vdisk.weibo.com/s/ayG13we2vxyKl)\n[《分布式并行处理的数据》](http://web.stanford.edu/group/pdplab/pdphandbook)\n[《Deep Learning for Natural Language Processing and Related Applications》](https://www.microsoft.com/en-us/research/publication/deep-learning-for-natural-language-processing-and-related-applications-tutorial-at-icassp/)\n[《Neural Networks and Deep Learning》](http://neuralnetworksanddeeplearning.com/index.html)\n[《分布式机器学习的故事》](http://cxwangyi.github.io/notes/2014-01-20-distributed-machine-learning.html)\n[《Deep Learning 101》](http://markus.com/deep-learning-101/)\n[《Deep learning from the bottom up》](https://metacademy.org/roadmaps/rgrosse/deep_learning)\n[《Deep Learning（深度学习）学习笔记整理系列》](http://blog.csdn.net/zouxy09/article/details/8775360)\n[《Google Turns To Deep Learning Classification To Fight Web Spam》](http://www.seobythesea.com/2014/09/google-turns-deep-learning-classification-fight-web-spam/)\n[《Deep Learning Sentiment Analysis for Movie Reviews using Neo4j》](http://neo4j.com/blog/deep-learning-sentiment-analysis-movie-reviews-using-neo4j/)\n[《EMNLP上两篇关于股票趋势的应用论文 》](http://emnlp2014.org/papers/pdf/EMNLP2014148.pdf)\n[《Learning to Rank for Information Retrieval and Natural Language Processing》](http://www.morganclaypool.com/doi/abs/10.2200/S00607ED2V01Y201410HLT026)\n[《Geoffrey E. Hinton》](http://www.cs.toronto.edu/~hinton/)\n[《Andrej Karpathy的深度强化学习演示》 论文在这里](http://cs.stanford.edu/people/karpathy/convnetjs/demo/rldemo.html)\n[《用大数据和机器学习做股票价格预测》](http://eugenezhulenev.com/blog/2014/11/14/stock-price-prediction-with-big-data-and-machine-learning/)\n[《Use Google's Word2Vec for movie reviews》](https://www.kaggle.com/c/word2vec-nlp-tutorial)\n[《深度卷积神经网络下围棋》](https://www.technologyreview.com/s/533496/why-neural-networks-look-set-to-thrash-the-best-human-go-players-for-the-first-time/)\n[《机器学习经典算法详解及Python实现--线性回归（Linear Regression）算法》](http://blog.csdn.net/suipingsp/article/details/42101139)\n[《Caffe》](http://caffe.berkeleyvision.org/)\n[《GoogLeNet深度学习模型的Caffe复现 》 GoogleNet论文](https://github.com/BVLC/caffe/blob/master/models/bvlc_googlenet/readme.md)\n[《Deep Learning实战之word2vec》](http://techblog.youdao.com/?p=915)\n[《A Deep Dive into Recurrent Neural Nets》](http://nikhilbuduma.com/2015/01/11/a-deep-dive-into-recurrent-neural-networks/)\n[《Geoffrey E. Hinton个人主页》](http://www.cs.toronto.edu/~hinton/)\n[《Deep Learning on Hadoop 2.0》](https://www.paypal-engineering.com/2015/01/12/deep-learning-on-hadoop-2-0-2/)\n[《美团推荐算法实践》](http://tech.meituan.com/mt-recommend-practice.html)\n[《The Trouble with SVMs》](http://v1v3kn.tumblr.com/post/47193952400/the-trouble-with-svms)\n[《Gaussian Processes for Machine Learning》](http://www.gaussianprocess.org/gpml/)\n[《Introduction to ARMA Time Series Models – simplified》](http://www.analyticsvidhya.com/blog/2015/03/introduction-auto-regression-moving-average-time-series/)\n[《Neural Net in C++ Tutorial》](https://vimeo.com/19569529)\n[《Deep Learning Tutorials》](http://deeplearning.net/tutorial/)\n[《Deep Learning, The Curse of Dimensionality, and Autoencoders》](http://www.kdnuggets.com/2015/03/deep-learning-curse-dimensionality-autoencoders.html)\n[《Topic modeling with LDA: MLlib meets GraphX》](https://databricks.com/blog/2015/03/25/topic-modeling-with-lda-mllib-meets-graphx.html)\n[《Deep Learning for Multi-label Classification》](https://arxiv.org/abs/1502.05988)\n[《Google DeepMind publications》  AlphaGo团队官方论文](https://deepmind.com/research/publications/)\n[《AM207: Monte Carlo Methods, Stochastic Optimization》](http://am207.org/)\n[《Back-to-Basics Weekend Reading - Machine Learning》](http://www.allthingsdistributed.com/2015/04/machine-learning.html)\n[《A Probabilistic Theory of Deep Learning》](https://arxiv.org/abs/1504.00641)\n[《How does Quora use machine learning in 2015?》](http://www.quora.com/How-does-Quora-use-machine-learning-in-2015/answer/Xavier-Amatriain)\n[《Parallel Machine Learning with scikit-learn and IPython》](https://github.com/ogrisel/parallel_ml_tutorial)\n[《Time Series Econometrics - A Concise Course》](http://www.ssc.upenn.edu/~fdiebold/Teaching706/econ706Penn.html)\n[《A comparison of open source tools for sentiment analysis》](http://fotiad.is/blog/sentiment-analysis-comparison/)\n[《International Joint Conference on Artificial Intelligence Accepted paper》](http://ijcai-15.org/index.php/accepted-papers)\n[《How to Evaluate Machine Learning Models, Part 1: Orientation》](https://declara.com/content/21bO33gn)\n[《Learning scikit-learn: Machine Learning in Python》](http://nbviewer.jupyter.org/github/gmonce/scikit-learn-book/tree/master/)\n[《Lightning fast Machine Learning with Spark》](https://speakerdeck.com/nivdul/lightning-fast-machine-learning-with-spark)\n[《How we’re using machine learning to fight shell selling》](http://blog.wepay.com/how-were-using-machine-learning-to-fight-shell-selling/)\n[《Mining of Massive Datasets》](http://www.mmds.org/)\n[《Advances in Extreme Learning Machines》](https://aaltodoc.aalto.fi/bitstream/handle/123456789/15585/isbn9789526061498.pdf)\n[《The Curse of Dimensionality in classification》](http://www.visiondummy.com/2014/04/curse-dimensionality-affect-classification/)\n[《Demistifying LSTM Neural Networks》](http://blog.terminal.com/demistifying-long-short-term-memory-lstm-recurrent-neural-networks/)\n[《Decoding Dimensionality Reduction, PCA and SVD》](http://bigdata-madesimple.com/decoding-dimensionality-reduction-pca-and-svd/)\n[《What are the advantages of different classification algorithms?》](https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms/answer/Xavier-Amatriain)\n[《Kaggle R Tutorial on Machine Learning》 《Interactive R Tutorial: Machine Learning for the Titanic Competition》.](https://www.datacamp.com/courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic)\n[《Logistic Regression and Gradient Descent》](http://nbviewer.jupyter.org/github/tfolkman/learningwithdata/blob/master/Logistic%20Gradient%20Descent.ipynb)\n[《Stock Forecasting With Machine Learning - Seven Possible Errors》](http://www.anlytcs.com/2015/05/stock-forecasting-with-machine-learning.html)\n[《LR原理解析》](http://www.cnblogs.com/xiaowanyer/p/3701944.html)\n[《机器学习顶级会议和杂志》](http://icml.cc/2015/?page_id=175)\n[《贝耶斯回归材料》](http://blog.csdn.net/haoni123321/article/details/37913795)\n[《贝耶斯回归材料》](http://mindhacks.cn/2008/09/21/the-magical-bayesian-method)\n[《alphaGo原理解析》](https://www.youtube.com/watch?v=63FDxJ5e_Ew)\n[《理解卷积神经网络的文章》](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner's-Guide-To-Understanding-Convolutional-Neural-Networks/)\n[《Neural Networks and Deep Learning》](http://neuralnetworksanddeeplearning.com/)\n[ 通俗易懂介绍CNN ](https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/)\n[ CS231n Convolutional Neural Networks for Visual Recognition ](http://cs231n.github.io/)\n","slug":"机器学习相关材料","published":1,"updated":"2017-04-20T08:49:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1en90053bnavwyusyjms","content":"<h1 id=\"&#x6570;&#x5B66;&#x57FA;&#x7840;\"><a href=\"#&#x6570;&#x5B66;&#x57FA;&#x7840;\" class=\"headerlink\" title=\"&#x6570;&#x5B66;&#x57FA;&#x7840;\"></a>&#x6570;&#x5B66;&#x57FA;&#x7840;</h1><ul>\n<li>1&#x3001;&#x5FAE;&#x79EF;&#x5206; <a href=\"http://v.163.com/special/sp/singlevariablecalculus.html\" target=\"_blank\" rel=\"external\">http://v.163.com/special/sp/singlevariablecalculus.html</a>  <a href=\"http://open.163.com/special/opencourse/multivariable.html\" target=\"_blank\" rel=\"external\">http://open.163.com/special/opencourse/multivariable.html</a></li>\n<li>2&#x3001;&#x7EBF;&#x6027;&#x4EE3;&#x6570; <a href=\"http://open.163.com/special/opencourse/daishu.html\" target=\"_blank\" rel=\"external\">http://open.163.com/special/opencourse/daishu.html</a></li>\n<li>3&#x3001;&#x6982;&#x7387;&#x7EDF;&#x8BA1;<a href=\"http://open.163.com/special/Khan/probability.html\" target=\"_blank\" rel=\"external\">http://open.163.com/special/Khan/probability.html</a><br>&#x60F3;&#x8981;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF0C;&#x9700;&#x8981;&#x5177;&#x6709;&#x624E;&#x5B9E;&#x7684;&#x6570;&#x5B66;&#x57FA;&#x7840;&#xFF08;&#x77E9;&#x9635;&#x5206;&#x6790;&#x548C;&#x6982;&#x7387;&#x7EDF;&#x8BA1;&#x662F;&#x57FA;&#x7840;&#x7684;&#x7406;&#x8BBA;&#xFF09;</li>\n</ul>\n<h1 id=\"&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\"><a href=\"#&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\" class=\"headerlink\" title=\"&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\"></a>&#x8FDB;&#x9636;&#x7248;&#x672C;&#x6570;&#x5B66;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>\n<li>1&#x3001;&#x6700;&#x4F18;&#x5316;&#x7406;&#x8BBA;&#xFF08;&#x91CD;&#x70B9;&#x51F8;&#x4F18;&#x5316;&#x7406;&#x8BBA;&#xFF09;  <a href=\"http://stanford.edu/~boyd/cvxbook/\" target=\"_blank\" rel=\"external\">http://stanford.edu/~boyd/cvxbook/</a>   <a href=\"http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian\" target=\"_blank\" rel=\"external\">http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian</a></li>\n<li>2&#x3001;&#x65F6;&#x53D8;&#x51FD;&#x6570;&#x4E0E;&#x6CDB;&#x51FD;&#x5206;&#x6790; <a href=\"http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1\" target=\"_blank\" rel=\"external\">http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1</a>  <a href=\"http://open.163.com/special/opencourse/fanhanfenxi.html\" target=\"_blank\" rel=\"external\">http://open.163.com/special/opencourse/fanhanfenxi.html</a></li>\n<li>3&#x3001;&#x968F;&#x673A;&#x8FC7;&#x7A0B; Hyperlink: Stochastic Process MIT View the complete course: Discrete Stochastic Processes</li>\n</ul>\n<h1 id=\"&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\"><a href=\"#&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\" class=\"headerlink\" title=\"&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\"></a>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>\n<li>1&#x3001;Coursera&#x4E0A;Andrew Ng Andrew Ng&#x7684;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</li>\n<li>2&#x3001;&#x6797;&#x8ED2;&#x7530;(&#x56FD;&#x7ACB;&#x53F0;&#x6E7E;&#x5927;&#x5B66;) &#x6A5F;&#x5668;&#x5B78;&#x7FD2;&#x57FA;&#x77F3;</li>\n</ul>\n<h1 id=\"&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;-1\"><a href=\"#&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;-1\" class=\"headerlink\" title=\"&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;\"></a>&#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840;&#x8BFE;&#x7A0B;</h1><ul>\n<li>1&#x3001; &#x300A;&#x7EDF;&#x8BA1;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;&#x300B;&#x674E;&#x822A;</li>\n<li>2&#x3001; &#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5BFC;&#x8BBA;&#x300B;</li>\n<li>3&#x3001; &#x300A;PRML&#x300B;</li>\n<li>4&#x3001; &#x300A;&#x56FE;&#x89E3;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;[&#x65E5;]&#x6749;&#x5C71;&#x5C06;</li>\n<li>5&#x3001;   Machine Learning: A Probabilistic Prespective &#xFF08;Kevin Murphy&#xFF09;</li>\n<li>6&#x3001;   Pattern Recognition and Machine Learning &#xFF08;Christopher Bishop&#xFF09;</li>\n<li>7&#x3001; &#x300A;Spark&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</li>\n<li>8&#x3001; &#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5B9E;&#x6218;&#x300B;</li>\n<li>9&#x3001; &#x300A;&#x8D1D;&#x53F6;&#x65AF;&#x601D;&#x7EF4;:&#x7EDF;&#x8BA1;&#x5EFA;&#x6A21;&#x7684;Python&#x5B66;&#x4E60;&#x6CD5;&#x300B;</li>\n<li>10&#x3001;Python&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x300B;</li>\n<li>11&#x3001;&#x6570;&#x5B66;&#x4E4B;&#x7F8E; &#xFF08;&#x5434;&#x519B;&#xFF09;</li>\n<li>12&#x3001;Web&#x667A;&#x80FD;&#x7B97;&#x6CD5; &#xFF08;Haralambos Marmanis, Dmitry Babenko&#xFF09;</li>\n<li>13&#x3001;&#x96C6;&#x4F53;&#x667A;&#x6167;&#x7F16;&#x7A0B; &#xFF08;Toby Segaran&#xFF09;</li>\n<li>14&#x3001;&#x63A8;&#x8350;&#x7CFB;&#x7EDF;&#x5B9E;&#x8DF5;</li>\n<li>15&#x3001;&#x8BA1;&#x7B97;&#x5E7F;&#x544A;&#x5B66;</li>\n</ul>\n<h1 id=\"&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;\"><a href=\"#&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;\" class=\"headerlink\" title=\"&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;\"></a>&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF08;&#x6CE8;&#x5B9A;&#x5C06;&#x6210;&#x4E3A;&#x6700;&#x8FD1;&#x51E0;&#x5E74;&#x7684;&#x7206;&#x53D1;&#x5F0F;&#x589E;&#x957F;&#xFF09;</h1><ul>\n<li>1&#x3001;&#x300A;Deep Learning&#x300B;<a href=\"http://www.deeplearningbook.org\" target=\"_blank\" rel=\"external\">http://www.deeplearningbook.org</a></li>\n<li>2&#x3001;  CSDN Blog <a href=\"http://blog.csdn.net/zouxy09/article/details/8775360\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zouxy09/article/details/8775360</a></li>\n<li>3&#x3001;&#x300A;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x6559;&#x7A0B;&#x300B;<a href=\"http://ufldl.stanford.edu/tutorial\" target=\"_blank\" rel=\"external\">http://ufldl.stanford.edu/tutorial</a></li>\n</ul>\n<h1 id=\"&#x6742;&#x9879;\"><a href=\"#&#x6742;&#x9879;\" class=\"headerlink\" title=\"&#x6742;&#x9879;\"></a>&#x6742;&#x9879;</h1><p><a href=\"http://blog.echen.me/2011/04/27/choosing-a-machine-learning-classifier/\" target=\"_blank\" rel=\"external\">&#x300A;Choosing a Machine Learning Classifier&#x300B;</a><br><a href=\"https://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks\" target=\"_blank\" rel=\"external\">&#x300A;An Introduction to Deep Learning: From Perceptrons to Deep Networks&#x300B;</a>  <a href=\"http://www.cnblogs.com/xiaowanyer/p/3701944.html\" target=\"_blank\" rel=\"external\">&#x8BD1;&#x6587;</a><br><a href=\"http://vdisk.weibo.com/s/ayG13we2vxyKl\" target=\"_blank\" rel=\"external\">&#x300A;The LION Way: Machine Learning plus Intelligent Optimization&#x300B;</a><br><a href=\"http://web.stanford.edu/group/pdplab/pdphandbook\" target=\"_blank\" rel=\"external\">&#x300A;&#x5206;&#x5E03;&#x5F0F;&#x5E76;&#x884C;&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x300B;</a><br><a href=\"https://www.microsoft.com/en-us/research/publication/deep-learning-for-natural-language-processing-and-related-applications-tutorial-at-icassp/\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning for Natural Language Processing and Related Applications&#x300B;</a><br><a href=\"http://neuralnetworksanddeeplearning.com/index.html\" target=\"_blank\" rel=\"external\">&#x300A;Neural Networks and Deep Learning&#x300B;</a><br><a href=\"http://cxwangyi.github.io/notes/2014-01-20-distributed-machine-learning.html\" target=\"_blank\" rel=\"external\">&#x300A;&#x5206;&#x5E03;&#x5F0F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x6545;&#x4E8B;&#x300B;</a><br><a href=\"http://markus.com/deep-learning-101/\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning 101&#x300B;</a><br><a href=\"https://metacademy.org/roadmaps/rgrosse/deep_learning\" target=\"_blank\" rel=\"external\">&#x300A;Deep learning from the bottom up&#x300B;</a><br><a href=\"http://blog.csdn.net/zouxy09/article/details/8775360\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning&#xFF08;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF09;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x6574;&#x7406;&#x7CFB;&#x5217;&#x300B;</a><br><a href=\"http://www.seobythesea.com/2014/09/google-turns-deep-learning-classification-fight-web-spam/\" target=\"_blank\" rel=\"external\">&#x300A;Google Turns To Deep Learning Classification To Fight Web Spam&#x300B;</a><br><a href=\"http://neo4j.com/blog/deep-learning-sentiment-analysis-movie-reviews-using-neo4j/\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning Sentiment Analysis for Movie Reviews using Neo4j&#x300B;</a><br><a href=\"http://emnlp2014.org/papers/pdf/EMNLP2014148.pdf\" target=\"_blank\" rel=\"external\">&#x300A;EMNLP&#x4E0A;&#x4E24;&#x7BC7;&#x5173;&#x4E8E;&#x80A1;&#x7968;&#x8D8B;&#x52BF;&#x7684;&#x5E94;&#x7528;&#x8BBA;&#x6587; &#x300B;</a><br><a href=\"http://www.morganclaypool.com/doi/abs/10.2200/S00607ED2V01Y201410HLT026\" target=\"_blank\" rel=\"external\">&#x300A;Learning to Rank for Information Retrieval and Natural Language Processing&#x300B;</a><br><a href=\"http://www.cs.toronto.edu/~hinton/\" target=\"_blank\" rel=\"external\">&#x300A;Geoffrey E. Hinton&#x300B;</a><br><a href=\"http://cs.stanford.edu/people/karpathy/convnetjs/demo/rldemo.html\" target=\"_blank\" rel=\"external\">&#x300A;Andrej Karpathy&#x7684;&#x6DF1;&#x5EA6;&#x5F3A;&#x5316;&#x5B66;&#x4E60;&#x6F14;&#x793A;&#x300B; &#x8BBA;&#x6587;&#x5728;&#x8FD9;&#x91CC;</a><br><a href=\"http://eugenezhulenev.com/blog/2014/11/14/stock-price-prediction-with-big-data-and-machine-learning/\" target=\"_blank\" rel=\"external\">&#x300A;&#x7528;&#x5927;&#x6570;&#x636E;&#x548C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x505A;&#x80A1;&#x7968;&#x4EF7;&#x683C;&#x9884;&#x6D4B;&#x300B;</a><br><a href=\"https://www.kaggle.com/c/word2vec-nlp-tutorial\" target=\"_blank\" rel=\"external\">&#x300A;Use Google&#x2019;s Word2Vec for movie reviews&#x300B;</a><br><a href=\"https://www.technologyreview.com/s/533496/why-neural-networks-look-set-to-thrash-the-best-human-go-players-for-the-first-time/\" target=\"_blank\" rel=\"external\">&#x300A;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E0B;&#x56F4;&#x68CB;&#x300B;</a><br><a href=\"http://blog.csdn.net/suipingsp/article/details/42101139\" target=\"_blank\" rel=\"external\">&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7ECF;&#x5178;&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;&#x53CA;Python&#x5B9E;&#x73B0;&#x2013;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF08;Linear Regression&#xFF09;&#x7B97;&#x6CD5;&#x300B;</a><br><a href=\"http://caffe.berkeleyvision.org/\" target=\"_blank\" rel=\"external\">&#x300A;Caffe&#x300B;</a><br><a href=\"https://github.com/BVLC/caffe/blob/master/models/bvlc_googlenet/readme.md\" target=\"_blank\" rel=\"external\">&#x300A;GoogLeNet&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x6A21;&#x578B;&#x7684;Caffe&#x590D;&#x73B0; &#x300B; GoogleNet&#x8BBA;&#x6587;</a><br><a href=\"http://techblog.youdao.com/?p=915\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning&#x5B9E;&#x6218;&#x4E4B;word2vec&#x300B;</a><br><a href=\"http://nikhilbuduma.com/2015/01/11/a-deep-dive-into-recurrent-neural-networks/\" target=\"_blank\" rel=\"external\">&#x300A;A Deep Dive into Recurrent Neural Nets&#x300B;</a><br><a href=\"http://www.cs.toronto.edu/~hinton/\" target=\"_blank\" rel=\"external\">&#x300A;Geoffrey E. Hinton&#x4E2A;&#x4EBA;&#x4E3B;&#x9875;&#x300B;</a><br><a href=\"https://www.paypal-engineering.com/2015/01/12/deep-learning-on-hadoop-2-0-2/\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning on Hadoop 2.0&#x300B;</a><br><a href=\"http://tech.meituan.com/mt-recommend-practice.html\" target=\"_blank\" rel=\"external\">&#x300A;&#x7F8E;&#x56E2;&#x63A8;&#x8350;&#x7B97;&#x6CD5;&#x5B9E;&#x8DF5;&#x300B;</a><br><a href=\"http://v1v3kn.tumblr.com/post/47193952400/the-trouble-with-svms\" target=\"_blank\" rel=\"external\">&#x300A;The Trouble with SVMs&#x300B;</a><br><a href=\"http://www.gaussianprocess.org/gpml/\" target=\"_blank\" rel=\"external\">&#x300A;Gaussian Processes for Machine Learning&#x300B;</a><br><a href=\"http://www.analyticsvidhya.com/blog/2015/03/introduction-auto-regression-moving-average-time-series/\" target=\"_blank\" rel=\"external\">&#x300A;Introduction to ARMA Time Series Models &#x2013; simplified&#x300B;</a><br><a href=\"https://vimeo.com/19569529\" target=\"_blank\" rel=\"external\">&#x300A;Neural Net in C++ Tutorial&#x300B;</a><br><a href=\"http://deeplearning.net/tutorial/\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning Tutorials&#x300B;</a><br><a href=\"http://www.kdnuggets.com/2015/03/deep-learning-curse-dimensionality-autoencoders.html\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning, The Curse of Dimensionality, and Autoencoders&#x300B;</a><br><a href=\"https://databricks.com/blog/2015/03/25/topic-modeling-with-lda-mllib-meets-graphx.html\" target=\"_blank\" rel=\"external\">&#x300A;Topic modeling with LDA: MLlib meets GraphX&#x300B;</a><br><a href=\"https://arxiv.org/abs/1502.05988\" target=\"_blank\" rel=\"external\">&#x300A;Deep Learning for Multi-label Classification&#x300B;</a><br><a href=\"https://deepmind.com/research/publications/\" target=\"_blank\" rel=\"external\">&#x300A;Google DeepMind publications&#x300B;  AlphaGo&#x56E2;&#x961F;&#x5B98;&#x65B9;&#x8BBA;&#x6587;</a><br><a href=\"http://am207.org/\" target=\"_blank\" rel=\"external\">&#x300A;AM207: Monte Carlo Methods, Stochastic Optimization&#x300B;</a><br><a href=\"http://www.allthingsdistributed.com/2015/04/machine-learning.html\" target=\"_blank\" rel=\"external\">&#x300A;Back-to-Basics Weekend Reading - Machine Learning&#x300B;</a><br><a href=\"https://arxiv.org/abs/1504.00641\" target=\"_blank\" rel=\"external\">&#x300A;A Probabilistic Theory of Deep Learning&#x300B;</a><br><a href=\"http://www.quora.com/How-does-Quora-use-machine-learning-in-2015/answer/Xavier-Amatriain\" target=\"_blank\" rel=\"external\">&#x300A;How does Quora use machine learning in 2015?&#x300B;</a><br><a href=\"https://github.com/ogrisel/parallel_ml_tutorial\" target=\"_blank\" rel=\"external\">&#x300A;Parallel Machine Learning with scikit-learn and IPython&#x300B;</a><br><a href=\"http://www.ssc.upenn.edu/~fdiebold/Teaching706/econ706Penn.html\" target=\"_blank\" rel=\"external\">&#x300A;Time Series Econometrics - A Concise Course&#x300B;</a><br><a href=\"http://fotiad.is/blog/sentiment-analysis-comparison/\" target=\"_blank\" rel=\"external\">&#x300A;A comparison of open source tools for sentiment analysis&#x300B;</a><br><a href=\"http://ijcai-15.org/index.php/accepted-papers\" target=\"_blank\" rel=\"external\">&#x300A;International Joint Conference on Artificial Intelligence Accepted paper&#x300B;</a><br><a href=\"https://declara.com/content/21bO33gn\" target=\"_blank\" rel=\"external\">&#x300A;How to Evaluate Machine Learning Models, Part 1: Orientation&#x300B;</a><br><a href=\"http://nbviewer.jupyter.org/github/gmonce/scikit-learn-book/tree/master/\" target=\"_blank\" rel=\"external\">&#x300A;Learning scikit-learn: Machine Learning in Python&#x300B;</a><br><a href=\"https://speakerdeck.com/nivdul/lightning-fast-machine-learning-with-spark\" target=\"_blank\" rel=\"external\">&#x300A;Lightning fast Machine Learning with Spark&#x300B;</a><br><a href=\"http://blog.wepay.com/how-were-using-machine-learning-to-fight-shell-selling/\" target=\"_blank\" rel=\"external\">&#x300A;How we&#x2019;re using machine learning to fight shell selling&#x300B;</a><br><a href=\"http://www.mmds.org/\" target=\"_blank\" rel=\"external\">&#x300A;Mining of Massive Datasets&#x300B;</a><br><a href=\"https://aaltodoc.aalto.fi/bitstream/handle/123456789/15585/isbn9789526061498.pdf\" target=\"_blank\" rel=\"external\">&#x300A;Advances in Extreme Learning Machines&#x300B;</a><br><a href=\"http://www.visiondummy.com/2014/04/curse-dimensionality-affect-classification/\" target=\"_blank\" rel=\"external\">&#x300A;The Curse of Dimensionality in classification&#x300B;</a><br><a href=\"http://blog.terminal.com/demistifying-long-short-term-memory-lstm-recurrent-neural-networks/\" target=\"_blank\" rel=\"external\">&#x300A;Demistifying LSTM Neural Networks&#x300B;</a><br><a href=\"http://bigdata-madesimple.com/decoding-dimensionality-reduction-pca-and-svd/\" target=\"_blank\" rel=\"external\">&#x300A;Decoding Dimensionality Reduction, PCA and SVD&#x300B;</a><br><a href=\"https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms/answer/Xavier-Amatriain\" target=\"_blank\" rel=\"external\">&#x300A;What are the advantages of different classification algorithms?&#x300B;</a><br><a href=\"https://www.datacamp.com/courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic\" target=\"_blank\" rel=\"external\">&#x300A;Kaggle R Tutorial on Machine Learning&#x300B; &#x300A;Interactive R Tutorial: Machine Learning for the Titanic Competition&#x300B;.</a><br><a href=\"http://nbviewer.jupyter.org/github/tfolkman/learningwithdata/blob/master/Logistic%20Gradient%20Descent.ipynb\" target=\"_blank\" rel=\"external\">&#x300A;Logistic Regression and Gradient Descent&#x300B;</a><br><a href=\"http://www.anlytcs.com/2015/05/stock-forecasting-with-machine-learning.html\" target=\"_blank\" rel=\"external\">&#x300A;Stock Forecasting With Machine Learning - Seven Possible Errors&#x300B;</a><br><a href=\"http://www.cnblogs.com/xiaowanyer/p/3701944.html\" target=\"_blank\" rel=\"external\">&#x300A;LR&#x539F;&#x7406;&#x89E3;&#x6790;&#x300B;</a><br><a href=\"http://icml.cc/2015/?page_id=175\" target=\"_blank\" rel=\"external\">&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9876;&#x7EA7;&#x4F1A;&#x8BAE;&#x548C;&#x6742;&#x5FD7;&#x300B;</a><br><a href=\"http://blog.csdn.net/haoni123321/article/details/37913795\" target=\"_blank\" rel=\"external\">&#x300A;&#x8D1D;&#x8036;&#x65AF;&#x56DE;&#x5F52;&#x6750;&#x6599;&#x300B;</a><br><a href=\"http://mindhacks.cn/2008/09/21/the-magical-bayesian-method\" target=\"_blank\" rel=\"external\">&#x300A;&#x8D1D;&#x8036;&#x65AF;&#x56DE;&#x5F52;&#x6750;&#x6599;&#x300B;</a><br><a href=\"https://www.youtube.com/watch?v=63FDxJ5e_Ew\" target=\"_blank\" rel=\"external\">&#x300A;alphaGo&#x539F;&#x7406;&#x89E3;&#x6790;&#x300B;</a><br><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&apos;s-Guide-To-Understanding-Convolutional-Neural-Networks/\" target=\"_blank\" rel=\"external\">&#x300A;&#x7406;&#x89E3;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6587;&#x7AE0;&#x300B;</a><br><a href=\"http://neuralnetworksanddeeplearning.com/\" target=\"_blank\" rel=\"external\">&#x300A;Neural Networks and Deep Learning&#x300B;</a><br><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/\" target=\"_blank\" rel=\"external\"> &#x901A;&#x4FD7;&#x6613;&#x61C2;&#x4ECB;&#x7ECD;CNN </a><br><a href=\"http://cs231n.github.io/\" target=\"_blank\" rel=\"external\"> CS231n Convolutional Neural Networks for Visual Recognition </a></p>\n","excerpt":"","more":"<h1 id=\"数学基础\"><a href=\"#数学基础\" class=\"headerlink\" title=\"数学基础\"></a>数学基础</h1><ul>\n<li>1、微积分 <a href=\"http://v.163.com/special/sp/singlevariablecalculus.html\">http://v.163.com/special/sp/singlevariablecalculus.html</a>  <a href=\"http://open.163.com/special/opencourse/multivariable.html\">http://open.163.com/special/opencourse/multivariable.html</a></li>\n<li>2、线性代数 <a href=\"http://open.163.com/special/opencourse/daishu.html\">http://open.163.com/special/opencourse/daishu.html</a></li>\n<li>3、概率统计<a href=\"http://open.163.com/special/Khan/probability.html\">http://open.163.com/special/Khan/probability.html</a><br>想要深入学习机器学习，需要具有扎实的数学基础（矩阵分析和概率统计是基础的理论）</li>\n</ul>\n<h1 id=\"进阶版本数学基础课程\"><a href=\"#进阶版本数学基础课程\" class=\"headerlink\" title=\"进阶版本数学基础课程\"></a>进阶版本数学基础课程</h1><ul>\n<li>1、最优化理论（重点凸优化理论）  <a href=\"http://stanford.edu/~boyd/cvxbook/\">http://stanford.edu/~boyd/cvxbook/</a>   <a href=\"http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian\">http://xiaoyc.com/duality-theory-for-optimization/#1-1-lagrangian</a></li>\n<li>2、时变函数与泛函分析 <a href=\"http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1\">http://ocw.nctu.edu.tw/course_list.php?page=2&amp;bgid=1&amp;gid=1</a>  <a href=\"http://open.163.com/special/opencourse/fanhanfenxi.html\">http://open.163.com/special/opencourse/fanhanfenxi.html</a></li>\n<li>3、随机过程 Hyperlink: Stochastic Process MIT View the complete course: Discrete Stochastic Processes</li>\n</ul>\n<h1 id=\"机器学习基础课程\"><a href=\"#机器学习基础课程\" class=\"headerlink\" title=\"机器学习基础课程\"></a>机器学习基础课程</h1><ul>\n<li>1、Coursera上Andrew Ng Andrew Ng的《机器学习》</li>\n<li>2、林軒田(国立台湾大学) 機器學習基石</li>\n</ul>\n<h1 id=\"机器学习基础课程-1\"><a href=\"#机器学习基础课程-1\" class=\"headerlink\" title=\"机器学习基础课程\"></a>机器学习基础课程</h1><ul>\n<li>1、 《统计学习方法》李航</li>\n<li>2、 《机器学习导论》</li>\n<li>3、 《PRML》</li>\n<li>4、 《图解机器学习》[日]杉山将</li>\n<li>5、   Machine Learning: A Probabilistic Prespective （Kevin Murphy）</li>\n<li>6、   Pattern Recognition and Machine Learning （Christopher Bishop）</li>\n<li>7、 《Spark机器学习》</li>\n<li>8、 《机器学习实战》</li>\n<li>9、 《贝叶斯思维:统计建模的Python学习法》</li>\n<li>10、Python自然语言处理》</li>\n<li>11、数学之美 （吴军）</li>\n<li>12、Web智能算法 （Haralambos Marmanis, Dmitry Babenko）</li>\n<li>13、集体智慧编程 （Toby Segaran）</li>\n<li>14、推荐系统实践</li>\n<li>15、计算广告学</li>\n</ul>\n<h1 id=\"深度学习（注定将成为最近几年的爆发式增长）\"><a href=\"#深度学习（注定将成为最近几年的爆发式增长）\" class=\"headerlink\" title=\"深度学习（注定将成为最近几年的爆发式增长）\"></a>深度学习（注定将成为最近几年的爆发式增长）</h1><ul>\n<li>1、《Deep Learning》<a href=\"http://www.deeplearningbook.org\">http://www.deeplearningbook.org</a></li>\n<li>2、  CSDN Blog <a href=\"http://blog.csdn.net/zouxy09/article/details/8775360\">http://blog.csdn.net/zouxy09/article/details/8775360</a></li>\n<li>3、《斯坦福大学深度学习教程》<a href=\"http://ufldl.stanford.edu/tutorial\">http://ufldl.stanford.edu/tutorial</a></li>\n</ul>\n<h1 id=\"杂项\"><a href=\"#杂项\" class=\"headerlink\" title=\"杂项\"></a>杂项</h1><p><a href=\"http://blog.echen.me/2011/04/27/choosing-a-machine-learning-classifier/\">《Choosing a Machine Learning Classifier》</a><br><a href=\"https://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks\">《An Introduction to Deep Learning: From Perceptrons to Deep Networks》</a>  <a href=\"http://www.cnblogs.com/xiaowanyer/p/3701944.html\">译文</a><br><a href=\"http://vdisk.weibo.com/s/ayG13we2vxyKl\">《The LION Way: Machine Learning plus Intelligent Optimization》</a><br><a href=\"http://web.stanford.edu/group/pdplab/pdphandbook\">《分布式并行处理的数据》</a><br><a href=\"https://www.microsoft.com/en-us/research/publication/deep-learning-for-natural-language-processing-and-related-applications-tutorial-at-icassp/\">《Deep Learning for Natural Language Processing and Related Applications》</a><br><a href=\"http://neuralnetworksanddeeplearning.com/index.html\">《Neural Networks and Deep Learning》</a><br><a href=\"http://cxwangyi.github.io/notes/2014-01-20-distributed-machine-learning.html\">《分布式机器学习的故事》</a><br><a href=\"http://markus.com/deep-learning-101/\">《Deep Learning 101》</a><br><a href=\"https://metacademy.org/roadmaps/rgrosse/deep_learning\">《Deep learning from the bottom up》</a><br><a href=\"http://blog.csdn.net/zouxy09/article/details/8775360\">《Deep Learning（深度学习）学习笔记整理系列》</a><br><a href=\"http://www.seobythesea.com/2014/09/google-turns-deep-learning-classification-fight-web-spam/\">《Google Turns To Deep Learning Classification To Fight Web Spam》</a><br><a href=\"http://neo4j.com/blog/deep-learning-sentiment-analysis-movie-reviews-using-neo4j/\">《Deep Learning Sentiment Analysis for Movie Reviews using Neo4j》</a><br><a href=\"http://emnlp2014.org/papers/pdf/EMNLP2014148.pdf\">《EMNLP上两篇关于股票趋势的应用论文 》</a><br><a href=\"http://www.morganclaypool.com/doi/abs/10.2200/S00607ED2V01Y201410HLT026\">《Learning to Rank for Information Retrieval and Natural Language Processing》</a><br><a href=\"http://www.cs.toronto.edu/~hinton/\">《Geoffrey E. Hinton》</a><br><a href=\"http://cs.stanford.edu/people/karpathy/convnetjs/demo/rldemo.html\">《Andrej Karpathy的深度强化学习演示》 论文在这里</a><br><a href=\"http://eugenezhulenev.com/blog/2014/11/14/stock-price-prediction-with-big-data-and-machine-learning/\">《用大数据和机器学习做股票价格预测》</a><br><a href=\"https://www.kaggle.com/c/word2vec-nlp-tutorial\">《Use Google’s Word2Vec for movie reviews》</a><br><a href=\"https://www.technologyreview.com/s/533496/why-neural-networks-look-set-to-thrash-the-best-human-go-players-for-the-first-time/\">《深度卷积神经网络下围棋》</a><br><a href=\"http://blog.csdn.net/suipingsp/article/details/42101139\">《机器学习经典算法详解及Python实现–线性回归（Linear Regression）算法》</a><br><a href=\"http://caffe.berkeleyvision.org/\">《Caffe》</a><br><a href=\"https://github.com/BVLC/caffe/blob/master/models/bvlc_googlenet/readme.md\">《GoogLeNet深度学习模型的Caffe复现 》 GoogleNet论文</a><br><a href=\"http://techblog.youdao.com/?p=915\">《Deep Learning实战之word2vec》</a><br><a href=\"http://nikhilbuduma.com/2015/01/11/a-deep-dive-into-recurrent-neural-networks/\">《A Deep Dive into Recurrent Neural Nets》</a><br><a href=\"http://www.cs.toronto.edu/~hinton/\">《Geoffrey E. Hinton个人主页》</a><br><a href=\"https://www.paypal-engineering.com/2015/01/12/deep-learning-on-hadoop-2-0-2/\">《Deep Learning on Hadoop 2.0》</a><br><a href=\"http://tech.meituan.com/mt-recommend-practice.html\">《美团推荐算法实践》</a><br><a href=\"http://v1v3kn.tumblr.com/post/47193952400/the-trouble-with-svms\">《The Trouble with SVMs》</a><br><a href=\"http://www.gaussianprocess.org/gpml/\">《Gaussian Processes for Machine Learning》</a><br><a href=\"http://www.analyticsvidhya.com/blog/2015/03/introduction-auto-regression-moving-average-time-series/\">《Introduction to ARMA Time Series Models – simplified》</a><br><a href=\"https://vimeo.com/19569529\">《Neural Net in C++ Tutorial》</a><br><a href=\"http://deeplearning.net/tutorial/\">《Deep Learning Tutorials》</a><br><a href=\"http://www.kdnuggets.com/2015/03/deep-learning-curse-dimensionality-autoencoders.html\">《Deep Learning, The Curse of Dimensionality, and Autoencoders》</a><br><a href=\"https://databricks.com/blog/2015/03/25/topic-modeling-with-lda-mllib-meets-graphx.html\">《Topic modeling with LDA: MLlib meets GraphX》</a><br><a href=\"https://arxiv.org/abs/1502.05988\">《Deep Learning for Multi-label Classification》</a><br><a href=\"https://deepmind.com/research/publications/\">《Google DeepMind publications》  AlphaGo团队官方论文</a><br><a href=\"http://am207.org/\">《AM207: Monte Carlo Methods, Stochastic Optimization》</a><br><a href=\"http://www.allthingsdistributed.com/2015/04/machine-learning.html\">《Back-to-Basics Weekend Reading - Machine Learning》</a><br><a href=\"https://arxiv.org/abs/1504.00641\">《A Probabilistic Theory of Deep Learning》</a><br><a href=\"http://www.quora.com/How-does-Quora-use-machine-learning-in-2015/answer/Xavier-Amatriain\">《How does Quora use machine learning in 2015?》</a><br><a href=\"https://github.com/ogrisel/parallel_ml_tutorial\">《Parallel Machine Learning with scikit-learn and IPython》</a><br><a href=\"http://www.ssc.upenn.edu/~fdiebold/Teaching706/econ706Penn.html\">《Time Series Econometrics - A Concise Course》</a><br><a href=\"http://fotiad.is/blog/sentiment-analysis-comparison/\">《A comparison of open source tools for sentiment analysis》</a><br><a href=\"http://ijcai-15.org/index.php/accepted-papers\">《International Joint Conference on Artificial Intelligence Accepted paper》</a><br><a href=\"https://declara.com/content/21bO33gn\">《How to Evaluate Machine Learning Models, Part 1: Orientation》</a><br><a href=\"http://nbviewer.jupyter.org/github/gmonce/scikit-learn-book/tree/master/\">《Learning scikit-learn: Machine Learning in Python》</a><br><a href=\"https://speakerdeck.com/nivdul/lightning-fast-machine-learning-with-spark\">《Lightning fast Machine Learning with Spark》</a><br><a href=\"http://blog.wepay.com/how-were-using-machine-learning-to-fight-shell-selling/\">《How we’re using machine learning to fight shell selling》</a><br><a href=\"http://www.mmds.org/\">《Mining of Massive Datasets》</a><br><a href=\"https://aaltodoc.aalto.fi/bitstream/handle/123456789/15585/isbn9789526061498.pdf\">《Advances in Extreme Learning Machines》</a><br><a href=\"http://www.visiondummy.com/2014/04/curse-dimensionality-affect-classification/\">《The Curse of Dimensionality in classification》</a><br><a href=\"http://blog.terminal.com/demistifying-long-short-term-memory-lstm-recurrent-neural-networks/\">《Demistifying LSTM Neural Networks》</a><br><a href=\"http://bigdata-madesimple.com/decoding-dimensionality-reduction-pca-and-svd/\">《Decoding Dimensionality Reduction, PCA and SVD》</a><br><a href=\"https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms/answer/Xavier-Amatriain\">《What are the advantages of different classification algorithms?》</a><br><a href=\"https://www.datacamp.com/courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic\">《Kaggle R Tutorial on Machine Learning》 《Interactive R Tutorial: Machine Learning for the Titanic Competition》.</a><br><a href=\"http://nbviewer.jupyter.org/github/tfolkman/learningwithdata/blob/master/Logistic%20Gradient%20Descent.ipynb\">《Logistic Regression and Gradient Descent》</a><br><a href=\"http://www.anlytcs.com/2015/05/stock-forecasting-with-machine-learning.html\">《Stock Forecasting With Machine Learning - Seven Possible Errors》</a><br><a href=\"http://www.cnblogs.com/xiaowanyer/p/3701944.html\">《LR原理解析》</a><br><a href=\"http://icml.cc/2015/?page_id=175\">《机器学习顶级会议和杂志》</a><br><a href=\"http://blog.csdn.net/haoni123321/article/details/37913795\">《贝耶斯回归材料》</a><br><a href=\"http://mindhacks.cn/2008/09/21/the-magical-bayesian-method\">《贝耶斯回归材料》</a><br><a href=\"https://www.youtube.com/watch?v=63FDxJ5e_Ew\">《alphaGo原理解析》</a><br><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner&#39;s-Guide-To-Understanding-Convolutional-Neural-Networks/\">《理解卷积神经网络的文章》</a><br><a href=\"http://neuralnetworksanddeeplearning.com/\">《Neural Networks and Deep Learning》</a><br><a href=\"https://adeshpande3.github.io/adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/\"> 通俗易懂介绍CNN </a><br><a href=\"http://cs231n.github.io/\"> CS231n Convolutional Neural Networks for Visual Recognition </a></p>\n"},{"title":"深度学习中的几个经典问题","date":"2017-04-26T06:27:34.000Z","_content":"\n\n-   DROPOUT 为啥能够客服过拟合，怎么样理解\n-   梯度弥散是什么含义\n-   ReLu有什么特点，有哪些变种\n","source":"_posts/深度学习中的几个经典问题.md","raw":"---\ntitle: 深度学习中的几个经典问题\ndate: 2017-04-26 14:27:34\ntags:\n---\n\n\n-   DROPOUT 为啥能够客服过拟合，怎么样理解\n-   梯度弥散是什么含义\n-   ReLu有什么特点，有哪些变种\n","slug":"深度学习中的几个经典问题","published":1,"updated":"2017-04-26T06:30:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ena0054bnav56v0smee","content":"<ul>\n<li>DROPOUT &#x4E3A;&#x5565;&#x80FD;&#x591F;&#x5BA2;&#x670D;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x600E;&#x4E48;&#x6837;&#x7406;&#x89E3;</li>\n<li>&#x68AF;&#x5EA6;&#x5F25;&#x6563;&#x662F;&#x4EC0;&#x4E48;&#x542B;&#x4E49;</li>\n<li>ReLu&#x6709;&#x4EC0;&#x4E48;&#x7279;&#x70B9;&#xFF0C;&#x6709;&#x54EA;&#x4E9B;&#x53D8;&#x79CD;</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>DROPOUT 为啥能够客服过拟合，怎么样理解</li>\n<li>梯度弥散是什么含义</li>\n<li>ReLu有什么特点，有哪些变种</li>\n</ul>\n"},{"title":"读书清单","date":"2019-05-22T02:10:11.000Z","_content":"# 读书清单\n\n|  书名                       |  读书计划      |\n|  -------------              |  ------------- |\n|  《精通特征工程》           |  b             |\n|  《Python统计分析》         |  Done          |\n|  《性能》                   |  b             |\n|  《机器学习》               |  b             |\n|  《Hadoop权威指南》         |  Done          |\n|  《MapReduce设计模式》      |  b             |\n|  《Spring实战》             |  b             |\n|  《Akka》                   |  Done          |\n|  《JVM》                    |  b             |\n|  《JAVA性能调优》           |  b             |\n|  《Hbase权威指南》          |  b             |\n|  《图解深度学习》           |  b             |\n|  《程序员的数据之二》       |  b             |\n|  《Scala集合技术手册》      |  Done          |\n|  《高性能Scala》            |  Done          |\n|  《Scala函数式编程》        |  b             |\n|  《Scala编程》              |  Done          |\n|  《Scala并发编程》          |  Done          |\n|  《图解设计模式》           |  b             |\n|  《Scala设计模式》          |  b             |\n|  《Gof设计模式》            |  b             |\n|  《图解设计模式》           |  b             |\n|  《Scala Machine Learning》 |  b             |\n|  《算法》                   |  b             |\n|  《JAVA函数式编程》         |  b             |\n\n\n- 《聊聊什么是函数式》\n- 《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》\n- 《Scala的Option》\n- FoldLeft 和 FoldRight有什么区别\n","source":"_posts/读书清单.md","raw":"---\ntitle: 读书清单\ndate: 2019-05-22 10:10:11\ntags: Scala\n---\n# 读书清单\n\n|  书名                       |  读书计划      |\n|  -------------              |  ------------- |\n|  《精通特征工程》           |  b             |\n|  《Python统计分析》         |  Done          |\n|  《性能》                   |  b             |\n|  《机器学习》               |  b             |\n|  《Hadoop权威指南》         |  Done          |\n|  《MapReduce设计模式》      |  b             |\n|  《Spring实战》             |  b             |\n|  《Akka》                   |  Done          |\n|  《JVM》                    |  b             |\n|  《JAVA性能调优》           |  b             |\n|  《Hbase权威指南》          |  b             |\n|  《图解深度学习》           |  b             |\n|  《程序员的数据之二》       |  b             |\n|  《Scala集合技术手册》      |  Done          |\n|  《高性能Scala》            |  Done          |\n|  《Scala函数式编程》        |  b             |\n|  《Scala编程》              |  Done          |\n|  《Scala并发编程》          |  Done          |\n|  《图解设计模式》           |  b             |\n|  《Scala设计模式》          |  b             |\n|  《Gof设计模式》            |  b             |\n|  《图解设计模式》           |  b             |\n|  《Scala Machine Learning》 |  b             |\n|  《算法》                   |  b             |\n|  《JAVA函数式编程》         |  b             |\n\n\n- 《聊聊什么是函数式》\n- 《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》\n- 《Scala的Option》\n- FoldLeft 和 FoldRight有什么区别\n","slug":"读书清单","published":1,"updated":"2019-10-12T07:31:35.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1enb0057bnavvg4iiawv","content":"<h1 id=\"&#x8BFB;&#x4E66;&#x6E05;&#x5355;\"><a href=\"#&#x8BFB;&#x4E66;&#x6E05;&#x5355;\" class=\"headerlink\" title=\"&#x8BFB;&#x4E66;&#x6E05;&#x5355;\"></a>&#x8BFB;&#x4E66;&#x6E05;&#x5355;</h1><table>\n<thead>\n<tr>\n<th>&#x4E66;&#x540D;</th>\n<th>&#x8BFB;&#x4E66;&#x8BA1;&#x5212;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&#x300A;&#x7CBE;&#x901A;&#x7279;&#x5F81;&#x5DE5;&#x7A0B;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Python&#x7EDF;&#x8BA1;&#x5206;&#x6790;&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;&#x6027;&#x80FD;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Hadoop&#x6743;&#x5A01;&#x6307;&#x5357;&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;MapReduce&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Spring&#x5B9E;&#x6218;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Akka&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;JVM&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;JAVA&#x6027;&#x80FD;&#x8C03;&#x4F18;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Hbase&#x6743;&#x5A01;&#x6307;&#x5357;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;&#x56FE;&#x89E3;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x6570;&#x636E;&#x4E4B;&#x4E8C;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Scala&#x96C6;&#x5408;&#x6280;&#x672F;&#x624B;&#x518C;&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;&#x9AD8;&#x6027;&#x80FD;Scala&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;Scala&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Scala&#x7F16;&#x7A0B;&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;Scala&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x300B;</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>&#x300A;&#x56FE;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Scala&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Gof&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;&#x56FE;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;Scala Machine Learning&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;&#x7B97;&#x6CD5;&#x300B;</td>\n<td>b</td>\n</tr>\n<tr>\n<td>&#x300A;JAVA&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x300B;</td>\n<td>b</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>&#x300A;&#x804A;&#x804A;&#x4EC0;&#x4E48;&#x662F;&#x51FD;&#x6570;&#x5F0F;&#x300B;</li>\n<li>&#x300A;&#x804A;&#x804A;&#x5C3E;&#x9012;&#x5F52;, &#x662F;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x9012;&#x5F52;&#x90FD;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#xFF0C; &#x5982;&#x679C;&#x662F;&#x600E;&#x4E48;&#x8BC1;&#x660E;&#xFF0C; &#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x600E;&#x4E48;&#x628A;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x7684;&#x9012;&#x5F52;&#x64CD;&#x4F5C;&#x8F6C;&#x5316;&#x4E3A;&#x5C3E;&#x9012;&#x5F52;&#x300B;</li>\n<li>&#x300A;Scala&#x7684;Option&#x300B;</li>\n<li>FoldLeft &#x548C; FoldRight&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"读书清单\"><a href=\"#读书清单\" class=\"headerlink\" title=\"读书清单\"></a>读书清单</h1><table>\n<thead>\n<tr>\n<th>书名</th>\n<th>读书计划</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>《精通特征工程》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Python统计分析》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《性能》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《机器学习》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Hadoop权威指南》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《MapReduce设计模式》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Spring实战》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Akka》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《JVM》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《JAVA性能调优》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Hbase权威指南》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《图解深度学习》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《程序员的数据之二》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Scala集合技术手册》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《高性能Scala》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《Scala函数式编程》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Scala编程》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《Scala并发编程》</td>\n<td>Done</td>\n</tr>\n<tr>\n<td>《图解设计模式》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Scala设计模式》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Gof设计模式》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《图解设计模式》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《Scala Machine Learning》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《算法》</td>\n<td>b</td>\n</tr>\n<tr>\n<td>《JAVA函数式编程》</td>\n<td>b</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>《聊聊什么是函数式》</li>\n<li>《聊聊尾递归, 是不是所有的递归都可以转化为尾递归， 如果是怎么证明， 如果不是，怎么把可以转化为尾递归的递归操作转化为尾递归》</li>\n<li>《Scala的Option》</li>\n<li>FoldLeft 和 FoldRight有什么区别</li>\n</ul>\n"},{"title":"systemtap","date":"2020-04-08T01:56:19.000Z","_content":"\n\n# install \n\n```\nhttp://rpm.pbone.net/index.php3?stat=3&search=kernel-devel&srodzaj=3&dist[]=95\nhttps://linuxsoft.cern.ch/cern/centos/7/updates/x86_64/repoview/kernel-devel.html\n```\n","source":"_posts/systemtap.md","raw":"---\ntitle: systemtap\ndate: 2020-04-08 09:56:19\ntags: systemtap\n---\n\n\n# install \n\n```\nhttp://rpm.pbone.net/index.php3?stat=3&search=kernel-devel&srodzaj=3&dist[]=95\nhttps://linuxsoft.cern.ch/cern/centos/7/updates/x86_64/repoview/kernel-devel.html\n```\n","slug":"systemtap","published":1,"updated":"2020-04-08T03:07:16.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1enc0059bnavruwt3u59","content":"<h1 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://rpm.pbone.net/index.php3?stat=3&amp;search=kernel-devel&amp;srodzaj=3&amp;dist[]=95</div><div class=\"line\">https://linuxsoft.cern.ch/cern/centos/7/updates/x86_64/repoview/kernel-devel.html</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://rpm.pbone.net/index.php3?stat=3&amp;search=kernel-devel&amp;srodzaj=3&amp;dist[]=95</div><div class=\"line\">https://linuxsoft.cern.ch/cern/centos/7/updates/x86_64/repoview/kernel-devel.html</div></pre></td></tr></table></figure>\n"},{"title":"过拟合的原因","date":"2016-07-13T05:46:10.000Z","toc":true,"_content":"# 过拟合产生原因\n\n## 观测数据存在误差\n用于训练的样本数据，即观测数据因为各种个样的原因，总会产生误差。如果选择的假设过分追求能够完美解释观测数据（对于回归问题，可能是拟合曲线“穿过”所有的样本点，或者类似于均方误差过小），都有可能造成过拟合的现象。造成这种现象的根本原因在于，拟合曲线把误差也完美的学习了。\n\n## 产生样本因素很多，但是实际可能只有小部分提取出来\n影响产生观测数据的因素有很多，但是现实中可能仅提取几个和结果相关度很高的因素来进行分析。这个时候观察数据会倾向于围绕你的有限模型的预测结果呈正态分布，于是你实际观察到的结果就是这个正态分布的随机取样，这个取样很可能受到其余因素的影响偏离你的模型所预测的中心，这个时候便不能贪心不足地试图通过改变模型来“完美”匹配数据，因为那些使结果偏离你的预测的贡献因素不是你这个有限模型里面含有的因素所能概括的，硬要打肿脸充胖子只能导致不实际的模型。\n\n## 奥卡姆剃刀法则\n$$\np\\left( h|D\\right )   = p\\left( h\\right ) p\\left( D|h\\right ) \n$$\n高卡姆剃刀法则的含义是如果存在多个假设和观察一致，则应当选择最简单的那一个。最简单的假设意味着$\\left( h\\right)$较大，而与观测一致，意味着似然数值较大，即$p\\left( D|h\\right )$较大。\n\n奥卡姆剃刀法则青睐于先验概率，认为先验较大的模型有较大的优势；最大似然法则认为似然大的模型具有较大的优势；而贝叶斯法则则认为二者乘积决定模型的选择问题。\n\n## 贝叶斯奥卡姆剃刀\n上面的奥卡姆剃刀法则描述的是传统的剃刀法则，主要指先验概率$\\left( h\\right)$,而贝叶斯法奥卡姆剃刀法其实和似然$p\\left( D|h\\right )$上面，即该法则主要衡量的因素是似然本身出现的概率大小。 \n","source":"_posts/过拟合的原因.md","raw":"---\ntitle: 过拟合的原因\ndate: 2016-07-13 13:46:10\ntags:\ncategories: MachineLearning\ntoc: true\n---\n# 过拟合产生原因\n\n## 观测数据存在误差\n用于训练的样本数据，即观测数据因为各种个样的原因，总会产生误差。如果选择的假设过分追求能够完美解释观测数据（对于回归问题，可能是拟合曲线“穿过”所有的样本点，或者类似于均方误差过小），都有可能造成过拟合的现象。造成这种现象的根本原因在于，拟合曲线把误差也完美的学习了。\n\n## 产生样本因素很多，但是实际可能只有小部分提取出来\n影响产生观测数据的因素有很多，但是现实中可能仅提取几个和结果相关度很高的因素来进行分析。这个时候观察数据会倾向于围绕你的有限模型的预测结果呈正态分布，于是你实际观察到的结果就是这个正态分布的随机取样，这个取样很可能受到其余因素的影响偏离你的模型所预测的中心，这个时候便不能贪心不足地试图通过改变模型来“完美”匹配数据，因为那些使结果偏离你的预测的贡献因素不是你这个有限模型里面含有的因素所能概括的，硬要打肿脸充胖子只能导致不实际的模型。\n\n## 奥卡姆剃刀法则\n$$\np\\left( h|D\\right )   = p\\left( h\\right ) p\\left( D|h\\right ) \n$$\n高卡姆剃刀法则的含义是如果存在多个假设和观察一致，则应当选择最简单的那一个。最简单的假设意味着$\\left( h\\right)$较大，而与观测一致，意味着似然数值较大，即$p\\left( D|h\\right )$较大。\n\n奥卡姆剃刀法则青睐于先验概率，认为先验较大的模型有较大的优势；最大似然法则认为似然大的模型具有较大的优势；而贝叶斯法则则认为二者乘积决定模型的选择问题。\n\n## 贝叶斯奥卡姆剃刀\n上面的奥卡姆剃刀法则描述的是传统的剃刀法则，主要指先验概率$\\left( h\\right)$,而贝叶斯法奥卡姆剃刀法其实和似然$p\\left( D|h\\right )$上面，即该法则主要衡量的因素是似然本身出现的概率大小。 \n","slug":"过拟合的原因","published":1,"updated":"2017-02-15T08:07:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1end005cbnavanb1l4zi","content":"<h1 id=\"&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;\"><a href=\"#&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;\" class=\"headerlink\" title=\"&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;\"></a>&#x8FC7;&#x62DF;&#x5408;&#x4EA7;&#x751F;&#x539F;&#x56E0;</h1><h2 id=\"&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;\"><a href=\"#&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;\" class=\"headerlink\" title=\"&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;\"></a>&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x5B58;&#x5728;&#x8BEF;&#x5DEE;</h2><p>&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x56E0;&#x4E3A;&#x5404;&#x79CD;&#x4E2A;&#x6837;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x603B;&#x4F1A;&#x4EA7;&#x751F;&#x8BEF;&#x5DEE;&#x3002;&#x5982;&#x679C;&#x9009;&#x62E9;&#x7684;&#x5047;&#x8BBE;&#x8FC7;&#x5206;&#x8FFD;&#x6C42;&#x80FD;&#x591F;&#x5B8C;&#x7F8E;&#x89E3;&#x91CA;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#xFF08;&#x5BF9;&#x4E8E;&#x56DE;&#x5F52;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x201C;&#x7A7F;&#x8FC7;&#x201D;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x70B9;&#xFF0C;&#x6216;&#x8005;&#x7C7B;&#x4F3C;&#x4E8E;&#x5747;&#x65B9;&#x8BEF;&#x5DEE;&#x8FC7;&#x5C0F;&#xFF09;&#xFF0C;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x73B0;&#x8C61;&#x3002;&#x9020;&#x6210;&#x8FD9;&#x79CD;&#x73B0;&#x8C61;&#x7684;&#x6839;&#x672C;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#xFF0C;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x628A;&#x8BEF;&#x5DEE;&#x4E5F;&#x5B8C;&#x7F8E;&#x7684;&#x5B66;&#x4E60;&#x4E86;&#x3002;</p>\n<h2 id=\"&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;\"><a href=\"#&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;\" class=\"headerlink\" title=\"&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;\"></a>&#x4EA7;&#x751F;&#x6837;&#x672C;&#x56E0;&#x7D20;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x5C0F;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;</h2><p>&#x5F71;&#x54CD;&#x4EA7;&#x751F;&#x89C2;&#x6D4B;&#x6570;&#x636E;&#x7684;&#x56E0;&#x7D20;&#x6709;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5B9E;&#x4E2D;&#x53EF;&#x80FD;&#x4EC5;&#x63D0;&#x53D6;&#x51E0;&#x4E2A;&#x548C;&#x7ED3;&#x679C;&#x76F8;&#x5173;&#x5EA6;&#x5F88;&#x9AD8;&#x7684;&#x56E0;&#x7D20;&#x6765;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x89C2;&#x5BDF;&#x6570;&#x636E;&#x4F1A;&#x503E;&#x5411;&#x4E8E;&#x56F4;&#x7ED5;&#x4F60;&#x7684;&#x6709;&#x9650;&#x6A21;&#x578B;&#x7684;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x5448;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;&#x4E8E;&#x662F;&#x4F60;&#x5B9E;&#x9645;&#x89C2;&#x5BDF;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x53D6;&#x6837;&#xFF0C;&#x8FD9;&#x4E2A;&#x53D6;&#x6837;&#x5F88;&#x53EF;&#x80FD;&#x53D7;&#x5230;&#x5176;&#x4F59;&#x56E0;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#x504F;&#x79BB;&#x4F60;&#x7684;&#x6A21;&#x578B;&#x6240;&#x9884;&#x6D4B;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4FBF;&#x4E0D;&#x80FD;&#x8D2A;&#x5FC3;&#x4E0D;&#x8DB3;&#x5730;&#x8BD5;&#x56FE;&#x901A;&#x8FC7;&#x6539;&#x53D8;&#x6A21;&#x578B;&#x6765;&#x201C;&#x5B8C;&#x7F8E;&#x201D;&#x5339;&#x914D;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x4E9B;&#x4F7F;&#x7ED3;&#x679C;&#x504F;&#x79BB;&#x4F60;&#x7684;&#x9884;&#x6D4B;&#x7684;&#x8D21;&#x732E;&#x56E0;&#x7D20;&#x4E0D;&#x662F;&#x4F60;&#x8FD9;&#x4E2A;&#x6709;&#x9650;&#x6A21;&#x578B;&#x91CC;&#x9762;&#x542B;&#x6709;&#x7684;&#x56E0;&#x7D20;&#x6240;&#x80FD;&#x6982;&#x62EC;&#x7684;&#xFF0C;&#x786C;&#x8981;&#x6253;&#x80BF;&#x8138;&#x5145;&#x80D6;&#x5B50;&#x53EA;&#x80FD;&#x5BFC;&#x81F4;&#x4E0D;&#x5B9E;&#x9645;&#x7684;&#x6A21;&#x578B;&#x3002;</p>\n<h2 id=\"&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;\"><a href=\"#&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;\" class=\"headerlink\" title=\"&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;\"></a>&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;</h2><p>$$<br>p\\left( h|D\\right )   = p\\left( h\\right ) p\\left( D|h\\right )<br>$$<br>&#x9AD8;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5982;&#x679C;&#x5B58;&#x5728;&#x591A;&#x4E2A;&#x5047;&#x8BBE;&#x548C;&#x89C2;&#x5BDF;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x5E94;&#x5F53;&#x9009;&#x62E9;&#x6700;&#x7B80;&#x5355;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x5047;&#x8BBE;&#x610F;&#x5473;&#x7740;$\\left( h\\right)$&#x8F83;&#x5927;&#xFF0C;&#x800C;&#x4E0E;&#x89C2;&#x6D4B;&#x4E00;&#x81F4;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x4F3C;&#x7136;&#x6570;&#x503C;&#x8F83;&#x5927;&#xFF0C;&#x5373;$p\\left( D|h\\right )$&#x8F83;&#x5927;&#x3002;</p>\n<p>&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x9752;&#x7750;&#x4E8E;&#x5148;&#x9A8C;&#x6982;&#x7387;&#xFF0C;&#x8BA4;&#x4E3A;&#x5148;&#x9A8C;&#x8F83;&#x5927;&#x7684;&#x6A21;&#x578B;&#x6709;&#x8F83;&#x5927;&#x7684;&#x4F18;&#x52BF;&#xFF1B;&#x6700;&#x5927;&#x4F3C;&#x7136;&#x6CD5;&#x5219;&#x8BA4;&#x4E3A;&#x4F3C;&#x7136;&#x5927;&#x7684;&#x6A21;&#x578B;&#x5177;&#x6709;&#x8F83;&#x5927;&#x7684;&#x4F18;&#x52BF;&#xFF1B;&#x800C;&#x8D1D;&#x53F6;&#x65AF;&#x6CD5;&#x5219;&#x5219;&#x8BA4;&#x4E3A;&#x4E8C;&#x8005;&#x4E58;&#x79EF;&#x51B3;&#x5B9A;&#x6A21;&#x578B;&#x7684;&#x9009;&#x62E9;&#x95EE;&#x9898;&#x3002;</p>\n<h2 id=\"&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;\"><a href=\"#&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;\" class=\"headerlink\" title=\"&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;\"></a>&#x8D1D;&#x53F6;&#x65AF;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;</h2><p>&#x4E0A;&#x9762;&#x7684;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5219;&#x63CF;&#x8FF0;&#x7684;&#x662F;&#x4F20;&#x7EDF;&#x7684;&#x5243;&#x5200;&#x6CD5;&#x5219;&#xFF0C;&#x4E3B;&#x8981;&#x6307;&#x5148;&#x9A8C;&#x6982;&#x7387;$\\left( h\\right)$,&#x800C;&#x8D1D;&#x53F6;&#x65AF;&#x6CD5;&#x5965;&#x5361;&#x59C6;&#x5243;&#x5200;&#x6CD5;&#x5176;&#x5B9E;&#x548C;&#x4F3C;&#x7136;$p\\left( D|h\\right )$&#x4E0A;&#x9762;&#xFF0C;&#x5373;&#x8BE5;&#x6CD5;&#x5219;&#x4E3B;&#x8981;&#x8861;&#x91CF;&#x7684;&#x56E0;&#x7D20;&#x662F;&#x4F3C;&#x7136;&#x672C;&#x8EAB;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x5927;&#x5C0F;&#x3002; </p>\n","excerpt":"","more":"<h1 id=\"过拟合产生原因\"><a href=\"#过拟合产生原因\" class=\"headerlink\" title=\"过拟合产生原因\"></a>过拟合产生原因</h1><h2 id=\"观测数据存在误差\"><a href=\"#观测数据存在误差\" class=\"headerlink\" title=\"观测数据存在误差\"></a>观测数据存在误差</h2><p>用于训练的样本数据，即观测数据因为各种个样的原因，总会产生误差。如果选择的假设过分追求能够完美解释观测数据（对于回归问题，可能是拟合曲线“穿过”所有的样本点，或者类似于均方误差过小），都有可能造成过拟合的现象。造成这种现象的根本原因在于，拟合曲线把误差也完美的学习了。</p>\n<h2 id=\"产生样本因素很多，但是实际可能只有小部分提取出来\"><a href=\"#产生样本因素很多，但是实际可能只有小部分提取出来\" class=\"headerlink\" title=\"产生样本因素很多，但是实际可能只有小部分提取出来\"></a>产生样本因素很多，但是实际可能只有小部分提取出来</h2><p>影响产生观测数据的因素有很多，但是现实中可能仅提取几个和结果相关度很高的因素来进行分析。这个时候观察数据会倾向于围绕你的有限模型的预测结果呈正态分布，于是你实际观察到的结果就是这个正态分布的随机取样，这个取样很可能受到其余因素的影响偏离你的模型所预测的中心，这个时候便不能贪心不足地试图通过改变模型来“完美”匹配数据，因为那些使结果偏离你的预测的贡献因素不是你这个有限模型里面含有的因素所能概括的，硬要打肿脸充胖子只能导致不实际的模型。</p>\n<h2 id=\"奥卡姆剃刀法则\"><a href=\"#奥卡姆剃刀法则\" class=\"headerlink\" title=\"奥卡姆剃刀法则\"></a>奥卡姆剃刀法则</h2><p>$$<br>p\\left( h|D\\right )   = p\\left( h\\right ) p\\left( D|h\\right )<br>$$<br>高卡姆剃刀法则的含义是如果存在多个假设和观察一致，则应当选择最简单的那一个。最简单的假设意味着$\\left( h\\right)$较大，而与观测一致，意味着似然数值较大，即$p\\left( D|h\\right )$较大。</p>\n<p>奥卡姆剃刀法则青睐于先验概率，认为先验较大的模型有较大的优势；最大似然法则认为似然大的模型具有较大的优势；而贝叶斯法则则认为二者乘积决定模型的选择问题。</p>\n<h2 id=\"贝叶斯奥卡姆剃刀\"><a href=\"#贝叶斯奥卡姆剃刀\" class=\"headerlink\" title=\"贝叶斯奥卡姆剃刀\"></a>贝叶斯奥卡姆剃刀</h2><p>上面的奥卡姆剃刀法则描述的是传统的剃刀法则，主要指先验概率$\\left( h\\right)$,而贝叶斯法奥卡姆剃刀法其实和似然$p\\left( D|h\\right )$上面，即该法则主要衡量的因素是似然本身出现的概率大小。 </p>\n"},{"title":"通俗语言解释Monad","date":"2019-07-25T09:38:21.000Z","_content":"\n\n\n","source":"_posts/通俗语言解释Monad-1.md","raw":"---\ntitle: 通俗语言解释Monad\ndate: 2019-07-25 17:38:21\ntags: Scala\n---\n\n\n\n","slug":"通俗语言解释Monad-1","published":1,"updated":"2019-07-25T09:38:37.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1ene005ebnavjjefgf8n","content":"","excerpt":"","more":""},{"title":"聊聊Scala判等","date":"2019-07-03T14:19:56.000Z","_content":"","source":"_posts/聊聊Scala判等.md","raw":"---\ntitle: 聊聊Scala判等\ndate: 2019-07-03 22:19:56\ntags:\n---\n","slug":"聊聊Scala判等","published":1,"updated":"2019-07-03T14:19:56.089Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1enf005hbnavn3buafwv","content":"","excerpt":"","more":""},{"title":"通俗语言解释Monad","date":"2019-07-25T09:38:12.000Z","_content":"","source":"_posts/通俗语言解释Monad.md","raw":"---\ntitle: 通俗语言解释Monad\ndate: 2019-07-25 17:38:12\ntags:\n---\n","slug":"通俗语言解释Monad","published":1,"updated":"2019-07-25T09:38:12.138Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1enf005kbnav2s5qg8ey","content":"","excerpt":"","more":""},{"title":"基础概率分布","date":"2019-06-22T09:17:34.000Z","_content":"## 线性回归的基本假设是什么？\n-   回归分析模型是正确设定。回归分析的结果和检验结果只有统计意义。即便是回归分析的结果在统计意义上非常显著，我们也很难说x与y之间就一定存在某种显著关系。如果回归分析模型设定错误，即使回归分析结果显著，也不能得到有意义的结论。回归分析不能帮助我们设定回归分析模型，只能帮助我们验证回归分析模型。[https://zhuanlan.zhihu.com/p/45427806]\n-   自变量方差趋近于一个非零有限常数。 如果X的方差趋近于无穷，则X和Y的相关系数趋向于0， 则X和Y之间没有关系。\n-   残差（随机扰动）期望为0 ，方差相同， 且在样本量趋于无穷的情况系服从正太分布。\n\n## 线性回归模型中为啥要假设残差符合正态分布？\n\n## 最小二乘估计和极大似然估计有什么关系?\n\n## 给出一组样本， 如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话， 那么可信度是多少呢？\n\n## 线性回归和正态分布以及t-检验有什么关系？\n\n## 生成式模型和判别式模型到底有什么区别？\n\n## 可以用马尔科夫链蒙特卡洛方法进行线性回归吗？\n\n\n## 参考文献\n\n[回归分析的五个假设](https://blog.csdn.net/Noob_daniel/article/details/76087829)\n","source":"_posts/基础概率分布.md","raw":"---\ntitle: 基础概率分布\ndate: 2019-06-22 17:17:34\ntags:\n---\n## 线性回归的基本假设是什么？\n-   回归分析模型是正确设定。回归分析的结果和检验结果只有统计意义。即便是回归分析的结果在统计意义上非常显著，我们也很难说x与y之间就一定存在某种显著关系。如果回归分析模型设定错误，即使回归分析结果显著，也不能得到有意义的结论。回归分析不能帮助我们设定回归分析模型，只能帮助我们验证回归分析模型。[https://zhuanlan.zhihu.com/p/45427806]\n-   自变量方差趋近于一个非零有限常数。 如果X的方差趋近于无穷，则X和Y的相关系数趋向于0， 则X和Y之间没有关系。\n-   残差（随机扰动）期望为0 ，方差相同， 且在样本量趋于无穷的情况系服从正太分布。\n\n## 线性回归模型中为啥要假设残差符合正态分布？\n\n## 最小二乘估计和极大似然估计有什么关系?\n\n## 给出一组样本， 如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话， 那么可信度是多少呢？\n\n## 线性回归和正态分布以及t-检验有什么关系？\n\n## 生成式模型和判别式模型到底有什么区别？\n\n## 可以用马尔科夫链蒙特卡洛方法进行线性回归吗？\n\n\n## 参考文献\n\n[回归分析的五个假设](https://blog.csdn.net/Noob_daniel/article/details/76087829)\n","slug":"基础概率分布","published":1,"updated":"2019-06-28T09:15:00.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1eng005nbnavbjh7s444","content":"<h2 id=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"><a href=\"#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\" class=\"headerlink\" title=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;\"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x672C;&#x5047;&#x8BBE;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</h2><ul>\n<li>&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x662F;&#x6B63;&#x786E;&#x8BBE;&#x5B9A;&#x3002;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x7ED3;&#x679C;&#x548C;&#x68C0;&#x9A8C;&#x7ED3;&#x679C;&#x53EA;&#x6709;&#x7EDF;&#x8BA1;&#x610F;&#x4E49;&#x3002;&#x5373;&#x4FBF;&#x662F;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x7ED3;&#x679C;&#x5728;&#x7EDF;&#x8BA1;&#x610F;&#x4E49;&#x4E0A;&#x975E;&#x5E38;&#x663E;&#x8457;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5F88;&#x96BE;&#x8BF4;x&#x4E0E;y&#x4E4B;&#x95F4;&#x5C31;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#x67D0;&#x79CD;&#x663E;&#x8457;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x679C;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x8BBE;&#x5B9A;&#x9519;&#x8BEF;&#xFF0C;&#x5373;&#x4F7F;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7ED3;&#x679C;&#x663E;&#x8457;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x5F97;&#x5230;&#x6709;&#x610F;&#x4E49;&#x7684;&#x7ED3;&#x8BBA;&#x3002;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x4E0D;&#x80FD;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x8BBE;&#x5B9A;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#xFF0C;&#x53EA;&#x80FD;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x9A8C;&#x8BC1;&#x56DE;&#x5F52;&#x5206;&#x6790;&#x6A21;&#x578B;&#x3002;[<a href=\"https://zhuanlan.zhihu.com/p/45427806]\" target=\"_blank\" rel=\"external\">https://zhuanlan.zhihu.com/p/45427806]</a></li>\n<li>&#x81EA;&#x53D8;&#x91CF;&#x65B9;&#x5DEE;&#x8D8B;&#x8FD1;&#x4E8E;&#x4E00;&#x4E2A;&#x975E;&#x96F6;&#x6709;&#x9650;&#x5E38;&#x6570;&#x3002; &#x5982;&#x679C;X&#x7684;&#x65B9;&#x5DEE;&#x8D8B;&#x8FD1;&#x4E8E;&#x65E0;&#x7A77;&#xFF0C;&#x5219;X&#x548C;Y&#x7684;&#x76F8;&#x5173;&#x7CFB;&#x6570;&#x8D8B;&#x5411;&#x4E8E;0&#xFF0C; &#x5219;X&#x548C;Y&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x3002;</li>\n<li>&#x6B8B;&#x5DEE;&#xFF08;&#x968F;&#x673A;&#x6270;&#x52A8;&#xFF09;&#x671F;&#x671B;&#x4E3A;0 &#xFF0C;&#x65B9;&#x5DEE;&#x76F8;&#x540C;&#xFF0C; &#x4E14;&#x5728;&#x6837;&#x672C;&#x91CF;&#x8D8B;&#x4E8E;&#x65E0;&#x7A77;&#x7684;&#x60C5;&#x51B5;&#x7CFB;&#x670D;&#x4ECE;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x3002;</li>\n</ul>\n<h2 id=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;\"><a href=\"#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;\" class=\"headerlink\" title=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;\"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x4E2D;&#x4E3A;&#x5565;&#x8981;&#x5047;&#x8BBE;&#x6B8B;&#x5DEE;&#x7B26;&#x5408;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF1F;</h2><h2 id=\"&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;\"><a href=\"#&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;\" class=\"headerlink\" title=\"&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;?\"></a>&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x4F30;&#x8BA1;&#x548C;&#x6781;&#x5927;&#x4F3C;&#x7136;&#x4F30;&#x8BA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;?</h2><h2 id=\"&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C;-&#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C;-&#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;\"><a href=\"#&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C;-&#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C;-&#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;\" class=\"headerlink\" title=\"&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C; &#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C; &#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;\"></a>&#x7ED9;&#x51FA;&#x4E00;&#x7EC4;&#x6837;&#x672C;&#xFF0C; &#x5982;&#x4F55;&#x8BC1;&#x660E;&#x8BE5;&#x7EC4;&#x6837;&#x672C;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x8BC1;&#x660E;&#x662F;&#x6765;&#x6E90;&#x4E8E;&#x6B63;&#x592A;&#x5206;&#x5E03;&#x7684;&#x8BDD;&#xFF0C; &#x90A3;&#x4E48;&#x53EF;&#x4FE1;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#x5462;&#xFF1F;</h2><h2 id=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;\"><a href=\"#&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;\" class=\"headerlink\" title=\"&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;\"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x548C;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4EE5;&#x53CA;t-&#x68C0;&#x9A8C;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;</h2><h2 id=\"&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;\"><a href=\"#&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;\" class=\"headerlink\" title=\"&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;\"></a>&#x751F;&#x6210;&#x5F0F;&#x6A21;&#x578B;&#x548C;&#x5224;&#x522B;&#x5F0F;&#x6A21;&#x578B;&#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF1F;</h2><h2 id=\"&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;\"><a href=\"#&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;\" class=\"headerlink\" title=\"&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;\"></a>&#x53EF;&#x4EE5;&#x7528;&#x9A6C;&#x5C14;&#x79D1;&#x592B;&#x94FE;&#x8499;&#x7279;&#x5361;&#x6D1B;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5417;&#xFF1F;</h2><h2 id=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"><a href=\"#&#x53C2;&#x8003;&#x6587;&#x732E;\" class=\"headerlink\" title=\"&#x53C2;&#x8003;&#x6587;&#x732E;\"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h2><p><a href=\"https://blog.csdn.net/Noob_daniel/article/details/76087829\" target=\"_blank\" rel=\"external\">&#x56DE;&#x5F52;&#x5206;&#x6790;&#x7684;&#x4E94;&#x4E2A;&#x5047;&#x8BBE;</a></p>\n","excerpt":"","more":"<h2 id=\"线性回归的基本假设是什么？\"><a href=\"#线性回归的基本假设是什么？\" class=\"headerlink\" title=\"线性回归的基本假设是什么？\"></a>线性回归的基本假设是什么？</h2><ul>\n<li>回归分析模型是正确设定。回归分析的结果和检验结果只有统计意义。即便是回归分析的结果在统计意义上非常显著，我们也很难说x与y之间就一定存在某种显著关系。如果回归分析模型设定错误，即使回归分析结果显著，也不能得到有意义的结论。回归分析不能帮助我们设定回归分析模型，只能帮助我们验证回归分析模型。[<a href=\"https://zhuanlan.zhihu.com/p/45427806]\">https://zhuanlan.zhihu.com/p/45427806]</a></li>\n<li>自变量方差趋近于一个非零有限常数。 如果X的方差趋近于无穷，则X和Y的相关系数趋向于0， 则X和Y之间没有关系。</li>\n<li>残差（随机扰动）期望为0 ，方差相同， 且在样本量趋于无穷的情况系服从正太分布。</li>\n</ul>\n<h2 id=\"线性回归模型中为啥要假设残差符合正态分布？\"><a href=\"#线性回归模型中为啥要假设残差符合正态分布？\" class=\"headerlink\" title=\"线性回归模型中为啥要假设残差符合正态分布？\"></a>线性回归模型中为啥要假设残差符合正态分布？</h2><h2 id=\"最小二乘估计和极大似然估计有什么关系\"><a href=\"#最小二乘估计和极大似然估计有什么关系\" class=\"headerlink\" title=\"最小二乘估计和极大似然估计有什么关系?\"></a>最小二乘估计和极大似然估计有什么关系?</h2><h2 id=\"给出一组样本，-如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话，-那么可信度是多少呢？\"><a href=\"#给出一组样本，-如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话，-那么可信度是多少呢？\" class=\"headerlink\" title=\"给出一组样本， 如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话， 那么可信度是多少呢？\"></a>给出一组样本， 如何证明该组样本来源于正太分布？如果可以证明是来源于正太分布的话， 那么可信度是多少呢？</h2><h2 id=\"线性回归和正态分布以及t-检验有什么关系？\"><a href=\"#线性回归和正态分布以及t-检验有什么关系？\" class=\"headerlink\" title=\"线性回归和正态分布以及t-检验有什么关系？\"></a>线性回归和正态分布以及t-检验有什么关系？</h2><h2 id=\"生成式模型和判别式模型到底有什么区别？\"><a href=\"#生成式模型和判别式模型到底有什么区别？\" class=\"headerlink\" title=\"生成式模型和判别式模型到底有什么区别？\"></a>生成式模型和判别式模型到底有什么区别？</h2><h2 id=\"可以用马尔科夫链蒙特卡洛方法进行线性回归吗？\"><a href=\"#可以用马尔科夫链蒙特卡洛方法进行线性回归吗？\" class=\"headerlink\" title=\"可以用马尔科夫链蒙特卡洛方法进行线性回归吗？\"></a>可以用马尔科夫链蒙特卡洛方法进行线性回归吗？</h2><h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p><a href=\"https://blog.csdn.net/Noob_daniel/article/details/76087829\">回归分析的五个假设</a></p>\n"},{"title":"财务造假","date":"2019-11-13T04:21:15.000Z","_content":"\n\n# text\nhttps://www.zhihu.com/search?type=content&q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87\n\n","source":"_posts/财务造假.md","raw":"---\ntitle: 财务造假\ndate: 2019-11-13 12:21:15\ntags:\n---\n\n\n# text\nhttps://www.zhihu.com/search?type=content&q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87\n\n","slug":"财务造假","published":1,"updated":"2019-11-13T04:22:04.116Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0g1eni005pbnavz8i80unv","content":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1><p><a href=\"https://www.zhihu.com/search?type=content&amp;q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/search?type=content&amp;q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87</a></p>\n","excerpt":"","more":"<h1 id=\"text\"><a href=\"#text\" class=\"headerlink\" title=\"text\"></a>text</h1><p><a href=\"https://www.zhihu.com/search?type=content&amp;q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87\">https://www.zhihu.com/search?type=content&amp;q=%E8%B4%A2%E5%8A%A1%E9%80%A0%E5%81%87</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckb0g1ela0008bnav95dqpq7x","category_id":"ckb0g1el60005bnavjedujziy","_id":"ckb0g1ele000ebnav79sj1irg"},{"post_id":"ckb0g1ekz0002bnavuj9itnc7","category_id":"ckb0g1el60005bnavjedujziy","_id":"ckb0g1elg000ibnavq72w28ko"},{"post_id":"ckb0g1el50004bnavi08qxa5i","category_id":"ckb0g1elb000abnavzlrgxskm","_id":"ckb0g1elj000mbnav116kmpt7"},{"post_id":"ckb0g1el90007bnav5pab3ocv","category_id":"ckb0g1elg000gbnavqclyt6z8","_id":"ckb0g1ell000sbnavn5uim2ot"},{"post_id":"ckb0g1elk000pbnav3ke401di","category_id":"ckb0g1elj000nbnavlssnpye1","_id":"ckb0g1elm000wbnav9m072zdb"},{"post_id":"ckb0g1elc000dbnavny8szntm","category_id":"ckb0g1elj000nbnavlssnpye1","_id":"ckb0g1eln000ybnavsg3novq4"},{"post_id":"ckb0g1elm000xbnavan6e3fjk","category_id":"ckb0g1elq0011bnavcziwi8i1","_id":"ckb0g1elu001abnavbvw3k4d9"},{"post_id":"ckb0g1em2001qbnavne346eqe","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1em80025bnav8serbv6e"},{"post_id":"ckb0g1em4001vbnavjdg4sm9n","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1ema002bbnavrtg3i2yb"},{"post_id":"ckb0g1em80026bnavyvcgafb3","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emg002ebnavued7u0ww"},{"post_id":"ckb0g1em90029bnavkyv3vc7z","category_id":"ckb0g1em80027bnavhb5xh63j","_id":"ckb0g1emh002ibnavt98bczda"},{"post_id":"ckb0g1em5001xbnavykfbgcjs","category_id":"ckb0g1em80027bnavhb5xh63j","_id":"ckb0g1emh002lbnavcyjdyg87"},{"post_id":"ckb0g1ema002dbnavkjqze5zt","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emi002obnavl7a31tbu"},{"post_id":"ckb0g1emh002mbnavyvkq4y3n","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emj002ubnav286uyamo"},{"post_id":"ckb0g1emi002pbnav18vaajqf","category_id":"ckb0g1el60005bnavjedujziy","_id":"ckb0g1emk002xbnaveo4vkibs"},{"post_id":"ckb0g1emk002vbnavowrxcgv5","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emm0032bnavnyn85i2y"},{"post_id":"ckb0g1emk002ybnavwpaf3lhn","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emm0035bnav3aaejxc3"},{"post_id":"ckb0g1eml0030bnaviv9f8xf2","category_id":"ckb0g1el60005bnavjedujziy","_id":"ckb0g1emn0039bnavs2njz6o6"},{"post_id":"ckb0g1emq003jbnav4sg4rj84","category_id":"ckb0g1elg000gbnavqclyt6z8","_id":"ckb0g1emt003qbnav00hwoouc"},{"post_id":"ckb0g1emo003cbnav0ujhxofe","category_id":"ckb0g1emp003gbnavhejiqnoz","_id":"ckb0g1emu003ubnavdzvw8lrh"},{"post_id":"ckb0g1emr003lbnaviq7w2z1t","category_id":"ckb0g1ems003pbnavvijxpyzi","_id":"ckb0g1emx0042bnavpt9lqgoe"},{"post_id":"ckb0g1emv003xbnavou4p60uv","category_id":"ckb0g1em4001ubnav9uwgvvvq","_id":"ckb0g1emz0045bnavfnkyxfnz"},{"post_id":"ckb0g1emw0040bnav7w4g2uh9","category_id":"ckb0g1ems003pbnavvijxpyzi","_id":"ckb0g1en00049bnavhaev1r9i"},{"post_id":"ckb0g1ems003obnavevihi29k","category_id":"ckb0g1emv003ybnavafrpl8zy","_id":"ckb0g1en1004bbnav4w3j0ee5"},{"post_id":"ckb0g1emu003vbnavxfbdmluq","category_id":"ckb0g1emv003ybnavafrpl8zy","_id":"ckb0g1en2004gbnavevsu6z4l"},{"post_id":"ckb0g1en1004cbnav1uobttp4","category_id":"ckb0g1emv003ybnavafrpl8zy","_id":"ckb0g1en3004jbnav32xia2lq"},{"post_id":"ckb0g1en2004fbnavwafkhswv","category_id":"ckb0g1emv003ybnavafrpl8zy","_id":"ckb0g1en4004mbnavb9agacz2"},{"post_id":"ckb0g1en3004kbnavw6und8rh","category_id":"ckb0g1ems003pbnavvijxpyzi","_id":"ckb0g1en5004sbnavf6nx199u"},{"post_id":"ckb0g1en4004nbnav6vizkd4u","category_id":"ckb0g1en5004rbnavxiam9l9c","_id":"ckb0g1en90051bnavx3t9odfx"},{"post_id":"ckb0g1en90053bnavwyusyjms","category_id":"ckb0g1enb0056bnavzu4dnio6","_id":"ckb0g1enf005gbnavypbsoomd"},{"post_id":"ckb0g1end005cbnavanb1l4zi","category_id":"ckb0g1enb0056bnavzu4dnio6","_id":"ckb0g1enf005jbnavyvdfsbog"}],"PostTag":[{"post_id":"ckb0g1ekz0002bnavuj9itnc7","tag_id":"ckb0g1el90006bnav5vmoy63b","_id":"ckb0g1elc000cbnav2uua6bbg"},{"post_id":"ckb0g1el50004bnavi08qxa5i","tag_id":"ckb0g1elc000bbnava7lzq8s3","_id":"ckb0g1eli000kbnavwtq5n88e"},{"post_id":"ckb0g1el90007bnav5pab3ocv","tag_id":"ckb0g1elg000hbnav0yy60699","_id":"ckb0g1elk000qbnavhizg8guf"},{"post_id":"ckb0g1ela0008bnav95dqpq7x","tag_id":"ckb0g1elj000obnav3rua392b","_id":"ckb0g1elm000vbnavx08xqui9"},{"post_id":"ckb0g1elb0009bnavu1fybung","tag_id":"ckb0g1ell000tbnavzts8yb3q","_id":"ckb0g1elq0012bnavchskswq3"},{"post_id":"ckb0g1elf000fbnavfj2vdkq0","tag_id":"ckb0g1elg000hbnav0yy60699","_id":"ckb0g1els0016bnavqmlzb8ab"},{"post_id":"ckb0g1elh000jbnavzugmwbug","tag_id":"ckb0g1els0015bnavwzvfob52","_id":"ckb0g1elv001cbnav1spp2tm4"},{"post_id":"ckb0g1eli000lbnav01v4p9nm","tag_id":"ckb0g1elu0019bnav9s1ugqgt","_id":"ckb0g1elx001gbnavc71fef77"},{"post_id":"ckb0g1elk000pbnav3ke401di","tag_id":"ckb0g1elw001ebnavlki1uulb","_id":"ckb0g1elz001kbnav7wjraolb"},{"post_id":"ckb0g1ell000rbnavizkwnhhn","tag_id":"ckb0g1ely001ibnavgt9ivxvs","_id":"ckb0g1em2001obnav7w3zpy8d"},{"post_id":"ckb0g1eln000zbnavpyffrxu7","tag_id":"ckb0g1em1001nbnav33zvhlre","_id":"ckb0g1em4001tbnava431141c"},{"post_id":"ckb0g1elq0013bnavfo8xre2a","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1em6001ybnavgfdkn3px"},{"post_id":"ckb0g1em5001xbnavykfbgcjs","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1em70021bnavngvfs21f"},{"post_id":"ckb0g1elr0014bnavmc0izdph","tag_id":"ckb0g1em4001wbnavgyozr3a9","_id":"ckb0g1em80024bnavvp22zfp0"},{"post_id":"ckb0g1em6001zbnav4sxez8q9","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1em90028bnavpq71v34b"},{"post_id":"ckb0g1els0017bnav246t692r","tag_id":"ckb0g1em70022bnavxgolnwkd","_id":"ckb0g1ema002cbnav299rtxme"},{"post_id":"ckb0g1em90029bnavkyv3vc7z","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1emg002fbnavd3vc6n8s"},{"post_id":"ckb0g1ely001jbnavgblajw9m","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1emh002jbnavligitoxm"},{"post_id":"ckb0g1elz001lbnavquaepacq","tag_id":"ckb0g1emg002hbnavaqpwks7g","_id":"ckb0g1emj002qbnave0n2qgzv"},{"post_id":"ckb0g1emi002pbnav18vaajqf","tag_id":"ckb0g1el90006bnav5vmoy63b","_id":"ckb0g1emj002tbnava8076izq"},{"post_id":"ckb0g1em1001mbnav4kedc31n","tag_id":"ckb0g1emi002nbnavrzj7p3d0","_id":"ckb0g1emk002wbnav1r6vadlg"},{"post_id":"ckb0g1em2001qbnavne346eqe","tag_id":"ckb0g1emj002sbnavmis9fjk2","_id":"ckb0g1emm0031bnavtrru0jem"},{"post_id":"ckb0g1emk002ybnavwpaf3lhn","tag_id":"ckb0g1emj002sbnavmis9fjk2","_id":"ckb0g1emm0034bnavvzpy0muh"},{"post_id":"ckb0g1eml0030bnaviv9f8xf2","tag_id":"ckb0g1el90006bnav5vmoy63b","_id":"ckb0g1emn0038bnavievg928r"},{"post_id":"ckb0g1em4001vbnavjdg4sm9n","tag_id":"ckb0g1emj002sbnavmis9fjk2","_id":"ckb0g1emo003bbnavqy30ja30"},{"post_id":"ckb0g1em70023bnav027uvyvi","tag_id":"ckb0g1emm0036bnavuhhhle9k","_id":"ckb0g1emp003ebnav8z2avov6"},{"post_id":"ckb0g1em80026bnavyvcgafb3","tag_id":"ckb0g1emo003dbnavymgee8rl","_id":"ckb0g1emr003kbnavj1y34j6v"},{"post_id":"ckb0g1emq003jbnav4sg4rj84","tag_id":"ckb0g1elg000hbnav0yy60699","_id":"ckb0g1ems003nbnav2fpsyk1j"},{"post_id":"ckb0g1ema002dbnavkjqze5zt","tag_id":"ckb0g1emj002sbnavmis9fjk2","_id":"ckb0g1emt003rbnavuwj7k3zn"},{"post_id":"ckb0g1emg002gbnav1rlkj7e9","tag_id":"ckb0g1emr003mbnavy061gihk","_id":"ckb0g1emv003wbnav4oxgcvgz"},{"post_id":"ckb0g1emh002mbnavyvkq4y3n","tag_id":"ckb0g1emu003tbnavu5cq2l5u","_id":"ckb0g1emx0041bnaviymxi1pt"},{"post_id":"ckb0g1emj002rbnav6txy1f6u","tag_id":"ckb0g1emj002sbnavmis9fjk2","_id":"ckb0g1en00048bnavgwg6p4vq"},{"post_id":"ckb0g1emk002vbnavowrxcgv5","tag_id":"ckb0g1emz0046bnavpvxxzhje","_id":"ckb0g1en2004ebnav02hdpa84"},{"post_id":"ckb0g1emo003cbnav0ujhxofe","tag_id":"ckb0g1en2004dbnavhtigk8bo","_id":"ckb0g1en4004lbnavaovpoap6"},{"post_id":"ckb0g1emp003fbnavejpjq2ub","tag_id":"ckb0g1en3004ibnav6vhjtv9v","_id":"ckb0g1en5004qbnavgbdohr4c"},{"post_id":"ckb0g1emr003lbnaviq7w2z1t","tag_id":"ckb0g1en5004obnav0lf4oo8a","_id":"ckb0g1en7004wbnav7xd5prfj"},{"post_id":"ckb0g1en6004tbnavt2jpjoed","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1en8004ybnavyonuoorp"},{"post_id":"ckb0g1ems003obnavevihi29k","tag_id":"ckb0g1en6004ubnavakfl1gsu","_id":"ckb0g1en90052bnav55xk5pwm"},{"post_id":"ckb0g1emt003sbnavt7g702b2","tag_id":"ckb0g1en80050bnavdm4n6gcv","_id":"ckb0g1enc0058bnavdcpyxqr5"},{"post_id":"ckb0g1enb0057bnavvg4iiawv","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1enc005bbnavcnhixdvu"},{"post_id":"ckb0g1emu003vbnavxfbdmluq","tag_id":"ckb0g1en6004ubnavakfl1gsu","_id":"ckb0g1end005dbnavwwyxg3kj"},{"post_id":"ckb0g1emw0040bnav7w4g2uh9","tag_id":"ckb0g1enc005abnav8e2tgpta","_id":"ckb0g1enf005ibnav3n0fc3ig"},{"post_id":"ckb0g1ene005ebnavjjefgf8n","tag_id":"ckb0g1em3001rbnavdraajux9","_id":"ckb0g1eng005lbnavez5trdjb"},{"post_id":"ckb0g1emx0043bnav2510exq6","tag_id":"ckb0g1ene005fbnavmbsu1u5h","_id":"ckb0g1eni005obnavf5heehzv"},{"post_id":"ckb0g1emz0047bnav8oezmkw7","tag_id":"ckb0g1eng005mbnavtri7wwrt","_id":"ckb0g1enj005rbnavyimirp24"},{"post_id":"ckb0g1en0004abnavw8zdcv2p","tag_id":"ckb0g1enj005qbnavtcf645aw","_id":"ckb0g1enk005tbnav5z3pbapo"},{"post_id":"ckb0g1en1004cbnav1uobttp4","tag_id":"ckb0g1enj005sbnavmb3onzxd","_id":"ckb0g1enk005vbnavw9n7lab7"},{"post_id":"ckb0g1en2004fbnavwafkhswv","tag_id":"ckb0g1enj005sbnavmb3onzxd","_id":"ckb0g1enk005xbnavwc5r1tuu"},{"post_id":"ckb0g1en3004kbnavw6und8rh","tag_id":"ckb0g1enk005wbnavs7x7p9jb","_id":"ckb0g1enl005zbnavqs6o3jpb"},{"post_id":"ckb0g1en4004nbnav6vizkd4u","tag_id":"ckb0g1enl005ybnavg3f0w7gw","_id":"ckb0g1enl0061bnav90txxuyk"},{"post_id":"ckb0g1en5004pbnavphlljqar","tag_id":"ckb0g1enl0060bnav20wxc3ca","_id":"ckb0g1enm0063bnavn1eshkph"},{"post_id":"ckb0g1enc0059bnavruwt3u59","tag_id":"ckb0g1enl0062bnavdnlyn6od","_id":"ckb0g1enm0064bnavgm3our06"}],"Tag":[{"name":"竞赛","_id":"ckb0g1el90006bnav5vmoy63b"},{"name":"Python","_id":"ckb0g1elc000bbnava7lzq8s3"},{"name":"tensorflow","_id":"ckb0g1elg000hbnav0yy60699"},{"name":"Socket","_id":"ckb0g1elj000obnav3rua392b"},{"name":"CNN","_id":"ckb0g1ell000tbnavzts8yb3q"},{"name":"BOOKS","_id":"ckb0g1els0015bnavwzvfob52"},{"name":"GIT","_id":"ckb0g1elu0019bnav9s1ugqgt"},{"name":"基础","_id":"ckb0g1elw001ebnavlki1uulb"},{"name":"git","_id":"ckb0g1ely001ibnavgt9ivxvs"},{"name":"Tensorflow","_id":"ckb0g1em1001nbnav33zvhlre"},{"name":"Scala","_id":"ckb0g1em3001rbnavdraajux9"},{"name":"JVM","_id":"ckb0g1em4001wbnavgyozr3a9"},{"name":"JVM,GC","_id":"ckb0g1em70022bnavxgolnwkd"},{"name":"ML","_id":"ckb0g1emg002hbnavaqpwks7g"},{"name":"Flink","_id":"ckb0g1emi002nbnavrzj7p3d0"},{"name":"Spark","_id":"ckb0g1emj002sbnavmis9fjk2"},{"name":"Scala, 并发编程","_id":"ckb0g1emm0036bnavuhhhle9k"},{"name":"Spark Streaming","_id":"ckb0g1emo003dbnavymgee8rl"},{"name":"maven","_id":"ckb0g1emr003mbnavy061gihk"},{"name":"Spark DataFrame","_id":"ckb0g1emu003tbnavu5cq2l5u"},{"name":"Spark Scala Streaming","_id":"ckb0g1emz0046bnavpvxxzhje"},{"name":"highlight","_id":"ckb0g1en2004dbnavhtigk8bo"},{"name":"python","_id":"ckb0g1en3004ibnav6vhjtv9v"},{"name":"English","_id":"ckb0g1en5004obnav0lf4oo8a"},{"name":"Q&A","_id":"ckb0g1en6004ubnavakfl1gsu"},{"name":"maven gradle","_id":"ckb0g1en80050bnavdm4n6gcv"},{"name":"简体","_id":"ckb0g1enc005abnav8e2tgpta"},{"name":"scala","_id":"ckb0g1ene005fbnavmbsu1u5h"},{"name":"Spring","_id":"ckb0g1eng005mbnavtri7wwrt"},{"name":"data","_id":"ckb0g1enj005qbnavtcf645aw"},{"name":"plugins","_id":"ckb0g1enj005sbnavmb3onzxd"},{"name":"繁體","_id":"ckb0g1enk005wbnavs7x7p9jb"},{"name":"VIM","_id":"ckb0g1enl005ybnavg3f0w7gw"},{"name":"SVM","_id":"ckb0g1enl0060bnav20wxc3ca"},{"name":"systemtap","_id":"ckb0g1enl0062bnavdnlyn6od"}]}}